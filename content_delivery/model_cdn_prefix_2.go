/*
content-delivery

Cotent Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// CdnPrefix2 CdnPrefix collection
type CdnPrefix2 struct {
	Page PageType `json:"page"`
	CdnPrefixes []CdnPrefix3 `json:"cdnPrefixes"`
}

// NewCdnPrefix2 instantiates a new CdnPrefix2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCdnPrefix2(page PageType, cdnPrefixes []CdnPrefix3) *CdnPrefix2 {
	this := CdnPrefix2{}
	this.Page = page
	this.CdnPrefixes = cdnPrefixes
	return &this
}

// NewCdnPrefix2WithDefaults instantiates a new CdnPrefix2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCdnPrefix2WithDefaults() *CdnPrefix2 {
	this := CdnPrefix2{}
	return &this
}

// GetPage returns the Page field value
func (o *CdnPrefix2) GetPage() PageType {
	if o == nil {
		var ret PageType
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *CdnPrefix2) GetPageOk() (*PageType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *CdnPrefix2) SetPage(v PageType) {
	o.Page = v
}

// GetCdnPrefixes returns the CdnPrefixes field value
func (o *CdnPrefix2) GetCdnPrefixes() []CdnPrefix3 {
	if o == nil {
		var ret []CdnPrefix3
		return ret
	}

	return o.CdnPrefixes
}

// GetCdnPrefixesOk returns a tuple with the CdnPrefixes field value
// and a boolean to check if the value has been set.
func (o *CdnPrefix2) GetCdnPrefixesOk() (*[]CdnPrefix3, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.CdnPrefixes, true
}

// SetCdnPrefixes sets field value
func (o *CdnPrefix2) SetCdnPrefixes(v []CdnPrefix3) {
	o.CdnPrefixes = v
}

func (o CdnPrefix2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["page"] = o.Page
	}
	if true {
		toSerialize["cdnPrefixes"] = o.CdnPrefixes
	}
	return json.Marshal(toSerialize)
}

type NullableCdnPrefix2 struct {
	value *CdnPrefix2
	isSet bool
}

func (v NullableCdnPrefix2) Get() *CdnPrefix2 {
	return v.value
}

func (v *NullableCdnPrefix2) Set(val *CdnPrefix2) {
	v.value = val
	v.isSet = true
}

func (v NullableCdnPrefix2) IsSet() bool {
	return v.isSet
}

func (v *NullableCdnPrefix2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCdnPrefix2(val *CdnPrefix2) *NullableCdnPrefix2 {
	return &NullableCdnPrefix2{value: val, isSet: true}
}

func (v NullableCdnPrefix2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCdnPrefix2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


