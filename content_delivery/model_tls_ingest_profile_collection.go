/*
content-delivery

Cotent Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// TlsIngestProfileCollection A list of TLS ingest profiles.
type TlsIngestProfileCollection struct {
	TlsDeliveryProfiles *[]TlsIngestProfile3 `json:"tlsDeliveryProfiles,omitempty"`
	Page PageType `json:"page"`
}

// NewTlsIngestProfileCollection instantiates a new TlsIngestProfileCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewTlsIngestProfileCollection(page PageType) *TlsIngestProfileCollection {
	this := TlsIngestProfileCollection{}
	this.Page = page
	return &this
}

// NewTlsIngestProfileCollectionWithDefaults instantiates a new TlsIngestProfileCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewTlsIngestProfileCollectionWithDefaults() *TlsIngestProfileCollection {
	this := TlsIngestProfileCollection{}
	return &this
}

// GetTlsDeliveryProfiles returns the TlsDeliveryProfiles field value if set, zero value otherwise.
func (o *TlsIngestProfileCollection) GetTlsDeliveryProfiles() []TlsIngestProfile3 {
	if o == nil || o.TlsDeliveryProfiles == nil {
		var ret []TlsIngestProfile3
		return ret
	}
	return *o.TlsDeliveryProfiles
}

// GetTlsDeliveryProfilesOk returns a tuple with the TlsDeliveryProfiles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *TlsIngestProfileCollection) GetTlsDeliveryProfilesOk() (*[]TlsIngestProfile3, bool) {
	if o == nil || o.TlsDeliveryProfiles == nil {
		return nil, false
	}
	return o.TlsDeliveryProfiles, true
}

// HasTlsDeliveryProfiles returns a boolean if a field has been set.
func (o *TlsIngestProfileCollection) HasTlsDeliveryProfiles() bool {
	if o != nil && o.TlsDeliveryProfiles != nil {
		return true
	}

	return false
}

// SetTlsDeliveryProfiles gets a reference to the given []TlsIngestProfile3 and assigns it to the TlsDeliveryProfiles field.
func (o *TlsIngestProfileCollection) SetTlsDeliveryProfiles(v []TlsIngestProfile3) {
	o.TlsDeliveryProfiles = &v
}

// GetPage returns the Page field value
func (o *TlsIngestProfileCollection) GetPage() PageType {
	if o == nil {
		var ret PageType
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *TlsIngestProfileCollection) GetPageOk() (*PageType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *TlsIngestProfileCollection) SetPage(v PageType) {
	o.Page = v
}

func (o TlsIngestProfileCollection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TlsDeliveryProfiles != nil {
		toSerialize["tlsDeliveryProfiles"] = o.TlsDeliveryProfiles
	}
	if true {
		toSerialize["page"] = o.Page
	}
	return json.Marshal(toSerialize)
}

type NullableTlsIngestProfileCollection struct {
	value *TlsIngestProfileCollection
	isSet bool
}

func (v NullableTlsIngestProfileCollection) Get() *TlsIngestProfileCollection {
	return v.value
}

func (v *NullableTlsIngestProfileCollection) Set(val *TlsIngestProfileCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableTlsIngestProfileCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableTlsIngestProfileCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableTlsIngestProfileCollection(val *TlsIngestProfileCollection) *NullableTlsIngestProfileCollection {
	return &NullableTlsIngestProfileCollection{value: val, isSet: true}
}

func (v NullableTlsIngestProfileCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableTlsIngestProfileCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


