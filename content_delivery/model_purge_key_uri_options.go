/*
content-delivery

Aura LCDN Content Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// PurgeKeyUriOptions This behavior's set of configuration options.
type PurgeKeyUriOptions struct {
	// An alternative object name (URI) to purge the object, in case the default value is not sufficient.
	Value string `json:"value"`
}

// NewPurgeKeyUriOptions instantiates a new PurgeKeyUriOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPurgeKeyUriOptions(value string) *PurgeKeyUriOptions {
	this := PurgeKeyUriOptions{}
	this.Value = value
	return &this
}

// NewPurgeKeyUriOptionsWithDefaults instantiates a new PurgeKeyUriOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPurgeKeyUriOptionsWithDefaults() *PurgeKeyUriOptions {
	this := PurgeKeyUriOptions{}
	return &this
}

// GetValue returns the Value field value
func (o *PurgeKeyUriOptions) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *PurgeKeyUriOptions) GetValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *PurgeKeyUriOptions) SetValue(v string) {
	o.Value = v
}

func (o PurgeKeyUriOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["value"] = o.Value
	}
	return json.Marshal(toSerialize)
}

type NullablePurgeKeyUriOptions struct {
	value *PurgeKeyUriOptions
	isSet bool
}

func (v NullablePurgeKeyUriOptions) Get() *PurgeKeyUriOptions {
	return v.value
}

func (v *NullablePurgeKeyUriOptions) Set(val *PurgeKeyUriOptions) {
	v.value = val
	v.isSet = true
}

func (v NullablePurgeKeyUriOptions) IsSet() bool {
	return v.isSet
}

func (v *NullablePurgeKeyUriOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePurgeKeyUriOptions(val *PurgeKeyUriOptions) *NullablePurgeKeyUriOptions {
	return &NullablePurgeKeyUriOptions{value: val, isSet: true}
}

func (v NullablePurgeKeyUriOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePurgeKeyUriOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


