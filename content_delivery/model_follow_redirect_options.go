/*
content-delivery

Aura LCDN Content Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// FollowRedirectOptions This behavior's set of configuration options.
type FollowRedirectOptions struct {
	// When enabled, pass on HTTP 302 redirects to the client.
	Enable bool `json:"enable"`
}

// NewFollowRedirectOptions instantiates a new FollowRedirectOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFollowRedirectOptions(enable bool) *FollowRedirectOptions {
	this := FollowRedirectOptions{}
	this.Enable = enable
	return &this
}

// NewFollowRedirectOptionsWithDefaults instantiates a new FollowRedirectOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFollowRedirectOptionsWithDefaults() *FollowRedirectOptions {
	this := FollowRedirectOptions{}
	return &this
}

// GetEnable returns the Enable field value
func (o *FollowRedirectOptions) GetEnable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enable
}

// GetEnableOk returns a tuple with the Enable field value
// and a boolean to check if the value has been set.
func (o *FollowRedirectOptions) GetEnableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Enable, true
}

// SetEnable sets field value
func (o *FollowRedirectOptions) SetEnable(v bool) {
	o.Enable = v
}

func (o FollowRedirectOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["enable"] = o.Enable
	}
	return json.Marshal(toSerialize)
}

type NullableFollowRedirectOptions struct {
	value *FollowRedirectOptions
	isSet bool
}

func (v NullableFollowRedirectOptions) Get() *FollowRedirectOptions {
	return v.value
}

func (v *NullableFollowRedirectOptions) Set(val *FollowRedirectOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableFollowRedirectOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableFollowRedirectOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFollowRedirectOptions(val *FollowRedirectOptions) *NullableFollowRedirectOptions {
	return &NullableFollowRedirectOptions{value: val, isSet: true}
}

func (v NullableFollowRedirectOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFollowRedirectOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


