/*
content-delivery

Aura LCDN Content Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// CriterionOptions This criterion's set of configuration options.
type CriterionOptions struct {
	// The type of the filter to match URIs, either `EXACT_MATCH`, `PREFIX_MATCH`, `REGULAR_EXPRESSION_MATCH`, or `CASE_INSENSITIVE_REGULAR_EXPRESSION_MATCH`.
	UriFilterType string `json:"uriFilterType"`
	// Value of the filter used to match incoming URIs.
	UriFilterValue string `json:"uriFilterValue"`
}

// NewCriterionOptions instantiates a new CriterionOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCriterionOptions(uriFilterType string, uriFilterValue string) *CriterionOptions {
	this := CriterionOptions{}
	this.UriFilterType = uriFilterType
	this.UriFilterValue = uriFilterValue
	return &this
}

// NewCriterionOptionsWithDefaults instantiates a new CriterionOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCriterionOptionsWithDefaults() *CriterionOptions {
	this := CriterionOptions{}
	return &this
}

// GetUriFilterType returns the UriFilterType field value
func (o *CriterionOptions) GetUriFilterType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UriFilterType
}

// GetUriFilterTypeOk returns a tuple with the UriFilterType field value
// and a boolean to check if the value has been set.
func (o *CriterionOptions) GetUriFilterTypeOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UriFilterType, true
}

// SetUriFilterType sets field value
func (o *CriterionOptions) SetUriFilterType(v string) {
	o.UriFilterType = v
}

// GetUriFilterValue returns the UriFilterValue field value
func (o *CriterionOptions) GetUriFilterValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.UriFilterValue
}

// GetUriFilterValueOk returns a tuple with the UriFilterValue field value
// and a boolean to check if the value has been set.
func (o *CriterionOptions) GetUriFilterValueOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.UriFilterValue, true
}

// SetUriFilterValue sets field value
func (o *CriterionOptions) SetUriFilterValue(v string) {
	o.UriFilterValue = v
}

func (o CriterionOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["uriFilterType"] = o.UriFilterType
	}
	if true {
		toSerialize["uriFilterValue"] = o.UriFilterValue
	}
	return json.Marshal(toSerialize)
}

type NullableCriterionOptions struct {
	value *CriterionOptions
	isSet bool
}

func (v NullableCriterionOptions) Get() *CriterionOptions {
	return v.value
}

func (v *NullableCriterionOptions) Set(val *CriterionOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableCriterionOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableCriterionOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCriterionOptions(val *CriterionOptions) *NullableCriterionOptions {
	return &NullableCriterionOptions{value: val, isSet: true}
}

func (v NullableCriterionOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCriterionOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


