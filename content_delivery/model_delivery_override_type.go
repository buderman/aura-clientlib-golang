/*
content-delivery

Cotent Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
	"fmt"
)

// DeliveryOverrideType Override default setting for a delivery setting (that is, HTTP or HTTPS), either `DEFAULT` or `DISABLE`. If `DEFAULT`, the delivery value is inherited from the default behaviors.
type DeliveryOverrideType string

// List of deliveryOverrideType
const (
	DELIVERYOVERRIDETYPE_DEFAULT DeliveryOverrideType = "DEFAULT"
	DELIVERYOVERRIDETYPE_DISABLE DeliveryOverrideType = "DISABLE"
)

var allowedDeliveryOverrideTypeEnumValues = []DeliveryOverrideType{
	"DEFAULT",
	"DISABLE",
}

func (v *DeliveryOverrideType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := DeliveryOverrideType(value)
	for _, existing := range allowedDeliveryOverrideTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid DeliveryOverrideType", value)
}

// NewDeliveryOverrideTypeFromValue returns a pointer to a valid DeliveryOverrideType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDeliveryOverrideTypeFromValue(v string) (*DeliveryOverrideType, error) {
	ev := DeliveryOverrideType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for DeliveryOverrideType: valid values are %v", v, allowedDeliveryOverrideTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DeliveryOverrideType) IsValid() bool {
	for _, existing := range allowedDeliveryOverrideTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to deliveryOverrideType value
func (v DeliveryOverrideType) Ptr() *DeliveryOverrideType {
	return &v
}

type NullableDeliveryOverrideType struct {
	value *DeliveryOverrideType
	isSet bool
}

func (v NullableDeliveryOverrideType) Get() *DeliveryOverrideType {
	return v.value
}

func (v *NullableDeliveryOverrideType) Set(val *DeliveryOverrideType) {
	v.value = val
	v.isSet = true
}

func (v NullableDeliveryOverrideType) IsSet() bool {
	return v.isSet
}

func (v *NullableDeliveryOverrideType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDeliveryOverrideType(val *DeliveryOverrideType) *NullableDeliveryOverrideType {
	return &NullableDeliveryOverrideType{value: val, isSet: true}
}

func (v NullableDeliveryOverrideType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDeliveryOverrideType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

