/*
content-delivery

Cotent Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// DefaultHttpsDeliveryOptions This behavior's set of configuration options.
type DefaultHttpsDeliveryOptions struct {
	TlsDeliveryProfileId *int32 `json:"tlsDeliveryProfileId,omitempty"`
	// Enables default HTTPS Delivery for this prefix.
	Enable bool `json:"enable"`
}

// NewDefaultHttpsDeliveryOptions instantiates a new DefaultHttpsDeliveryOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultHttpsDeliveryOptions(enable bool) *DefaultHttpsDeliveryOptions {
	this := DefaultHttpsDeliveryOptions{}
	this.Enable = enable
	return &this
}

// NewDefaultHttpsDeliveryOptionsWithDefaults instantiates a new DefaultHttpsDeliveryOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultHttpsDeliveryOptionsWithDefaults() *DefaultHttpsDeliveryOptions {
	this := DefaultHttpsDeliveryOptions{}
	return &this
}

// GetTlsDeliveryProfileId returns the TlsDeliveryProfileId field value if set, zero value otherwise.
func (o *DefaultHttpsDeliveryOptions) GetTlsDeliveryProfileId() int32 {
	if o == nil || o.TlsDeliveryProfileId == nil {
		var ret int32
		return ret
	}
	return *o.TlsDeliveryProfileId
}

// GetTlsDeliveryProfileIdOk returns a tuple with the TlsDeliveryProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *DefaultHttpsDeliveryOptions) GetTlsDeliveryProfileIdOk() (*int32, bool) {
	if o == nil || o.TlsDeliveryProfileId == nil {
		return nil, false
	}
	return o.TlsDeliveryProfileId, true
}

// HasTlsDeliveryProfileId returns a boolean if a field has been set.
func (o *DefaultHttpsDeliveryOptions) HasTlsDeliveryProfileId() bool {
	if o != nil && o.TlsDeliveryProfileId != nil {
		return true
	}

	return false
}

// SetTlsDeliveryProfileId gets a reference to the given int32 and assigns it to the TlsDeliveryProfileId field.
func (o *DefaultHttpsDeliveryOptions) SetTlsDeliveryProfileId(v int32) {
	o.TlsDeliveryProfileId = &v
}

// GetEnable returns the Enable field value
func (o *DefaultHttpsDeliveryOptions) GetEnable() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Enable
}

// GetEnableOk returns a tuple with the Enable field value
// and a boolean to check if the value has been set.
func (o *DefaultHttpsDeliveryOptions) GetEnableOk() (*bool, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Enable, true
}

// SetEnable sets field value
func (o *DefaultHttpsDeliveryOptions) SetEnable(v bool) {
	o.Enable = v
}

func (o DefaultHttpsDeliveryOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TlsDeliveryProfileId != nil {
		toSerialize["tlsDeliveryProfileId"] = o.TlsDeliveryProfileId
	}
	if true {
		toSerialize["enable"] = o.Enable
	}
	return json.Marshal(toSerialize)
}

type NullableDefaultHttpsDeliveryOptions struct {
	value *DefaultHttpsDeliveryOptions
	isSet bool
}

func (v NullableDefaultHttpsDeliveryOptions) Get() *DefaultHttpsDeliveryOptions {
	return v.value
}

func (v *NullableDefaultHttpsDeliveryOptions) Set(val *DefaultHttpsDeliveryOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultHttpsDeliveryOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultHttpsDeliveryOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultHttpsDeliveryOptions(val *DefaultHttpsDeliveryOptions) *NullableDefaultHttpsDeliveryOptions {
	return &NullableDefaultHttpsDeliveryOptions{value: val, isSet: true}
}

func (v NullableDefaultHttpsDeliveryOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultHttpsDeliveryOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


