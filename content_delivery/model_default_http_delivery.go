/*
content-delivery

Aura LCDN Content Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// DefaultHttpDelivery Default setting for HTTP Delivery.
type DefaultHttpDelivery struct {
	// The name of the behavior, `httpDelivery` in this case.
	Name string `json:"name"`
	Options DefaultHttpDeliveryOptions `json:"options"`
}

// NewDefaultHttpDelivery instantiates a new DefaultHttpDelivery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultHttpDelivery(name string, options DefaultHttpDeliveryOptions) *DefaultHttpDelivery {
	this := DefaultHttpDelivery{}
	this.Name = name
	this.Options = options
	return &this
}

// NewDefaultHttpDeliveryWithDefaults instantiates a new DefaultHttpDelivery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultHttpDeliveryWithDefaults() *DefaultHttpDelivery {
	this := DefaultHttpDelivery{}
	return &this
}

// GetName returns the Name field value
func (o *DefaultHttpDelivery) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *DefaultHttpDelivery) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *DefaultHttpDelivery) SetName(v string) {
	o.Name = v
}

// GetOptions returns the Options field value
func (o *DefaultHttpDelivery) GetOptions() DefaultHttpDeliveryOptions {
	if o == nil {
		var ret DefaultHttpDeliveryOptions
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *DefaultHttpDelivery) GetOptionsOk() (*DefaultHttpDeliveryOptions, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Options, true
}

// SetOptions sets field value
func (o *DefaultHttpDelivery) SetOptions(v DefaultHttpDeliveryOptions) {
	o.Options = v
}

func (o DefaultHttpDelivery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["options"] = o.Options
	}
	return json.Marshal(toSerialize)
}

type NullableDefaultHttpDelivery struct {
	value *DefaultHttpDelivery
	isSet bool
}

func (v NullableDefaultHttpDelivery) Get() *DefaultHttpDelivery {
	return v.value
}

func (v *NullableDefaultHttpDelivery) Set(val *DefaultHttpDelivery) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultHttpDelivery) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultHttpDelivery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultHttpDelivery(val *DefaultHttpDelivery) *NullableDefaultHttpDelivery {
	return &NullableDefaultHttpDelivery{value: val, isSet: true}
}

func (v NullableDefaultHttpDelivery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultHttpDelivery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


