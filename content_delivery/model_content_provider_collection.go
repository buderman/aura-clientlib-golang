/*
content-delivery

Cotent Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// ContentProviderCollection ContentProvider collection
type ContentProviderCollection struct {
	Page PageType `json:"page"`
	ContentProviders []ContentProvider2 `json:"contentProviders"`
}

// NewContentProviderCollection instantiates a new ContentProviderCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentProviderCollection(page PageType, contentProviders []ContentProvider2) *ContentProviderCollection {
	this := ContentProviderCollection{}
	this.Page = page
	this.ContentProviders = contentProviders
	return &this
}

// NewContentProviderCollectionWithDefaults instantiates a new ContentProviderCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentProviderCollectionWithDefaults() *ContentProviderCollection {
	this := ContentProviderCollection{}
	return &this
}

// GetPage returns the Page field value
func (o *ContentProviderCollection) GetPage() PageType {
	if o == nil {
		var ret PageType
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *ContentProviderCollection) GetPageOk() (*PageType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *ContentProviderCollection) SetPage(v PageType) {
	o.Page = v
}

// GetContentProviders returns the ContentProviders field value
func (o *ContentProviderCollection) GetContentProviders() []ContentProvider2 {
	if o == nil {
		var ret []ContentProvider2
		return ret
	}

	return o.ContentProviders
}

// GetContentProvidersOk returns a tuple with the ContentProviders field value
// and a boolean to check if the value has been set.
func (o *ContentProviderCollection) GetContentProvidersOk() (*[]ContentProvider2, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ContentProviders, true
}

// SetContentProviders sets field value
func (o *ContentProviderCollection) SetContentProviders(v []ContentProvider2) {
	o.ContentProviders = v
}

func (o ContentProviderCollection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["page"] = o.Page
	}
	if true {
		toSerialize["contentProviders"] = o.ContentProviders
	}
	return json.Marshal(toSerialize)
}

type NullableContentProviderCollection struct {
	value *ContentProviderCollection
	isSet bool
}

func (v NullableContentProviderCollection) Get() *ContentProviderCollection {
	return v.value
}

func (v *NullableContentProviderCollection) Set(val *ContentProviderCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableContentProviderCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableContentProviderCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentProviderCollection(val *ContentProviderCollection) *NullableContentProviderCollection {
	return &NullableContentProviderCollection{value: val, isSet: true}
}

func (v NullableContentProviderCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentProviderCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


