/*
content-delivery

Cotent Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// Http2Delivery Override default setting for HTTP2 delivery.
type Http2Delivery struct {
	// The name of the behavior, `http2Delivery` in this case.
	Name string `json:"name"`
	Options HttpDeliveryOptions `json:"options"`
}

// NewHttp2Delivery instantiates a new Http2Delivery object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHttp2Delivery(name string, options HttpDeliveryOptions) *Http2Delivery {
	this := Http2Delivery{}
	this.Name = name
	this.Options = options
	return &this
}

// NewHttp2DeliveryWithDefaults instantiates a new Http2Delivery object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHttp2DeliveryWithDefaults() *Http2Delivery {
	this := Http2Delivery{}
	return &this
}

// GetName returns the Name field value
func (o *Http2Delivery) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *Http2Delivery) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *Http2Delivery) SetName(v string) {
	o.Name = v
}

// GetOptions returns the Options field value
func (o *Http2Delivery) GetOptions() HttpDeliveryOptions {
	if o == nil {
		var ret HttpDeliveryOptions
		return ret
	}

	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value
// and a boolean to check if the value has been set.
func (o *Http2Delivery) GetOptionsOk() (*HttpDeliveryOptions, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Options, true
}

// SetOptions sets field value
func (o *Http2Delivery) SetOptions(v HttpDeliveryOptions) {
	o.Options = v
}

func (o Http2Delivery) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["options"] = o.Options
	}
	return json.Marshal(toSerialize)
}

type NullableHttp2Delivery struct {
	value *Http2Delivery
	isSet bool
}

func (v NullableHttp2Delivery) Get() *Http2Delivery {
	return v.value
}

func (v *NullableHttp2Delivery) Set(val *Http2Delivery) {
	v.value = val
	v.isSet = true
}

func (v NullableHttp2Delivery) IsSet() bool {
	return v.isSet
}

func (v *NullableHttp2Delivery) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHttp2Delivery(val *Http2Delivery) *NullableHttp2Delivery {
	return &NullableHttp2Delivery{value: val, isSet: true}
}

func (v NullableHttp2Delivery) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHttp2Delivery) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


