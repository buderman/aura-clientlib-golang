/*
content-delivery

Aura LCDN Content Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// SharedSecretSet2 Create one or more shared secrets for a content provider.  Shared secrets are used for URI signing, which is used as an authorization method for content delivery.
type SharedSecretSet2 struct {
	ContentProviderId int32 `json:"contentProviderId"`
	Name string `json:"name"`
}

// NewSharedSecretSet2 instantiates a new SharedSecretSet2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSharedSecretSet2(contentProviderId int32, name string) *SharedSecretSet2 {
	this := SharedSecretSet2{}
	this.ContentProviderId = contentProviderId
	this.Name = name
	return &this
}

// NewSharedSecretSet2WithDefaults instantiates a new SharedSecretSet2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSharedSecretSet2WithDefaults() *SharedSecretSet2 {
	this := SharedSecretSet2{}
	return &this
}

// GetContentProviderId returns the ContentProviderId field value
func (o *SharedSecretSet2) GetContentProviderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ContentProviderId
}

// GetContentProviderIdOk returns a tuple with the ContentProviderId field value
// and a boolean to check if the value has been set.
func (o *SharedSecretSet2) GetContentProviderIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ContentProviderId, true
}

// SetContentProviderId sets field value
func (o *SharedSecretSet2) SetContentProviderId(v int32) {
	o.ContentProviderId = v
}

// GetName returns the Name field value
func (o *SharedSecretSet2) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SharedSecretSet2) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SharedSecretSet2) SetName(v string) {
	o.Name = v
}

func (o SharedSecretSet2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["contentProviderId"] = o.ContentProviderId
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableSharedSecretSet2 struct {
	value *SharedSecretSet2
	isSet bool
}

func (v NullableSharedSecretSet2) Get() *SharedSecretSet2 {
	return v.value
}

func (v *NullableSharedSecretSet2) Set(val *SharedSecretSet2) {
	v.value = val
	v.isSet = true
}

func (v NullableSharedSecretSet2) IsSet() bool {
	return v.isSet
}

func (v *NullableSharedSecretSet2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSharedSecretSet2(val *SharedSecretSet2) *NullableSharedSecretSet2 {
	return &NullableSharedSecretSet2{value: val, isSet: true}
}

func (v NullableSharedSecretSet2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSharedSecretSet2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


