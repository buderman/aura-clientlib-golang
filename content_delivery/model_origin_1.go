/*
content-delivery

Cotent Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// Origin1 Origin collection
type Origin1 struct {
	Page PageType `json:"page"`
	Origins []Origin3 `json:"origins"`
}

// NewOrigin1 instantiates a new Origin1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewOrigin1(page PageType, origins []Origin3) *Origin1 {
	this := Origin1{}
	this.Page = page
	this.Origins = origins
	return &this
}

// NewOrigin1WithDefaults instantiates a new Origin1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewOrigin1WithDefaults() *Origin1 {
	this := Origin1{}
	return &this
}

// GetPage returns the Page field value
func (o *Origin1) GetPage() PageType {
	if o == nil {
		var ret PageType
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *Origin1) GetPageOk() (*PageType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *Origin1) SetPage(v PageType) {
	o.Page = v
}

// GetOrigins returns the Origins field value
func (o *Origin1) GetOrigins() []Origin3 {
	if o == nil {
		var ret []Origin3
		return ret
	}

	return o.Origins
}

// GetOriginsOk returns a tuple with the Origins field value
// and a boolean to check if the value has been set.
func (o *Origin1) GetOriginsOk() (*[]Origin3, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Origins, true
}

// SetOrigins sets field value
func (o *Origin1) SetOrigins(v []Origin3) {
	o.Origins = v
}

func (o Origin1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["page"] = o.Page
	}
	if true {
		toSerialize["origins"] = o.Origins
	}
	return json.Marshal(toSerialize)
}

type NullableOrigin1 struct {
	value *Origin1
	isSet bool
}

func (v NullableOrigin1) Get() *Origin1 {
	return v.value
}

func (v *NullableOrigin1) Set(val *Origin1) {
	v.value = val
	v.isSet = true
}

func (v NullableOrigin1) IsSet() bool {
	return v.isSet
}

func (v *NullableOrigin1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableOrigin1(val *Origin1) *NullableOrigin1 {
	return &NullableOrigin1{value: val, isSet: true}
}

func (v NullableOrigin1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableOrigin1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


