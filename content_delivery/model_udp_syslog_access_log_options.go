/*
content-delivery

Cotent Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// UdpSyslogAccessLogOptions This behavior's set of configuration options.
type UdpSyslogAccessLogOptions struct {
	// The name of the log format to use as the default.  The log formats are defined by the operator.
	DefaultLogFormat string `json:"defaultLogFormat"`
	// The syslog facility to use when transmitting logs. Possible values: `LOCAL0`, `LOCAL1`, `LOCAL2`, `LOCAL3`, `LOCAL4`, `LOCAL5`, `LOCAL6`, `LOCAL7`, `KERN`, `USER`, `MAIL`, `DAEMON`, `AUTH`, `INTERN`, `LPR`, `NEWS`, `UUCP`, `CLOCK`, `AUTHPRIV`, `FTP`, `NTP`, `AUDIT`, `ALERT`, `CRON`. Default value: `LOCAL7`.
	Facility *string `json:"facility,omitempty"`
	// The syslog severity to use when transmitting logs. Possible values: `DEBUG`, `INFO`, `NOTICE`, `WARNING`, `ERROR`, `CRITICAL`, `ALERT`, `EMERGENCY`. Default value: `INFO`.
	Severity *string `json:"severity,omitempty"`
	// List of servers to send logs to.  Maximum of 6.
	Servers *[]UdpSyslogAccessLogOptionsServers `json:"servers,omitempty"`
}

// NewUdpSyslogAccessLogOptions instantiates a new UdpSyslogAccessLogOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUdpSyslogAccessLogOptions(defaultLogFormat string) *UdpSyslogAccessLogOptions {
	this := UdpSyslogAccessLogOptions{}
	this.DefaultLogFormat = defaultLogFormat
	var facility string = "LOCAL7"
	this.Facility = &facility
	var severity string = "INFO"
	this.Severity = &severity
	return &this
}

// NewUdpSyslogAccessLogOptionsWithDefaults instantiates a new UdpSyslogAccessLogOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUdpSyslogAccessLogOptionsWithDefaults() *UdpSyslogAccessLogOptions {
	this := UdpSyslogAccessLogOptions{}
	var facility string = "LOCAL7"
	this.Facility = &facility
	var severity string = "INFO"
	this.Severity = &severity
	return &this
}

// GetDefaultLogFormat returns the DefaultLogFormat field value
func (o *UdpSyslogAccessLogOptions) GetDefaultLogFormat() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DefaultLogFormat
}

// GetDefaultLogFormatOk returns a tuple with the DefaultLogFormat field value
// and a boolean to check if the value has been set.
func (o *UdpSyslogAccessLogOptions) GetDefaultLogFormatOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.DefaultLogFormat, true
}

// SetDefaultLogFormat sets field value
func (o *UdpSyslogAccessLogOptions) SetDefaultLogFormat(v string) {
	o.DefaultLogFormat = v
}

// GetFacility returns the Facility field value if set, zero value otherwise.
func (o *UdpSyslogAccessLogOptions) GetFacility() string {
	if o == nil || o.Facility == nil {
		var ret string
		return ret
	}
	return *o.Facility
}

// GetFacilityOk returns a tuple with the Facility field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UdpSyslogAccessLogOptions) GetFacilityOk() (*string, bool) {
	if o == nil || o.Facility == nil {
		return nil, false
	}
	return o.Facility, true
}

// HasFacility returns a boolean if a field has been set.
func (o *UdpSyslogAccessLogOptions) HasFacility() bool {
	if o != nil && o.Facility != nil {
		return true
	}

	return false
}

// SetFacility gets a reference to the given string and assigns it to the Facility field.
func (o *UdpSyslogAccessLogOptions) SetFacility(v string) {
	o.Facility = &v
}

// GetSeverity returns the Severity field value if set, zero value otherwise.
func (o *UdpSyslogAccessLogOptions) GetSeverity() string {
	if o == nil || o.Severity == nil {
		var ret string
		return ret
	}
	return *o.Severity
}

// GetSeverityOk returns a tuple with the Severity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UdpSyslogAccessLogOptions) GetSeverityOk() (*string, bool) {
	if o == nil || o.Severity == nil {
		return nil, false
	}
	return o.Severity, true
}

// HasSeverity returns a boolean if a field has been set.
func (o *UdpSyslogAccessLogOptions) HasSeverity() bool {
	if o != nil && o.Severity != nil {
		return true
	}

	return false
}

// SetSeverity gets a reference to the given string and assigns it to the Severity field.
func (o *UdpSyslogAccessLogOptions) SetSeverity(v string) {
	o.Severity = &v
}

// GetServers returns the Servers field value if set, zero value otherwise.
func (o *UdpSyslogAccessLogOptions) GetServers() []UdpSyslogAccessLogOptionsServers {
	if o == nil || o.Servers == nil {
		var ret []UdpSyslogAccessLogOptionsServers
		return ret
	}
	return *o.Servers
}

// GetServersOk returns a tuple with the Servers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UdpSyslogAccessLogOptions) GetServersOk() (*[]UdpSyslogAccessLogOptionsServers, bool) {
	if o == nil || o.Servers == nil {
		return nil, false
	}
	return o.Servers, true
}

// HasServers returns a boolean if a field has been set.
func (o *UdpSyslogAccessLogOptions) HasServers() bool {
	if o != nil && o.Servers != nil {
		return true
	}

	return false
}

// SetServers gets a reference to the given []UdpSyslogAccessLogOptionsServers and assigns it to the Servers field.
func (o *UdpSyslogAccessLogOptions) SetServers(v []UdpSyslogAccessLogOptionsServers) {
	o.Servers = &v
}

func (o UdpSyslogAccessLogOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["defaultLogFormat"] = o.DefaultLogFormat
	}
	if o.Facility != nil {
		toSerialize["facility"] = o.Facility
	}
	if o.Severity != nil {
		toSerialize["severity"] = o.Severity
	}
	if o.Servers != nil {
		toSerialize["servers"] = o.Servers
	}
	return json.Marshal(toSerialize)
}

type NullableUdpSyslogAccessLogOptions struct {
	value *UdpSyslogAccessLogOptions
	isSet bool
}

func (v NullableUdpSyslogAccessLogOptions) Get() *UdpSyslogAccessLogOptions {
	return v.value
}

func (v *NullableUdpSyslogAccessLogOptions) Set(val *UdpSyslogAccessLogOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableUdpSyslogAccessLogOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableUdpSyslogAccessLogOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUdpSyslogAccessLogOptions(val *UdpSyslogAccessLogOptions) *NullableUdpSyslogAccessLogOptions {
	return &NullableUdpSyslogAccessLogOptions{value: val, isSet: true}
}

func (v NullableUdpSyslogAccessLogOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUdpSyslogAccessLogOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


