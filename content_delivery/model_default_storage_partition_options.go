/*
content-delivery

Cotent Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// DefaultStoragePartitionOptions This behavior's set of configuration options.
type DefaultStoragePartitionOptions struct {
	StoragePartitionId int32 `json:"storagePartitionId"`
}

// NewDefaultStoragePartitionOptions instantiates a new DefaultStoragePartitionOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDefaultStoragePartitionOptions(storagePartitionId int32) *DefaultStoragePartitionOptions {
	this := DefaultStoragePartitionOptions{}
	this.StoragePartitionId = storagePartitionId
	return &this
}

// NewDefaultStoragePartitionOptionsWithDefaults instantiates a new DefaultStoragePartitionOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDefaultStoragePartitionOptionsWithDefaults() *DefaultStoragePartitionOptions {
	this := DefaultStoragePartitionOptions{}
	return &this
}

// GetStoragePartitionId returns the StoragePartitionId field value
func (o *DefaultStoragePartitionOptions) GetStoragePartitionId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.StoragePartitionId
}

// GetStoragePartitionIdOk returns a tuple with the StoragePartitionId field value
// and a boolean to check if the value has been set.
func (o *DefaultStoragePartitionOptions) GetStoragePartitionIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.StoragePartitionId, true
}

// SetStoragePartitionId sets field value
func (o *DefaultStoragePartitionOptions) SetStoragePartitionId(v int32) {
	o.StoragePartitionId = v
}

func (o DefaultStoragePartitionOptions) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["storagePartitionId"] = o.StoragePartitionId
	}
	return json.Marshal(toSerialize)
}

type NullableDefaultStoragePartitionOptions struct {
	value *DefaultStoragePartitionOptions
	isSet bool
}

func (v NullableDefaultStoragePartitionOptions) Get() *DefaultStoragePartitionOptions {
	return v.value
}

func (v *NullableDefaultStoragePartitionOptions) Set(val *DefaultStoragePartitionOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableDefaultStoragePartitionOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableDefaultStoragePartitionOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDefaultStoragePartitionOptions(val *DefaultStoragePartitionOptions) *NullableDefaultStoragePartitionOptions {
	return &NullableDefaultStoragePartitionOptions{value: val, isSet: true}
}

func (v NullableDefaultStoragePartitionOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDefaultStoragePartitionOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


