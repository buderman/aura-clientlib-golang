/*
content-delivery

Aura LCDN Content Delivery API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package content_delivery

import (
	"encoding/json"
)

// ContentProviderReadDetailed A Content Provider is an organization that has content it wants to deliver via the LCDN.
type ContentProviderReadDetailed struct {
	ContentProviderId int32 `json:"contentProviderId"`
	Enable *bool `json:"enable,omitempty"`
	ServiceProviderId int32 `json:"serviceProviderId"`
	Account string `json:"account"`
	Name string `json:"name"`
}

// NewContentProviderReadDetailed instantiates a new ContentProviderReadDetailed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentProviderReadDetailed(contentProviderId int32, serviceProviderId int32, account string, name string) *ContentProviderReadDetailed {
	this := ContentProviderReadDetailed{}
	this.ContentProviderId = contentProviderId
	var enable bool = true
	this.Enable = &enable
	this.ServiceProviderId = serviceProviderId
	this.Account = account
	this.Name = name
	return &this
}

// NewContentProviderReadDetailedWithDefaults instantiates a new ContentProviderReadDetailed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentProviderReadDetailedWithDefaults() *ContentProviderReadDetailed {
	this := ContentProviderReadDetailed{}
	var enable bool = true
	this.Enable = &enable
	return &this
}

// GetContentProviderId returns the ContentProviderId field value
func (o *ContentProviderReadDetailed) GetContentProviderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ContentProviderId
}

// GetContentProviderIdOk returns a tuple with the ContentProviderId field value
// and a boolean to check if the value has been set.
func (o *ContentProviderReadDetailed) GetContentProviderIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ContentProviderId, true
}

// SetContentProviderId sets field value
func (o *ContentProviderReadDetailed) SetContentProviderId(v int32) {
	o.ContentProviderId = v
}

// GetEnable returns the Enable field value if set, zero value otherwise.
func (o *ContentProviderReadDetailed) GetEnable() bool {
	if o == nil || o.Enable == nil {
		var ret bool
		return ret
	}
	return *o.Enable
}

// GetEnableOk returns a tuple with the Enable field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentProviderReadDetailed) GetEnableOk() (*bool, bool) {
	if o == nil || o.Enable == nil {
		return nil, false
	}
	return o.Enable, true
}

// HasEnable returns a boolean if a field has been set.
func (o *ContentProviderReadDetailed) HasEnable() bool {
	if o != nil && o.Enable != nil {
		return true
	}

	return false
}

// SetEnable gets a reference to the given bool and assigns it to the Enable field.
func (o *ContentProviderReadDetailed) SetEnable(v bool) {
	o.Enable = &v
}

// GetServiceProviderId returns the ServiceProviderId field value
func (o *ContentProviderReadDetailed) GetServiceProviderId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.ServiceProviderId
}

// GetServiceProviderIdOk returns a tuple with the ServiceProviderId field value
// and a boolean to check if the value has been set.
func (o *ContentProviderReadDetailed) GetServiceProviderIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.ServiceProviderId, true
}

// SetServiceProviderId sets field value
func (o *ContentProviderReadDetailed) SetServiceProviderId(v int32) {
	o.ServiceProviderId = v
}

// GetAccount returns the Account field value
func (o *ContentProviderReadDetailed) GetAccount() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Account
}

// GetAccountOk returns a tuple with the Account field value
// and a boolean to check if the value has been set.
func (o *ContentProviderReadDetailed) GetAccountOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Account, true
}

// SetAccount sets field value
func (o *ContentProviderReadDetailed) SetAccount(v string) {
	o.Account = v
}

// GetName returns the Name field value
func (o *ContentProviderReadDetailed) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *ContentProviderReadDetailed) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *ContentProviderReadDetailed) SetName(v string) {
	o.Name = v
}

func (o ContentProviderReadDetailed) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["contentProviderId"] = o.ContentProviderId
	}
	if o.Enable != nil {
		toSerialize["enable"] = o.Enable
	}
	if true {
		toSerialize["serviceProviderId"] = o.ServiceProviderId
	}
	if true {
		toSerialize["account"] = o.Account
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableContentProviderReadDetailed struct {
	value *ContentProviderReadDetailed
	isSet bool
}

func (v NullableContentProviderReadDetailed) Get() *ContentProviderReadDetailed {
	return v.value
}

func (v *NullableContentProviderReadDetailed) Set(val *ContentProviderReadDetailed) {
	v.value = val
	v.isSet = true
}

func (v NullableContentProviderReadDetailed) IsSet() bool {
	return v.isSet
}

func (v *NullableContentProviderReadDetailed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentProviderReadDetailed(val *ContentProviderReadDetailed) *NullableContentProviderReadDetailed {
	return &NullableContentProviderReadDetailed{value: val, isSet: true}
}

func (v NullableContentProviderReadDetailed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentProviderReadDetailed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


