openapi: 3.0.0
info:
  description: Cotent Delivery API
  title: content-delivery
  version: v1
servers:
- description: AMC server
  url: https://{amc_hostname}:{amc_port}/api/content-delivery/v1
  variables:
    amc_hostname:
      default: aura.akamai.com
      description: FQDN of AMC.
    amc_port:
      default: "443"
      description: AMC port.
paths:
  /content-providers/{contentProviderId}/shared-secret-sets/{sharedSecretSetId}:
    delete:
      description: |
        Delete a shared secret: This operation deletes a shared secret
        set for a specified content provider.
      operationId: deleteSharedSecretSet
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each shared secret set.
        explode: false
        in: path
        name: sharedSecretSetId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: The SharedSecretSet was successfully deleted.
      security:
      - oauth2: []
      summary: shared secret set
    get:
      description: |
        Get a shared secret set: This operation gets the details about
        a shared secret set for a specified content provider.
      operationId: readSharedSecretSet
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each shared secret set.
        explode: false
        in: path
        name: sharedSecretSetId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/shared-secret-set-get-success.json
              schema:
                $ref: '#/components/schemas/shared-secret-set.read-detailed'
          description: |
            An HTTP 204 will signify the successful deletion of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: shared secret set
  /content-providers/{contentProviderId}:
    get:
      description: |
        Get a Content Provider: This operation gets the specified Content Provider.
      operationId: readContentProvider
      parameters:
      - description: |
          Unique identifier for each Content Provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/content-provider-get-success.json
              schema:
                $ref: '#/components/schemas/content-provider.read-detailed'
          description: 200 response
      security:
      - oauth2: []
      summary: content provider
  /content-providers/{contentProviderId}/tls-ingest-profiles/{tlsIngestProfileId}:
    delete:
      description: |
        Delete a TLS ingest profile: This operation deletes a TLS
        ingest profile for the specified content provider. A TLS
        ingest profile can be bound to one or more origins, and can
        only be deleted if it is not bound to an origin.
      operationId: deleteTlsIngestProfile
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each TLS ingest profile.
        explode: false
        in: path
        name: tlsIngestProfileId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: The TlsIngestProfile was successfully deleted.
      security:
      - oauth2: []
      summary: tls ingest profile
    get:
      description: |
        Get a TLS ingest profile: This operation gets details about a
        specified TLS ingest profile.
      operationId: readTlsIngestProfile
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each TLS ingest profile.
        explode: false
        in: path
        name: tlsIngestProfileId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/tls-ingest-profile-get-success.json
              schema:
                $ref: '#/components/schemas/tls-ingest-profile.read-detailed'
          description: |
            An HTTP 204 will signify the successful deletion of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: tls ingest profile
    put:
      description: |
        Update a TLS ingest profile: After you create a TLS ingest
        profile, you can modify its attributes using this operation.
      operationId: updateTlsIngestProfile
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each TLS ingest profile.
        explode: false
        in: path
        name: tlsIngestProfileId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/tls-ingest-profile-get-success.json
            schema:
              $ref: '#/components/schemas/tls-ingest-profile.update'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/tls-ingest-profile-get-success.json
              schema:
                $ref: '#/components/schemas/tls-ingest-profile.read-detailed'
          description: |
            An HTTP 200 will signify the successful update of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: tls ingest profile
  /content-providers/{contentProviderId}/cdn-prefixes/{cdnPrefixId}:
    delete:
      description: |
        Delete a CDN prefix: This operation deletes a CDN prefix.
      operationId: deleteCdnPrefix
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each CDN prefix.
        explode: false
        in: path
        name: cdnPrefixId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: The CdnPrefix was successfully deleted.
      security:
      - oauth2: []
      summary: cdn prefix
    get:
      description: |
        Get a CDN prefix: This operation provides a list of the CDN prefixes.
      operationId: readCdnPrefix
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each CDN prefix.
        explode: false
        in: path
        name: cdnPrefixId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/cdn-prefix-get-success.json
              schema:
                $ref: '#/components/schemas/cdn-prefix.read-detailed'
          description: |
            An HTTP 204 will signify the successful deletion of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: cdn prefix
    put:
      description: |
        Update a CDN Prefix: This operation modifies an existing CDN prefix.
      operationId: updateCdnPrefix
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each CDN prefix.
        explode: false
        in: path
        name: cdnPrefixId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/cdn-prefix-get-success.json
            schema:
              $ref: '#/components/schemas/cdn-prefix.update'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/cdn-prefix-get-success.json
              schema:
                $ref: '#/components/schemas/cdn-prefix.read-detailed'
          description: |
            An HTTP 200 will signify the successful update of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: cdn prefix
  /content-providers/{contentProviderId}/shared-secret-sets/{sharedSecretSetId}/secrets:
    get:
      description: |
        Get secrets: This operations gets the details of a shared
        secret set for a specified content provider.
      operationId: readSharedSecretSetSecrets
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each shared secret set.
        explode: false
        in: path
        name: sharedSecretSetId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/shared-secret-set-secrets-get-success.json
              schema:
                $ref: '#/components/schemas/shared-secret-set-secrets'
          description: |
            An HTTP 200 will signify the successful update of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: secrets
    put:
      description: |
        Update secrets: This operations updates the details of a
        Shared Secret Set for a specified Content Provider.
      operationId: updateSharedSecretSetSecrets
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each shared secret set.
        explode: false
        in: path
        name: sharedSecretSetId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/shared-secret-set-secrets-get-success.json
            schema:
              $ref: '#/components/schemas/shared-secret-set-secrets'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/shared-secret-set-secrets-get-success.json
              schema:
                $ref: '#/components/schemas/shared-secret-set-secrets'
          description: |
            An HTTP 200 will signify the successful update of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: secrets
  /content-providers/{contentProviderId}/cdn-prefixes:
    get:
      description: |
        List CDN prefixes: This operation provides a list of the CDN
        prefixes owned by the content provider.
      operationId: listCdnPrefixes
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Results display either `summary` or `detailed` objects.
        explode: true
        in: query
        name: view
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies a query to filter down the set of results. The
          accompanying example specifies more than one query, where `;`
          and `,` delimiters clarify AND and OR logic. (Optional
          parentheses clarify logical groupings.) The `==` and `!=`
          operators test equivalency. The `=lt=`, `=le=`, `=gt=`, and
          `=ge=` operators compare numbers. The `=contains=` and
          `=excludes=` operators match elements within an array.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an object field name to sort results on. Provide a
          comma-separated list of field names for additional sort
          criteria. Prefix field names with a dash for descending sort
          order. For example, `name,-tlsIngestProfileId` sorts primarily
          by name, then IDs in descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an offset within the full set of results, with page
          numbers starting at 1.  Use this in conjunction with `pageSize`.
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Specifies the number of results on each page.  Use this in
          conjunction with `pageNumber`.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/cdn-prefixes-get-success.json
              schema:
                $ref: '#/components/schemas/cdn-prefix.collection'
          description: 200 response
      security:
      - oauth2: []
      summary: cdn prefixes
    post:
      description: |
        Create a New CDN prefix: This operation creates a new CDN
        prefix. A CDN prefix is a defined hostname which is referenced
        by an end user's request for content. This is accomplished using
        a DNS lookup directed to a node running the request router service.
        The request router then determines the HPC node best able to serve
        that particular end user's request.
      operationId: createCdnPrefix
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/cdn-prefix-post.json
            schema:
              $ref: '#/components/schemas/cdn-prefix.create'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                $ref: examples/cdn-prefix-get-success.json
              schema:
                $ref: '#/components/schemas/cdn-prefix.read-detailed'
          description: |
            An HTTP 201 will be returned if the request is successfully processed, and a new <<resourcePathName | !singularize>> object is created.  The location of the new object will be specified in the location header.
          headers:
            Location:
              description: |
                Specifies a URL linking the newly created resource.
              example: https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/content-delivery/v1/content-providers/1/cdn-prefixes/1
              explode: false
              schema:
                type: string
              style: simple
      security:
      - oauth2: []
      summary: cdn prefixes
  /content-providers/{contentProviderId}/tls-delivery-profiles/{tlsDeliveryProfileId}:
    delete:
      description: |
        Delete a TLS delivery profile: This operation deletes a TLS
        delivery profile for the specified content provider.
      operationId: deleteTlsDeliveryProfile
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each TLS delivery profile.
        explode: false
        in: path
        name: tlsDeliveryProfileId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: The TlsDeliveryProfile was successfully deleted.
      security:
      - oauth2: []
      summary: tls delivery profile
    get:
      description: |
        Get a TLS delivery profile: This operation gets the specified
        TLS delivery profile for the specified content provider.
      operationId: readTlsDeliveryProfile
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each TLS delivery profile.
        explode: false
        in: path
        name: tlsDeliveryProfileId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/tls-delivery-profile-get-success.json
              schema:
                $ref: '#/components/schemas/tls-delivery-profile.read-detailed'
          description: |
            An HTTP 204 will signify the successful deletion of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: tls delivery profile
    put:
      description: |
        Update a TLS delivery profile: After you create a content
        provider TLS delivery profile, you can use this operation to
        modify the profile parameters for the specified content
        provider.
      operationId: updateTlsDeliveryProfile
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each TLS delivery profile.
        explode: false
        in: path
        name: tlsDeliveryProfileId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/tls-delivery-profile-get-success.json
            schema:
              $ref: '#/components/schemas/tls-delivery-profile.update'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/tls-delivery-profile-get-success.json
              schema:
                $ref: '#/components/schemas/tls-delivery-profile.read-detailed'
          description: |
            An HTTP 200 will signify the successful update of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: tls delivery profile
  /content-providers/{contentProviderId}/shared-secret-sets:
    get:
      description: |
        List shared secret sets: This operation lists all shared secrets
        sets for a specified content provider.
      operationId: listSharedSecretSets
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Results display either `summary` or `detailed` objects.
        explode: true
        in: query
        name: view
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies a query to filter down the set of results. The
          accompanying example specifies more than one query, where `;`
          and `,` delimiters clarify AND and OR logic. (Optional
          parentheses clarify logical groupings.) The `==` and `!=`
          operators test equivalency. The `=lt=`, `=le=`, `=gt=`, and
          `=ge=` operators compare numbers. The `=contains=` and
          `=excludes=` operators match elements within an array.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an object field name to sort results on. Provide a
          comma-separated list of field names for additional sort
          criteria. Prefix field names with a dash for descending sort
          order. For example, `name,-tlsIngestProfileId` sorts primarily
          by name, then IDs in descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an offset within the full set of results, with page
          numbers starting at 1.  Use this in conjunction with `pageSize`.
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Specifies the number of results on each page.  Use this in
          conjunction with `pageNumber`.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/shared-secret-sets-get-success.json
              schema:
                $ref: '#/components/schemas/shared-secret-set.collection'
          description: 200 response
      security:
      - oauth2: []
      summary: shared secret sets
    post:
      description: |
        Create a new shared secret set: This operation creates a new
        shared secret set for the specified content provider.
      operationId: createSharedSecretSet
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/shared-secret-set-post.json
            schema:
              $ref: '#/components/schemas/shared-secret-set.create'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                $ref: examples/shared-secret-set-get-success.json
              schema:
                $ref: '#/components/schemas/shared-secret-set.read-detailed'
          description: |
            An HTTP 201 will be returned if the request is successfully processed, and a new <<resourcePathName | !singularize>> object is created.  The location of the new object will be specified in the location header.
          headers:
            Location:
              description: |
                Specifies a URL linking the newly created resource.
              example: https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/content-delivery/v1/content-providers/1/shared-secret-sets/1
              explode: false
              schema:
                type: string
              style: simple
      security:
      - oauth2: []
      summary: shared secret sets
  /content-providers/{contentProviderId}/cdn-prefixes/{cdnPrefixId}/rules:
    get:
      description: |
        Get a rule tree: This operation displays the default rule
        behaviors for a CDN prefix.
      operationId: readCdnPrefixRules
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each CDN prefix.
        explode: false
        in: path
        name: cdnPrefixId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/rules-example.json
              schema:
                $ref: '#/components/schemas/cdn-prefix.rules'
          description: |
            An HTTP 200 will signify the successful update of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: rules
    put:
      description: |
        Update a rule tree: This operation updates the rule behaviors for a CDN prefix.
      operationId: updateCdnPrefixRules
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each CDN prefix.
        explode: false
        in: path
        name: cdnPrefixId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/rules-example.json
            schema:
              $ref: '#/components/schemas/cdn-prefix.rules'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/rules-example.json
              schema:
                $ref: '#/components/schemas/cdn-prefix.rules'
          description: |
            An HTTP 200 will signify the successful update of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: rules
  /content-providers/{contentProviderId}/tls-ingest-profiles:
    get:
      description: |
        List TLS ingest profiles: This operation displays the list of
        TLS ingest profiles owned by the specified content provider.
      operationId: listTlsIngestProfiles
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Results display either `summary` or `detailed` objects.
        explode: true
        in: query
        name: view
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies a query to filter down the set of results. The
          accompanying example specifies more than one query, where `;`
          and `,` delimiters clarify AND and OR logic. (Optional
          parentheses clarify logical groupings.) The `==` and `!=`
          operators test equivalency. The `=lt=`, `=le=`, `=gt=`, and
          `=ge=` operators compare numbers. The `=contains=` and
          `=excludes=` operators match elements within an array.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an object field name to sort results on. Provide a
          comma-separated list of field names for additional sort
          criteria. Prefix field names with a dash for descending sort
          order. For example, `name,-tlsIngestProfileId` sorts primarily
          by name, then IDs in descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an offset within the full set of results, with page
          numbers starting at 1.  Use this in conjunction with `pageSize`.
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Specifies the number of results on each page.  Use this in
          conjunction with `pageNumber`.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/tls-ingest-profiles-get-success.json
              schema:
                $ref: '#/components/schemas/tls-ingest-profile.collection'
          description: 200 response
      security:
      - oauth2: []
      summary: tls ingest profiles
    post:
      description: |
        Create a new TLS ingest profile: This operation creates a TLS
        ingest profile. To configure the ingest of content from an
        origin over HTTPS, a content provider must first create a TLS
        ingest profile and bind the profile to the origin. The
        HyperCache uses the TLS parameters specified in the TLS ingest
        profile to ingest content from the origin. A TLS ingest profile
        can be bound to one or more origins, and can only be deleted if
        it is not bound to an origin.
      operationId: createTlsIngestProfiles
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/tls-ingest-profile-post.json
            schema:
              $ref: '#/components/schemas/tls-ingest-profile.create'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                $ref: examples/tls-ingest-profile-get-success.json
              schema:
                $ref: '#/components/schemas/tls-ingest-profile.read-detailed'
          description: |
            An HTTP 201 will be returned if the request is successfully processed, and a new <<resourcePathName | !singularize>> object is created.  The location of the new object will be specified in the location header.
          headers:
            Location:
              description: |
                Specifies a URL linking the newly created resource.
              example: https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/content-delivery/v1/content-providers/1/tls-ingest-profiles/1
              explode: false
              schema:
                type: string
              style: simple
      security:
      - oauth2: []
      summary: tls ingest profiles
  /content-providers/{contentProviderId}/origins:
    get:
      description: |
        List origins: This operation displays the origins owned by the
        Content Provider specified by `contentProviderId`.
      operationId: listOrigins
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Results display either `summary` or `detailed` objects.
        explode: true
        in: query
        name: view
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies a query to filter down the set of results. The
          accompanying example specifies more than one query, where `;`
          and `,` delimiters clarify AND and OR logic. (Optional
          parentheses clarify logical groupings.) The `==` and `!=`
          operators test equivalency. The `=lt=`, `=le=`, `=gt=`, and
          `=ge=` operators compare numbers. The `=contains=` and
          `=excludes=` operators match elements within an array.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an object field name to sort results on. Provide a
          comma-separated list of field names for additional sort
          criteria. Prefix field names with a dash for descending sort
          order. For example, `name,-tlsIngestProfileId` sorts primarily
          by name, then IDs in descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an offset within the full set of results, with page
          numbers starting at 1.  Use this in conjunction with `pageSize`.
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Specifies the number of results on each page.  Use this in
          conjunction with `pageNumber`.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/origins-get-success.json
              schema:
                $ref: '#/components/schemas/origin.collection'
          description: 200 response
      security:
      - oauth2: []
      summary: origins
    post:
      description: |
        Create a new origin: This operation allows a service provider to
        register a new URL for each origin server that a content
        provider wants to add to the CDN.
      operationId: createOrigin
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/origin-post.json
            schema:
              $ref: '#/components/schemas/origin.create'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                $ref: examples/origin-get-success.json
              schema:
                $ref: '#/components/schemas/origin.read-detailed'
          description: |
            An HTTP 201 will be returned if the request is successfully processed, and a new <<resourcePathName | !singularize>> object is created.  The location of the new object will be specified in the location header.
          headers:
            Location:
              description: |
                Specifies a URL linking the newly created resource.
              example: https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/content-delivery/v1/content-providers/1/origins/1
              explode: false
              schema:
                type: string
              style: simple
      security:
      - oauth2: []
      summary: origins
  /content-providers/{contentProviderId}/tls-ingest-profiles/{tlsIngestProfileId}/origins:
    get:
      description: |
        List origins for a TLS delivery profile: This operation
        lists the origins associated with a specified TLS delivery
        profile.
      operationId: listTlsIngestProfileOrigins
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each TLS ingest profile.
        explode: false
        in: path
        name: tlsIngestProfileId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Results display either `summary` or `detailed` objects.
        explode: true
        in: query
        name: view
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies a query to filter down the set of results. The
          accompanying example specifies more than one query, where `;`
          and `,` delimiters clarify AND and OR logic. (Optional
          parentheses clarify logical groupings.) The `==` and `!=`
          operators test equivalency. The `=lt=`, `=le=`, `=gt=`, and
          `=ge=` operators compare numbers. The `=contains=` and
          `=excludes=` operators match elements within an array.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an object field name to sort results on. Provide a
          comma-separated list of field names for additional sort
          criteria. Prefix field names with a dash for descending sort
          order. For example, `name,-tlsIngestProfileId` sorts primarily
          by name, then IDs in descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an offset within the full set of results, with page
          numbers starting at 1.  Use this in conjunction with `pageSize`.
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Specifies the number of results on each page.  Use this in
          conjunction with `pageNumber`.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/origins-get-success.json
              schema:
                $ref: '#/components/schemas/origin.collection'
          description: 200 response
      security:
      - oauth2: []
      summary: origin per tls ingest profile
  /content-providers/{contentProviderId}/tls-delivery-profiles:
    get:
      description: |
        List TLS delivery profiles: This operation lists the TLS
        delivery profiles owned by the specified content provider.
      operationId: listTlsDeliveryProfiles
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Results display either `summary` or `detailed` objects.
        explode: true
        in: query
        name: view
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies a query to filter down the set of results. The
          accompanying example specifies more than one query, where `;`
          and `,` delimiters clarify AND and OR logic. (Optional
          parentheses clarify logical groupings.) The `==` and `!=`
          operators test equivalency. The `=lt=`, `=le=`, `=gt=`, and
          `=ge=` operators compare numbers. The `=contains=` and
          `=excludes=` operators match elements within an array.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an object field name to sort results on. Provide a
          comma-separated list of field names for additional sort
          criteria. Prefix field names with a dash for descending sort
          order. For example, `name,-tlsIngestProfileId` sorts primarily
          by name, then IDs in descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an offset within the full set of results, with page
          numbers starting at 1.  Use this in conjunction with `pageSize`.
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Specifies the number of results on each page.  Use this in
          conjunction with `pageNumber`.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/tls-delivery-profiles-get-success.json
              schema:
                $ref: '#/components/schemas/tls-delivery-profile.collection'
          description: 200 response
      security:
      - oauth2: []
      summary: tls delivery profiles
    post:
      description: |
        Create a new TLS delivery profile: This operation creates a new
        content provider TLS delivery profile. The content provider TLS
        delivery profile specifies the security settings used for TLS
        connections when a content provider wants content delivered over
        HTTPS. This type of profile is created by the content provider,
        and its available for use by CDN prefixes owned by that content
        provider.
      operationId: createTlsDeliveryProfile
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/tls-delivery-profile-post.json
            schema:
              $ref: '#/components/schemas/tls-delivery-profile.create'
        required: true
      responses:
        "201":
          content:
            application/json:
              example:
                $ref: examples/tls-delivery-profile-get-success.json
              schema:
                $ref: '#/components/schemas/tls-delivery-profile.read-detailed'
          description: |
            An HTTP 201 will be returned if the request is successfully processed, and a new <<resourcePathName | !singularize>> object is created.  The location of the new object will be specified in the location header.
          headers:
            Location:
              description: |
                Specifies a URL linking the newly created resource.
              example: https://akzz-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net/api/content-delivery/v1/content-providers/1/tls-delivery-profiles/1
              explode: false
              schema:
                type: string
              style: simple
      security:
      - oauth2: []
      summary: tls delivery profiles
  /content-providers/{contentProviderId}/origins/{originId}:
    delete:
      description: |
        Delete an origin: This operation removes the association of an
        origin server from the specified content provider.
      operationId: deleteOrigin
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each origin.
        explode: false
        in: path
        name: originId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: The Origin was successfully deleted.
      security:
      - oauth2: []
      summary: origin
    get:
      description: |
        Get an origin: This operation displays a list of origin
        servers associated with a specified content provider.
      operationId: readOrigin
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each origin.
        explode: false
        in: path
        name: originId
        required: true
        schema:
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/origin-get-success.json
              schema:
                $ref: '#/components/schemas/origin.read-detailed'
          description: |
            An HTTP 204 will signify the successful deletion of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: origin
    put:
      description: |
        Update an origin: This operation modifies the origin servers
        associated with a specified content provider.
      operationId: updateOrigin
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each origin.
        explode: false
        in: path
        name: originId
        required: true
        schema:
          type: integer
        style: simple
      requestBody:
        content:
          application/json:
            example:
              $ref: examples/origin-get-success.json
            schema:
              $ref: '#/components/schemas/origin.update'
        required: true
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/origin-get-success.json
              schema:
                $ref: '#/components/schemas/origin.read-detailed'
          description: |
            An HTTP 200 will signify the successful update of an <<resourcePathName | !singularize>> instance.
      security:
      - oauth2: []
      summary: origin
  /content-providers:
    get:
      description: |
        List Content Providers: This operation provides a list of Content Providers
        accessible to the principal. For Operators, all Content Providers in the system
        are returned. For Content Provider users, only the Content Providers that are
        associated with that user are returned. For Service Provider users, all Content
        Providers associated with that user and with that Service Provider are returned.
      operationId: listContentProviders
      parameters:
      - description: |
          Results display either `summary` or `detailed` objects.
        explode: true
        in: query
        name: view
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies a query to filter down the set of results. The
          accompanying example specifies more than one query, where `;`
          and `,` delimiters clarify AND and OR logic. (Optional
          parentheses clarify logical groupings.) The `==` and `!=`
          operators test equivalency. The `=lt=`, `=le=`, `=gt=`, and
          `=ge=` operators compare numbers. The `=contains=` and
          `=excludes=` operators match elements within an array.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an object field name to sort results on. Provide a
          comma-separated list of field names for additional sort
          criteria. Prefix field names with a dash for descending sort
          order. For example, `name,-tlsIngestProfileId` sorts primarily
          by name, then IDs in descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an offset within the full set of results, with page
          numbers starting at 1.  Use this in conjunction with `pageSize`.
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Specifies the number of results on each page.  Use this in
          conjunction with `pageNumber`.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/content-providers-get-success.json
              schema:
                $ref: '#/components/schemas/content-provider.collection'
          description: 200 response
      security:
      - oauth2: []
      summary: content providers
  /content-providers/{contentProviderId}/tls-delivery-profiles/{tlsDeliveryProfileId}/cdn-prefixes:
    get:
      description: |
        List CDN prefixes for a TLS delivery profile: This operation
        displays the list of CDN prefixes for the specified TLS
        delivery profile.
      operationId: listTlsDeliveryProfileCdnPrefixes
      parameters:
      - description: |
          Unique identifier for each content provider.
        explode: false
        in: path
        name: contentProviderId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Unique identifier for each TLS delivery profile.
        explode: false
        in: path
        name: tlsDeliveryProfileId
        required: true
        schema:
          type: integer
        style: simple
      - description: |
          Results display either `summary` or `detailed` objects.
        explode: true
        in: query
        name: view
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies a query to filter down the set of results. The
          accompanying example specifies more than one query, where `;`
          and `,` delimiters clarify AND and OR logic. (Optional
          parentheses clarify logical groupings.) The `==` and `!=`
          operators test equivalency. The `=lt=`, `=le=`, `=gt=`, and
          `=ge=` operators compare numbers. The `=contains=` and
          `=excludes=` operators match elements within an array.
        explode: true
        in: query
        name: filter
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an object field name to sort results on. Provide a
          comma-separated list of field names for additional sort
          criteria. Prefix field names with a dash for descending sort
          order. For example, `name,-tlsIngestProfileId` sorts primarily
          by name, then IDs in descending order.
        explode: true
        in: query
        name: sortBy
        required: false
        schema:
          type: string
        style: form
      - description: |
          Specifies an offset within the full set of results, with page
          numbers starting at 1.  Use this in conjunction with `pageSize`.
        explode: true
        in: query
        name: pageNumber
        required: false
        schema:
          type: integer
        style: form
      - description: |
          Specifies the number of results on each page.  Use this in
          conjunction with `pageNumber`.
        explode: true
        in: query
        name: pageSize
        required: false
        schema:
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              example:
                $ref: examples/cdn-prefixes-get-success.json
              schema:
                $ref: '#/components/schemas/cdn-prefix.collection'
          description: 200 response
      security:
      - oauth2: []
      summary: cdn prefixes per tls
components:
  schemas:
    origin.read-detailed:
      description: Origin update.
      example:
        errorCacheMaxRetry: 3
        edgeHostname: edgeHostname
        originTimeout: 212
        enableRequestIdExport: false
        hostnameOverride: hostnameOverride
        cacheKeyOriginHostnameOriginId: 1
        dynamicHierarchy:
          healthCheckUrl: https://openapi-generator.tech
          healthCheckValidResponseCodes:
          - null
          - null
          - null
          - null
          - null
          healthCheckInterval: 1
        enableAuthenticatedContent: false
        errorCacheMaxAge: 55
        contentProviderId: 1
        hostname: hostname
        ipAddressTypes:
        - IPV4
        - IPV4
        resolvableHostnames:
        - resolvableHostnames
        - resolvableHostnames
        - resolvableHostnames
        - resolvableHostnames
        - resolvableHostnames
        originId: 1
        fastReroute:
          originTimeout: 5.962133916683182
          enable: false
          intraCdnTimeout: 5.637376656633329
        enable: true
        tlsIngestProfileId: 1
        cacheableErrorResponseCodes:
        - null
        - null
        - null
        - null
        - null
        storagePartitionId: 1
        enableSiteRedirects: true
      properties:
        hostname:
          format: hostname
          type: string
        cachingType:
          $ref: '#/components/schemas/cachingType'
        hostnameOverride:
          description: A DNS hostname to use when connecting to the origin instead
            of that specified by the `hostname` field.  A port may be optionally specified
            by using hostname:port format.
          format: hostname
          type: string
        storagePartitionId:
          minimum: 1
          type: integer
        ipAddressTypes:
          default:
          - IPV6
          - IPV4
          description: A list of `IPv4` and `IPv6` address types, in order of preference,
            that may be used to communicate with this origin server. 'IPv6' and 'IPv4'
            are enabled by default, and 'IPv6' is preferred.
          items:
            enum:
            - IPV4
            - IPV6
            type: string
          maxItems: 2
          minItems: 1
          type: array
        edgeHostType:
          $ref: '#/components/schemas/edgeHostType'
        cacheKeyOriginHostnameOriginId:
          minimum: 1
          type: integer
        contentProviderId:
          minimum: 1
          type: integer
        fastReroute:
          $ref: '#/components/schemas/fastRerouteType'
        enableSiteRedirects:
          default: true
          description: Determines whether or not HyperCache redirects a client to
            a better site based on the rules in the site map. Enabling this to `true`
            allows the HyperCache to adhere to the LCDN site map configured using
            the request router service. If set to `false`, cache miss client requests
            to a CDN prefix that uses this origin server as a default result in a
            HyperCache request for the content directly to the origin server.
          type: boolean
        interSiteProtocol:
          $ref: '#/components/schemas/protocolType'
        enableRequestIdExport:
          default: false
          description: Causes the Hypercache to send its internal request ID to the
            origin server when ingesting content.
          type: boolean
        originId:
          minimum: 1
          type: integer
        enable:
          default: true
          type: boolean
        enableAuthenticatedContent:
          default: false
          description: Causes the HyperCache to send a HEAD request to the origin
            server for each client request. If the response is a status code of 2XX,
            the content is served to the client. Otherwise, the origin's status code
            is returned. This typically occurs when the origin server authenticates
            the client request using a cookie, token, or other means. Default is `false`.
          type: boolean
        dynamicHierarchy:
          $ref: '#/components/schemas/dynamicHierarchyType'
        tlsIngestProfileId:
          minimum: 1
          type: integer
        intraSiteProtocol:
          $ref: '#/components/schemas/protocolType'
        cacheableErrorResponseCodes:
          description: 'A list of HTTP status codes that the HPC caches. Each item
            is a single status code or range of status codes, where the starting code
            must be less than the ending code. For example, `209` and `310-320` are
            both valid. The following status codes are not allowed, either in single
            code, or as part of a range: 200, 203, 206, 300, 301, 410, 416.'
          items:
            $ref: '#/components/schemas/httpResponseCodeRangeType'
          maxItems: 256
          type: array
        resolvableHostnames:
          description: A list of virtual hosts, origin servers with resolvable hostnames.
            These resolvable hostnames are used by DNS to determine the IP addresses
            of the destination origin server.
          items:
            description: Origin server hostname.
            format: hostname
            maxLength: 256
            minLength: 1
            type: string
          maxItems: 50
          type: array
        errorCacheMaxRetry:
          description: The maximum number of retries in the case of an error response.
          maximum: 16
          minimum: 0
          type: integer
        edgeHostname:
          format: hostname
          type: string
        originTimeout:
          default: 300
          description: Origin idle connection timeout in seconds, specifies the length
            of time the HPC waits for a response to a request from an origin. If no
            response is received from an origin server within the configured timeout
            value, four additional attempts are made to the same origin server. If
            no response is received for the final request within the configured timeout,
            then that connection is terminated, and a 504 response is sent to the
            requesting client.
          maximum: 300
          minimum: 1
          type: integer
        errorCacheMaxAge:
          description: The maximum amount of time the HTTP status codes is cached
            by the HPC.
          maximum: 60
          minimum: 0
          type: integer
      required:
      - contentProviderId
      - hostname
      - originId
      type: object
    cdn-prefix.create:
      description: CdnPrefix create
      properties:
        enable:
          default: true
          type: boolean
        contentProviderId:
          minimum: 1
          type: integer
        siteMapId:
          minimum: 1
          type: integer
        prefixPrioritization:
          $ref: '#/components/schemas/prefixPrioritizationType'
        keepaliveRequests:
          description: Sets the maximum number of requests that can be served through
            one keep-alive connection. After the maximum number of requests are made,
            the connection is closed.
          maximum: 100000
          minimum: 0
          type: integer
        accessMapId:
          minimum: 1
          type: integer
        prefix:
          description: The CDN prefix registered on behalf of the content provider.
            For example, `cdn.example.com`.
          format: hostname
          maxLength: 128
          minLength: 1
          type: string
        dnsTtl:
          description: DNS response time-to-live (TTL) value for this CDN prefix,
            in seconds. Note that setting this field is only recommended for CDN operators.
          maximum: 2147483647
          minimum: 0
          type: integer
        ipAddressTagId:
          minimum: 1
          type: integer
      required:
      - contentProviderId
      - prefix
      type: object
    cdn-prefix.read-detailed:
      description: A CDN prefix corresponds to the fully qualified domain name (FQDN)
        at the beginning of a URI, effectively carving out a region of the URI name
        space to which a set of rules and policies are applied.
      example:
        siteMapId: 1
        keepaliveRequests: 14658
        accessMapId: 1
        enable: true
        prefix: prefix
        ipAddressTagId: 1
        dnsTtl: 1210617418
        contentProviderId: 1
        cdnPrefixId: 1
      properties:
        enable:
          default: true
          type: boolean
        contentProviderId:
          minimum: 1
          type: integer
        siteMapId:
          minimum: 1
          type: integer
        prefixPrioritization:
          $ref: '#/components/schemas/prefixPrioritizationType'
        keepaliveRequests:
          description: Sets the maximum number of requests that can be served through
            one keep-alive connection. After the maximum number of requests are made,
            the connection is closed.
          maximum: 100000
          minimum: 0
          type: integer
        accessMapId:
          minimum: 1
          type: integer
        prefix:
          description: The CDN prefix registered on behalf of the content provider.
            For example, `cdn.example.com`.
          format: hostname
          maxLength: 128
          minLength: 1
          type: string
        dnsTtl:
          description: DNS response time-to-live (TTL) value for this CDN prefix,
            in seconds. Note that setting this field is only recommended for CDN operators.
          maximum: 2147483647
          minimum: 0
          type: integer
        cdnPrefixId:
          minimum: 1
          type: integer
        ipAddressTagId:
          minimum: 1
          type: integer
      required:
      - cdnPrefixId
      - contentProviderId
      - prefix
      type: object
    origin.update:
      description: Origin update.
      example:
        errorCacheMaxRetry: 3
        edgeHostname: edgeHostname
        originTimeout: 212
        enableRequestIdExport: false
        hostnameOverride: hostnameOverride
        cacheKeyOriginHostnameOriginId: 1
        dynamicHierarchy:
          healthCheckUrl: https://openapi-generator.tech
          healthCheckValidResponseCodes:
          - null
          - null
          - null
          - null
          - null
          healthCheckInterval: 1
        enableAuthenticatedContent: false
        errorCacheMaxAge: 55
        contentProviderId: 1
        hostname: hostname
        ipAddressTypes:
        - IPV4
        - IPV4
        resolvableHostnames:
        - resolvableHostnames
        - resolvableHostnames
        - resolvableHostnames
        - resolvableHostnames
        - resolvableHostnames
        originId: 1
        fastReroute:
          originTimeout: 5.962133916683182
          enable: false
          intraCdnTimeout: 5.637376656633329
        enable: true
        tlsIngestProfileId: 1
        cacheableErrorResponseCodes:
        - null
        - null
        - null
        - null
        - null
        storagePartitionId: 1
        enableSiteRedirects: true
      properties:
        hostname:
          format: hostname
          type: string
        cachingType:
          $ref: '#/components/schemas/cachingType'
        hostnameOverride:
          description: A DNS hostname to use when connecting to the origin instead
            of that specified by the `hostname` field.  A port may be optionally specified
            by using hostname:port format.
          format: hostname
          type: string
        storagePartitionId:
          minimum: 1
          type: integer
        ipAddressTypes:
          default:
          - IPV6
          - IPV4
          description: A list of `IPv4` and `IPv6` address types, in order of preference,
            that may be used to communicate with this origin server. 'IPv6' and 'IPv4'
            are enabled by default, and 'IPv6' is preferred.
          items:
            enum:
            - IPV4
            - IPV6
            type: string
          maxItems: 2
          minItems: 1
          type: array
        edgeHostType:
          $ref: '#/components/schemas/edgeHostType'
        cacheKeyOriginHostnameOriginId:
          minimum: 1
          type: integer
        contentProviderId:
          minimum: 1
          type: integer
        fastReroute:
          $ref: '#/components/schemas/fastRerouteType'
        enableSiteRedirects:
          default: true
          description: Determines whether or not HyperCache redirects a client to
            a better site based on the rules in the site map. Enabling this to `true`
            allows the HyperCache to adhere to the LCDN site map configured using
            the request router service. If set to `false`, cache miss client requests
            to a CDN prefix that uses this origin server as a default result in a
            HyperCache request for the content directly to the origin server.
          type: boolean
        interSiteProtocol:
          $ref: '#/components/schemas/protocolType'
        enableRequestIdExport:
          default: false
          description: Causes the Hypercache to send its internal request ID to the
            origin server when ingesting content.
          type: boolean
        originId:
          minimum: 1
          type: integer
        enable:
          default: true
          type: boolean
        enableAuthenticatedContent:
          default: false
          description: Causes the HyperCache to send a HEAD request to the origin
            server for each client request. If the response is a status code of 2XX,
            the content is served to the client. Otherwise, the origin's status code
            is returned. This typically occurs when the origin server authenticates
            the client request using a cookie, token, or other means. Default is `false`.
          type: boolean
        dynamicHierarchy:
          $ref: '#/components/schemas/dynamicHierarchyType'
        tlsIngestProfileId:
          minimum: 1
          type: integer
        intraSiteProtocol:
          $ref: '#/components/schemas/protocolType'
        cacheableErrorResponseCodes:
          description: 'A list of HTTP status codes that the HPC caches. Each item
            is a single status code or range of status codes, where the starting code
            must be less than the ending code. For example, `209` and `310-320` are
            both valid. The following status codes are not allowed, either in single
            code, or as part of a range: 200, 203, 206, 300, 301, 410, 416.'
          items:
            $ref: '#/components/schemas/httpResponseCodeRangeType'
          maxItems: 256
          type: array
        resolvableHostnames:
          description: A list of virtual hosts, origin servers with resolvable hostnames.
            These resolvable hostnames are used by DNS to determine the IP addresses
            of the destination origin server.
          items:
            description: Origin server hostname.
            format: hostname
            maxLength: 256
            minLength: 1
            type: string
          maxItems: 50
          type: array
        errorCacheMaxRetry:
          description: The maximum number of retries in the case of an error response.
          maximum: 16
          minimum: 0
          type: integer
        edgeHostname:
          format: hostname
          type: string
        originTimeout:
          default: 300
          description: Origin idle connection timeout in seconds, specifies the length
            of time the HPC waits for a response to a request from an origin. If no
            response is received from an origin server within the configured timeout
            value, four additional attempts are made to the same origin server. If
            no response is received for the final request within the configured timeout,
            then that connection is terminated, and a 504 response is sent to the
            requesting client.
          maximum: 300
          minimum: 1
          type: integer
        errorCacheMaxAge:
          description: The maximum amount of time the HTTP status codes is cached
            by the HPC.
          maximum: 60
          minimum: 0
          type: integer
      required:
      - contentProviderId
      - hostname
      - originId
      type: object
    tls-delivery-profile.collection:
      description: A list of TLS delivery profiles.
      example:
        tlsDeliveryProfiles:
        - tlsCertificate: tlsCertificate
          enableClientAuth: false
          description: description
          tlsCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          contentProviderId: 1
          tlsCertificateKey: tlsCertificateKey
          tlsProtocols:
          - SSLV2
          - SSLV2
          tlsDeliveryProfileId: 1
          crlDetails:
            thisUpdate: 2000-01-23T04:56:07.000+00:00
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            revokedCertificates:
            - '{}'
            - '{}'
            nextUpdate: 2000-01-23T04:56:07.000+00:00
          cipherSuites: cipherSuites
          name: name
          caCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          crl: crl
          caCertificate: caCertificate
          tlsVerificationDepth: 2
        - tlsCertificate: tlsCertificate
          enableClientAuth: false
          description: description
          tlsCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          contentProviderId: 1
          tlsCertificateKey: tlsCertificateKey
          tlsProtocols:
          - SSLV2
          - SSLV2
          tlsDeliveryProfileId: 1
          crlDetails:
            thisUpdate: 2000-01-23T04:56:07.000+00:00
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            revokedCertificates:
            - '{}'
            - '{}'
            nextUpdate: 2000-01-23T04:56:07.000+00:00
          cipherSuites: cipherSuites
          name: name
          caCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          crl: crl
          caCertificate: caCertificate
          tlsVerificationDepth: 2
        page:
          totalResults: 6
          pageNumber: 1
          totalPages: 0
          pageSize: 5
      properties:
        tlsDeliveryProfiles:
          items:
            $ref: '#/components/schemas/tls-delivery-profile_3'
          type: array
        page:
          $ref: '#/components/schemas/pageType'
      required:
      - page
      - tlsDeliveryProfiles
      type: object
    tls-ingest-profile.read-detailed:
      description: TLS ingest profile object schema definition.
      example:
        enableClientAuth: false
        clientTlsCertificateKey: clientTlsCertificateKey
        clientTlsCertificate: clientTlsCertificate
        description: description
        contentProviderId: 1
        clientTlsCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        tlsProtocols:
        - SSLV2
        - SSLV2
        crlDetails:
          thisUpdate: 2000-01-23T04:56:07.000+00:00
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          revokedCertificates:
          - '{}'
          - '{}'
          nextUpdate: 2000-01-23T04:56:07.000+00:00
        cipherSuites: cipherSuites
        caCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        ciphers: ciphers
        name: name
        tlsIngestProfileId: 1
        crl: crl
        caCertificate: caCertificate
      properties:
        clientTlsCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        description:
          maxLength: 1024
          type: string
        tlsIngestProfileId:
          minimum: 1
          type: integer
        caCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        caCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        contentProviderId:
          minimum: 1
          type: integer
        ciphers:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9!+\-@=.:|, ]+$
          type: string
        crlDetails:
          $ref: '#/components/schemas/x509CrlSummaryType'
        tlsProtocols:
          default:
          - TLSV1_2
          description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, or `TLSV1_2`.
            Defaults to `TLSV1_2`.  The use of `SSLV2` or `SSLV3` are discouraged
            for security reasons.
          items:
            description: TLS protocol value.
            enum:
            - SSLV2
            - SSLV3
            - TLSV1
            - TLSV1_1
            - TLSV1_2
            type: string
          minItems: 1
          type: array
        cipherSuites:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9_:]+$
          type: string
        clientTlsCertificateKey:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        clientTlsCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        enableClientAuth:
          default: false
          description: Allows you to enable or disable client authorization. Enabling
            this feature causes HyperCache to authenticate client certificates using
            the CA certificate for each TLS connection.
          type: boolean
        crl:
          description: Certificate Revocation List. An OpenSSL PEM-formatted list
            of revoked client certificates.
          maxLength: 10000
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
      required:
      - contentProviderId
      - name
      - tlsIngestProfileId
      type: object
    cdn-prefix.rules:
      description: A rule object which is used to respond to different kinds of requests.
        A rule consists of criteria that identify which requests to process, and the
        behaviors to apply to those requests.
      example:
        children:
        - criterion:
            name: uriFilter
            options:
              uriFilterValue: uriFilterValue
              uriFilterType: EXACT_MATCH
          behaviors:
          - null
          - null
          name: name
        - criterion:
            name: uriFilter
            options:
              uriFilterValue: uriFilterValue
              uriFilterType: EXACT_MATCH
          behaviors:
          - null
          - null
          name: name
        defaultBehaviors:
        - null
        - null
      properties:
        defaultBehaviors:
          items:
            $ref: '#/components/schemas/defaultBehaviorType'
          type: array
        children:
          description: A list of child rules. Each child rule object consists of its
            name, the criterion to match URIs, and a list of behaviors that act upon
            that criterion.
          items:
            $ref: '#/components/schemas/cdn_prefix_rules_children'
          type: array
      type: object
    shared-secret-set.collection:
      description: A list of shared secret sets.
      example:
        sharedSecretSets:
        - name: name
          sharedSecretSetId: 1
          contentProviderId: 1
        - name: name
          sharedSecretSetId: 1
          contentProviderId: 1
        page:
          totalResults: 6
          pageNumber: 1
          totalPages: 0
          pageSize: 5
      properties:
        sharedSecretSets:
          items:
            $ref: '#/components/schemas/shared-secret-set_3'
          type: array
        page:
          $ref: '#/components/schemas/pageType'
      required:
      - page
      - sharedSecretSets
      type: object
    origin.collection:
      description: Origin collection
      example:
        origins:
        - errorCacheMaxRetry: 5
          edgeHostname: edgeHostname
          originTimeout: 61
          enableRequestIdExport: false
          hostnameOverride: hostnameOverride
          cacheKeyOriginHostnameOriginId: 1
          dynamicHierarchy:
            healthCheckUrl: https://openapi-generator.tech
            healthCheckValidResponseCodes:
            - null
            - null
            - null
            - null
            - null
            healthCheckInterval: 1
          enableAuthenticatedContent: false
          errorCacheMaxAge: 24
          contentProviderId: 1
          hostname: hostname
          resolvableHostnames:
          - resolvableHostnames
          - resolvableHostnames
          - resolvableHostnames
          - resolvableHostnames
          - resolvableHostnames
          originId: 1
          fastReroute:
            originTimeout: 5.962133916683182
            enable: false
            intraCdnTimeout: 5.637376656633329
          enable: true
          tlsIngestProfileId: 1
          cacheableErrorResponseCodes:
          - null
          - null
          - null
          - null
          - null
          storagePartitionId: 1
          enableSiteRedirects: true
        - errorCacheMaxRetry: 5
          edgeHostname: edgeHostname
          originTimeout: 61
          enableRequestIdExport: false
          hostnameOverride: hostnameOverride
          cacheKeyOriginHostnameOriginId: 1
          dynamicHierarchy:
            healthCheckUrl: https://openapi-generator.tech
            healthCheckValidResponseCodes:
            - null
            - null
            - null
            - null
            - null
            healthCheckInterval: 1
          enableAuthenticatedContent: false
          errorCacheMaxAge: 24
          contentProviderId: 1
          hostname: hostname
          resolvableHostnames:
          - resolvableHostnames
          - resolvableHostnames
          - resolvableHostnames
          - resolvableHostnames
          - resolvableHostnames
          originId: 1
          fastReroute:
            originTimeout: 5.962133916683182
            enable: false
            intraCdnTimeout: 5.637376656633329
          enable: true
          tlsIngestProfileId: 1
          cacheableErrorResponseCodes:
          - null
          - null
          - null
          - null
          - null
          storagePartitionId: 1
          enableSiteRedirects: true
        page:
          totalResults: 6
          pageNumber: 1
          totalPages: 0
          pageSize: 5
      properties:
        page:
          $ref: '#/components/schemas/pageType'
        origins:
          items:
            $ref: '#/components/schemas/origin_3'
          type: array
      required:
      - origins
      - page
      type: object
    shared-secret-set.update:
      description: Shared secret set object schema definition.  Shared secrets are
        used for URI signing, which is used as an authorization method for content
        delivery.
      example:
        name: name
        sharedSecretSetId: 1
        contentProviderId: 1
      properties:
        contentProviderId:
          minimum: 1
          type: integer
        name:
          maxLength: 128
          minLength: 1
          type: string
        sharedSecretSetId:
          minimum: 1
          type: integer
      required:
      - contentProviderId
      - name
      - sharedSecretSetId
      type: object
    tls-delivery-profile.update:
      description: TLS delivery Profile object schema definition.
      example:
        tlsCertificate: tlsCertificate
        enableClientAuth: false
        description: description
        tlsCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        contentProviderId: 1
        tlsCertificateKey: tlsCertificateKey
        caCertificateSecretId: 1
        tlsProtocols:
        - SSLV2
        - SSLV2
        tlsDeliveryProfileId: 1
        crlDetails:
          thisUpdate: 2000-01-23T04:56:07.000+00:00
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          revokedCertificates:
          - '{}'
          - '{}'
          nextUpdate: 2000-01-23T04:56:07.000+00:00
        cipherSuites: cipherSuites
        tlsCertificateAndKeySecretId: 1
        name: name
        ciphers: ciphers
        caCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        crl: crl
        caCertificate: caCertificate
        tlsVerificationDepth: 6
      properties:
        tlsDeliveryProfileId:
          minimum: 1
          type: integer
        tlsCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        tlsCertificateAndKeySecretId:
          minimum: 1
          type: integer
        name:
          maxLength: 128
          minLength: 1
          type: string
        ciphers:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9!+\-@=.:|, ]+$
          type: string
        caCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        caCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        contentProviderId:
          minimum: 1
          type: integer
        caCertificateSecretId:
          minimum: 1
          type: integer
        tlsVerificationDepth:
          description: Sets the verification depth in the client certificates chain.
          maximum: 10
          minimum: 1
          type: integer
        crlDetails:
          $ref: '#/components/schemas/x509CrlSummaryType'
        tlsCertificateKey:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        ecdhCurve:
          $ref: '#/components/schemas/ecdhCurveType'
        tlsCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        tlsProtocols:
          default:
          - TLSV1_2
          - TLSV1_3
          description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, `TLSV1_2`,
            or `TLSV1_3`.  Defaults to `TLSV1_2`, `TLSV1_3`.  The use of `SSLV2` or
            `SSLV3` are discouraged for security reasons.
          items:
            description: TLS protocol value.
            enum:
            - SSLV2
            - SSLV3
            - TLSV1
            - TLSV1_1
            - TLSV1_2
            - TLSV1_3
            type: string
          minItems: 1
          type: array
        cipherSuites:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9_:]+$
          type: string
        tlsBufferSize:
          $ref: '#/components/schemas/tlsBufferSizeType'
        enableClientAuth:
          default: false
          description: Allows you to enable or disable client authorization. Enabling
            this feature causes HyperCache to authenticate client certificates using
            the CA certificate for each TLS connection.
          type: boolean
        crl:
          description: Certificate Revocation List. An OpenSSL PEM-formatted list
            of revoked client certificates.
          maxLength: 10000
          type: string
        description:
          maxLength: 1024
          type: string
      required:
      - contentProviderId
      - name
      - tlsDeliveryProfileId
      type: object
    cdn-prefix.collection:
      description: CdnPrefix collection
      example:
        cdnPrefixes:
        - siteMapId: 1
          keepaliveRequests: 70614
          accessMapId: 1
          enable: true
          prefix: prefix
          ipAddressTagId: 1
          dnsTtl: 776546568
          contentProviderId: 1
          cdnPrefixId: 1
        - siteMapId: 1
          keepaliveRequests: 70614
          accessMapId: 1
          enable: true
          prefix: prefix
          ipAddressTagId: 1
          dnsTtl: 776546568
          contentProviderId: 1
          cdnPrefixId: 1
        page:
          totalResults: 6
          pageNumber: 1
          totalPages: 0
          pageSize: 5
      properties:
        page:
          $ref: '#/components/schemas/pageType'
        cdnPrefixes:
          items:
            $ref: '#/components/schemas/cdn-prefix_3'
          type: array
      required:
      - cdnPrefixes
      - page
      type: object
    tls-ingest-profile.collection:
      description: A list of TLS ingest profiles.
      example:
        tlsDeliveryProfiles:
        - enableClientAuth: false
          clientTlsCertificateKey: clientTlsCertificateKey
          clientTlsCertificate: clientTlsCertificate
          description: description
          contentProviderId: 1
          clientTlsCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          tlsProtocols:
          - SSLV2
          - SSLV2
          crlDetails:
            thisUpdate: 2000-01-23T04:56:07.000+00:00
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            revokedCertificates:
            - '{}'
            - '{}'
            nextUpdate: 2000-01-23T04:56:07.000+00:00
          cipherSuites: cipherSuites
          caCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          ciphers: ciphers
          name: name
          tlsIngestProfileId: 1
          crl: crl
          caCertificate: caCertificate
        - enableClientAuth: false
          clientTlsCertificateKey: clientTlsCertificateKey
          clientTlsCertificate: clientTlsCertificate
          description: description
          contentProviderId: 1
          clientTlsCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          tlsProtocols:
          - SSLV2
          - SSLV2
          crlDetails:
            thisUpdate: 2000-01-23T04:56:07.000+00:00
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            revokedCertificates:
            - '{}'
            - '{}'
            nextUpdate: 2000-01-23T04:56:07.000+00:00
          cipherSuites: cipherSuites
          caCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          ciphers: ciphers
          name: name
          tlsIngestProfileId: 1
          crl: crl
          caCertificate: caCertificate
        page:
          totalResults: 6
          pageNumber: 1
          totalPages: 0
          pageSize: 5
      properties:
        tlsDeliveryProfiles:
          items:
            $ref: '#/components/schemas/tls-ingest-profile_3'
          type: array
        page:
          $ref: '#/components/schemas/pageType'
      required:
      - page
      - tlsIngestProfiles
      type: object
    shared-secret-set.read-detailed:
      description: Shared secret set object schema definition.  Shared secrets are
        used for URI signing, which is used as an authorization method for content
        delivery.
      example:
        name: name
        sharedSecretSetId: 1
        contentProviderId: 1
      properties:
        contentProviderId:
          minimum: 1
          type: integer
        name:
          maxLength: 128
          minLength: 1
          type: string
        sharedSecretSetId:
          minimum: 1
          type: integer
      required:
      - contentProviderId
      - name
      - sharedSecretSetId
      type: object
    content-provider.read-detailed:
      description: A Content Provider is an organization that has content it wants
        to deliver via the LCDN.
      example:
        serviceProviderId: 1
        enable: true
        name: name
        account: account
        contentProviderId: 1
      properties:
        contentProviderId:
          minimum: 1
          type: integer
        enable:
          default: true
          type: boolean
        serviceProviderId:
          minimum: 1
          type: integer
        account:
          maxLength: 20
          minLength: 1
          pattern: ^[a-z0-9]*$
          type: string
        name:
          maxLength: 254
          minLength: 1
          type: string
      required:
      - account
      - contentProviderId
      - name
      - serviceProviderId
      type: object
    shared-secret-set.create:
      description: Create one or more shared secrets for a content provider.  Shared
        secrets are used for URI signing, which is used as an authorization method
        for content delivery.
      properties:
        contentProviderId:
          minimum: 1
          type: integer
        name:
          maxLength: 128
          minLength: 1
          type: string
      required:
      - contentProviderId
      - name
      type: object
    shared-secret-set-secrets:
      description: Shared secret set secrets object definition.
      example:
        secrets:
          key: secrets
      properties:
        secrets:
          additionalProperties:
            description: A password, passphrase, a large number, or an array of randomly
              chosen bytes for each key you are creating as a member of the secret
              set.
            maxLength: 4096
            minLength: 1
            type: string
          description: One or more unique key/index string pairs to be added as members
            of the secret set.
          type: object
      required:
      - secrets
      type: object
    tls-delivery-profile.create:
      description: TLS delivery profile create
      properties:
        tlsCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        tlsCertificateAndKeySecretId:
          minimum: 1
          type: integer
        name:
          maxLength: 128
          minLength: 1
          type: string
        ciphers:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9!+\-@=.:|, ]+$
          type: string
        caCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        caCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        contentProviderId:
          minimum: 1
          type: integer
        caCertificateSecretId:
          minimum: 1
          type: integer
        tlsVerificationDepth:
          description: Sets the verification depth in the client certificates chain.
          maximum: 10
          minimum: 1
          type: integer
        tlsBufferSize:
          $ref: '#/components/schemas/tlsBufferSizeType'
        tlsCertificateKey:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        ecdhCurve:
          $ref: '#/components/schemas/ecdhCurveType'
        tlsCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        tlsProtocols:
          default:
          - TLSV1_2
          - TLSV1_3
          description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, `TLSV1_2`,
            or `TLSV1_3`.  Defaults to `TLSV1_2`, `TLSV1_3`.  The use of `SSLV2` or
            `SSLV3` are discouraged for security reasons.
          items:
            description: TLS protocol value.
            enum:
            - SSLV2
            - SSLV3
            - TLSV1
            - TLSV1_1
            - TLSV1_2
            - TLSV1_3
            type: string
          minItems: 1
          type: array
        cipherSuites:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9_:]+$
          type: string
        enableClientAuth:
          default: false
          description: Allows you to enable or disable client authorization. Enabling
            this feature causes HyperCache to authenticate client certificates using
            the CA certificate for each TLS connection.
          type: boolean
        crl:
          description: Certificate Revocation List. An OpenSSL PEM-formatted list
            of revoked client certificates.
          maxLength: 10000
          type: string
        description:
          maxLength: 1024
          type: string
      required:
      - contentProviderId
      - name
      type: object
    tls-delivery-profile.read-detailed:
      description: TLS delivery Profile object schema definition.
      example:
        tlsCertificate: tlsCertificate
        enableClientAuth: false
        description: description
        tlsCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        contentProviderId: 1
        tlsCertificateKey: tlsCertificateKey
        caCertificateSecretId: 1
        tlsProtocols:
        - SSLV2
        - SSLV2
        tlsDeliveryProfileId: 1
        crlDetails:
          thisUpdate: 2000-01-23T04:56:07.000+00:00
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          revokedCertificates:
          - '{}'
          - '{}'
          nextUpdate: 2000-01-23T04:56:07.000+00:00
        cipherSuites: cipherSuites
        tlsCertificateAndKeySecretId: 1
        name: name
        ciphers: ciphers
        caCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        crl: crl
        caCertificate: caCertificate
        tlsVerificationDepth: 6
      properties:
        tlsDeliveryProfileId:
          minimum: 1
          type: integer
        tlsCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        tlsCertificateAndKeySecretId:
          minimum: 1
          type: integer
        name:
          maxLength: 128
          minLength: 1
          type: string
        ciphers:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9!+\-@=.:|, ]+$
          type: string
        caCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        caCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        contentProviderId:
          minimum: 1
          type: integer
        caCertificateSecretId:
          minimum: 1
          type: integer
        tlsVerificationDepth:
          description: Sets the verification depth in the client certificates chain.
          maximum: 10
          minimum: 1
          type: integer
        crlDetails:
          $ref: '#/components/schemas/x509CrlSummaryType'
        tlsCertificateKey:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        ecdhCurve:
          $ref: '#/components/schemas/ecdhCurveType'
        tlsCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        tlsProtocols:
          default:
          - TLSV1_2
          - TLSV1_3
          description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, `TLSV1_2`,
            or `TLSV1_3`.  Defaults to `TLSV1_2`, `TLSV1_3`.  The use of `SSLV2` or
            `SSLV3` are discouraged for security reasons.
          items:
            description: TLS protocol value.
            enum:
            - SSLV2
            - SSLV3
            - TLSV1
            - TLSV1_1
            - TLSV1_2
            - TLSV1_3
            type: string
          minItems: 1
          type: array
        cipherSuites:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9_:]+$
          type: string
        tlsBufferSize:
          $ref: '#/components/schemas/tlsBufferSizeType'
        enableClientAuth:
          default: false
          description: Allows you to enable or disable client authorization. Enabling
            this feature causes HyperCache to authenticate client certificates using
            the CA certificate for each TLS connection.
          type: boolean
        crl:
          description: Certificate Revocation List. An OpenSSL PEM-formatted list
            of revoked client certificates.
          maxLength: 10000
          type: string
        description:
          maxLength: 1024
          type: string
      required:
      - contentProviderId
      - name
      - tlsDeliveryProfileId
      type: object
    cdn-prefix.update:
      description: A CDN prefix corresponds to the fully qualified domain name (FQDN)
        at the beginning of a URI, effectively carving out a region of the URI name
        space to which a set of rules and policies are applied.
      example:
        siteMapId: 1
        keepaliveRequests: 14658
        accessMapId: 1
        enable: true
        prefix: prefix
        ipAddressTagId: 1
        dnsTtl: 1210617418
        contentProviderId: 1
        cdnPrefixId: 1
      properties:
        enable:
          default: true
          type: boolean
        contentProviderId:
          minimum: 1
          type: integer
        siteMapId:
          minimum: 1
          type: integer
        prefixPrioritization:
          $ref: '#/components/schemas/prefixPrioritizationType'
        keepaliveRequests:
          description: Sets the maximum number of requests that can be served through
            one keep-alive connection. After the maximum number of requests are made,
            the connection is closed.
          maximum: 100000
          minimum: 0
          type: integer
        accessMapId:
          minimum: 1
          type: integer
        prefix:
          description: The CDN prefix registered on behalf of the content provider.
            For example, `cdn.example.com`.
          format: hostname
          maxLength: 128
          minLength: 1
          type: string
        dnsTtl:
          description: DNS response time-to-live (TTL) value for this CDN prefix,
            in seconds. Note that setting this field is only recommended for CDN operators.
          maximum: 2147483647
          minimum: 0
          type: integer
        cdnPrefixId:
          minimum: 1
          type: integer
        ipAddressTagId:
          minimum: 1
          type: integer
      required:
      - cdnPrefixId
      - contentProviderId
      - prefix
      type: object
    tls-ingest-profile.create:
      description: TLS ingest profile create
      properties:
        clientTlsCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
        caCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        caCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        contentProviderId:
          minimum: 1
          type: integer
        ciphers:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9!+\-@=.:|, ]+$
          type: string
        tlsProtocols:
          default:
          - TLSV1_2
          description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, or `TLSV1_2`.
            Defaults to `TLSV1_2`.  The use of `SSLV2` or `SSLV3` are discouraged
            for security reasons.
          items:
            description: TLS protocol value.
            enum:
            - SSLV2
            - SSLV3
            - TLSV1
            - TLSV1_1
            - TLSV1_2
            type: string
          minItems: 1
          type: array
        cipherSuites:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9_:]+$
          type: string
        clientTlsCertificateKey:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        clientTlsCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        enableClientAuth:
          default: false
          description: Allows you to enable or disable client authorization. Enabling
            this feature causes HyperCache to authenticate client certificates using
            the CA certificate for each TLS connection.
          type: boolean
        crl:
          description: Certificate Revocation List. An OpenSSL PEM-formatted list
            of revoked client certificates.
          maxLength: 10000
          type: string
        description:
          maxLength: 1024
          type: string
      required:
      - contentProviderId
      - name
      type: object
    origin.create:
      description: Origin create
      properties:
        hostname:
          format: hostname
          type: string
        cachingType:
          $ref: '#/components/schemas/cachingType'
        hostnameOverride:
          description: A DNS hostname to use when connecting to the origin instead
            of that specified by the `hostname` field.  A port may be optionally specified
            by using hostname:port format.
          format: hostname
          type: string
        ipAddressTypes:
          default:
          - IPV6
          - IPV4
          description: A list of `IPv4` and `IPv6` address types, in order of preference,
            that may be used to communicate with this origin server. 'IPv6' and 'IPv4'
            are enabled by default, and 'IPv6' is preferred.
          items:
            enum:
            - IPV4
            - IPV6
            type: string
          maxItems: 2
          minItems: 1
          type: array
        storagePartitionId:
          minimum: 1
          type: integer
        edgeHostType:
          $ref: '#/components/schemas/edgeHostType'
        cacheKeyOriginHostnameOriginId:
          minimum: 1
          type: integer
        contentProviderId:
          minimum: 1
          type: integer
        fastReroute:
          $ref: '#/components/schemas/fastRerouteType'
        enableSiteRedirects:
          default: true
          description: Determines whether or not HyperCache redirects a client to
            a better site based on the rules in the site map. Enabling this to `true`
            allows the HyperCache to adhere to the LCDN site map configured using
            the request router service. If set to `false`, cache miss client requests
            to a CDN prefix that uses this origin server as a default result in a
            HyperCache request for the content directly to the origin server.
          type: boolean
        interSiteProtocol:
          $ref: '#/components/schemas/protocolType'
        enableRequestIdExport:
          default: false
          description: Causes the Hypercache to send its internal request ID to the
            origin server when ingesting content.
          type: boolean
        enable:
          default: true
          type: boolean
        enableAuthenticatedContent:
          default: false
          description: Causes the HyperCache to send a HEAD request to the origin
            server for each client request. If the response is a status code of 2XX,
            the content is served to the client. Otherwise, the origin's status code
            is returned. This typically occurs when the origin server authenticates
            the client request using a cookie, token, or other means. Default is `false`.
          type: boolean
        dynamicHierarchy:
          $ref: '#/components/schemas/dynamicHierarchyType'
        tlsIngestProfileId:
          minimum: 1
          type: integer
        intraSiteProtocol:
          $ref: '#/components/schemas/protocolType'
        cacheableErrorResponseCodes:
          description: 'A list of HTTP status codes that the HPC caches. Each item
            is a single status code or range of status codes, where the starting code
            must be less than the ending code. For example, `209` and `310-320` are
            both valid. The following status codes are not allowed, either in single
            code, or as part of a range: 200, 203, 206, 300, 301, 410, 416.'
          items:
            $ref: '#/components/schemas/httpResponseCodeRangeType'
          maxItems: 256
          type: array
        resolvableHostnames:
          description: A list of virtual hosts, origin servers with resolvable hostnames.
            These resolvable hostnames are used by DNS to determine the IP addresses
            of the destination origin server.
          items:
            description: Origin server hostname.
            format: hostname
            maxLength: 256
            minLength: 1
            type: string
          maxItems: 50
          type: array
        errorCacheMaxRetry:
          description: The maximum number of retries in the case of an error response.
          maximum: 16
          minimum: 0
          type: integer
        edgeHostname:
          format: hostname
          type: string
        originTimeout:
          default: 300
          description: Origin idle connection timeout in seconds, specifies the length
            of time the HPC waits for a response to a request from an origin. If no
            response is received from an origin server within the configured timeout
            value, four additional attempts are made to the same origin server. If
            no response is received for the final request within the configured timeout,
            then that connection is terminated, and a 504 response is sent to the
            requesting client.
          maximum: 300
          minimum: 1
          type: integer
        errorCacheMaxAge:
          description: The maximum amount of time the HTTP status codes is cached
            by the HPC.
          maximum: 60
          minimum: 0
          type: integer
      required:
      - contentProviderId
      - hostname
      type: object
    tls-ingest-profile.update:
      description: TLS ingest profile object schema definition.
      example:
        enableClientAuth: false
        clientTlsCertificateKey: clientTlsCertificateKey
        clientTlsCertificate: clientTlsCertificate
        description: description
        contentProviderId: 1
        clientTlsCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        tlsProtocols:
        - SSLV2
        - SSLV2
        crlDetails:
          thisUpdate: 2000-01-23T04:56:07.000+00:00
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          revokedCertificates:
          - '{}'
          - '{}'
          nextUpdate: 2000-01-23T04:56:07.000+00:00
        cipherSuites: cipherSuites
        caCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        ciphers: ciphers
        name: name
        tlsIngestProfileId: 1
        crl: crl
        caCertificate: caCertificate
      properties:
        clientTlsCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        description:
          maxLength: 1024
          type: string
        tlsIngestProfileId:
          minimum: 1
          type: integer
        caCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        caCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        contentProviderId:
          minimum: 1
          type: integer
        ciphers:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9!+\-@=.:|, ]+$
          type: string
        crlDetails:
          $ref: '#/components/schemas/x509CrlSummaryType'
        tlsProtocols:
          default:
          - TLSV1_2
          description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, or `TLSV1_2`.
            Defaults to `TLSV1_2`.  The use of `SSLV2` or `SSLV3` are discouraged
            for security reasons.
          items:
            description: TLS protocol value.
            enum:
            - SSLV2
            - SSLV3
            - TLSV1
            - TLSV1_1
            - TLSV1_2
            type: string
          minItems: 1
          type: array
        cipherSuites:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9_:]+$
          type: string
        clientTlsCertificateKey:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        clientTlsCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        enableClientAuth:
          default: false
          description: Allows you to enable or disable client authorization. Enabling
            this feature causes HyperCache to authenticate client certificates using
            the CA certificate for each TLS connection.
          type: boolean
        crl:
          description: Certificate Revocation List. An OpenSSL PEM-formatted list
            of revoked client certificates.
          maxLength: 10000
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
      required:
      - contentProviderId
      - name
      - tlsIngestProfileId
      type: object
    content-provider.collection:
      description: ContentProvider collection
      example:
        contentProviders:
        - name: name
          contentProviderId: 1
        - name: name
          contentProviderId: 1
        page:
          totalResults: 6
          pageNumber: 1
          totalPages: 0
          pageSize: 5
      properties:
        page:
          $ref: '#/components/schemas/pageType'
        contentProviders:
          items:
            $ref: '#/components/schemas/content-provider_2'
          type: array
      required:
      - contentProviders
      - page
      type: object
    origin:
      description: Origin update.
      example:
        errorCacheMaxRetry: 3
        edgeHostname: edgeHostname
        originTimeout: 212
        enableRequestIdExport: false
        hostnameOverride: hostnameOverride
        cacheKeyOriginHostnameOriginId: 1
        dynamicHierarchy:
          healthCheckUrl: https://openapi-generator.tech
          healthCheckValidResponseCodes:
          - null
          - null
          - null
          - null
          - null
          healthCheckInterval: 1
        enableAuthenticatedContent: false
        errorCacheMaxAge: 55
        contentProviderId: 1
        hostname: hostname
        ipAddressTypes:
        - IPV4
        - IPV4
        resolvableHostnames:
        - resolvableHostnames
        - resolvableHostnames
        - resolvableHostnames
        - resolvableHostnames
        - resolvableHostnames
        originId: 1
        fastReroute:
          originTimeout: 5.962133916683182
          enable: false
          intraCdnTimeout: 5.637376656633329
        enable: true
        tlsIngestProfileId: 1
        cacheableErrorResponseCodes:
        - null
        - null
        - null
        - null
        - null
        storagePartitionId: 1
        enableSiteRedirects: true
      properties:
        hostname:
          format: hostname
          type: string
        cachingType:
          $ref: '#/components/schemas/cachingType'
        hostnameOverride:
          description: A DNS hostname to use when connecting to the origin instead
            of that specified by the `hostname` field.  A port may be optionally specified
            by using hostname:port format.
          format: hostname
          type: string
        storagePartitionId:
          minimum: 1
          type: integer
        ipAddressTypes:
          default:
          - IPV6
          - IPV4
          description: A list of `IPv4` and `IPv6` address types, in order of preference,
            that may be used to communicate with this origin server. 'IPv6' and 'IPv4'
            are enabled by default, and 'IPv6' is preferred.
          items:
            enum:
            - IPV4
            - IPV6
            type: string
          maxItems: 2
          minItems: 1
          type: array
        edgeHostType:
          $ref: '#/components/schemas/edgeHostType'
        cacheKeyOriginHostnameOriginId:
          minimum: 1
          type: integer
        contentProviderId:
          minimum: 1
          type: integer
        fastReroute:
          $ref: '#/components/schemas/fastRerouteType'
        enableSiteRedirects:
          default: true
          description: Determines whether or not HyperCache redirects a client to
            a better site based on the rules in the site map. Enabling this to `true`
            allows the HyperCache to adhere to the LCDN site map configured using
            the request router service. If set to `false`, cache miss client requests
            to a CDN prefix that uses this origin server as a default result in a
            HyperCache request for the content directly to the origin server.
          type: boolean
        interSiteProtocol:
          $ref: '#/components/schemas/protocolType'
        enableRequestIdExport:
          default: false
          description: Causes the Hypercache to send its internal request ID to the
            origin server when ingesting content.
          type: boolean
        originId:
          minimum: 1
          type: integer
        enable:
          default: true
          type: boolean
        enableAuthenticatedContent:
          default: false
          description: Causes the HyperCache to send a HEAD request to the origin
            server for each client request. If the response is a status code of 2XX,
            the content is served to the client. Otherwise, the origin's status code
            is returned. This typically occurs when the origin server authenticates
            the client request using a cookie, token, or other means. Default is `false`.
          type: boolean
        dynamicHierarchy:
          $ref: '#/components/schemas/dynamicHierarchyType'
        tlsIngestProfileId:
          minimum: 1
          type: integer
        intraSiteProtocol:
          $ref: '#/components/schemas/protocolType'
        cacheableErrorResponseCodes:
          description: 'A list of HTTP status codes that the HPC caches. Each item
            is a single status code or range of status codes, where the starting code
            must be less than the ending code. For example, `209` and `310-320` are
            both valid. The following status codes are not allowed, either in single
            code, or as part of a range: 200, 203, 206, 300, 301, 410, 416.'
          items:
            $ref: '#/components/schemas/httpResponseCodeRangeType'
          maxItems: 256
          type: array
        resolvableHostnames:
          description: A list of virtual hosts, origin servers with resolvable hostnames.
            These resolvable hostnames are used by DNS to determine the IP addresses
            of the destination origin server.
          items:
            description: Origin server hostname.
            format: hostname
            maxLength: 256
            minLength: 1
            type: string
          maxItems: 50
          type: array
        errorCacheMaxRetry:
          description: The maximum number of retries in the case of an error response.
          maximum: 16
          minimum: 0
          type: integer
        edgeHostname:
          format: hostname
          type: string
        originTimeout:
          default: 300
          description: Origin idle connection timeout in seconds, specifies the length
            of time the HPC waits for a response to a request from an origin. If no
            response is received from an origin server within the configured timeout
            value, four additional attempts are made to the same origin server. If
            no response is received for the final request within the configured timeout,
            then that connection is terminated, and a 504 response is sent to the
            requesting client.
          maximum: 300
          minimum: 1
          type: integer
        errorCacheMaxAge:
          description: The maximum amount of time the HTTP status codes is cached
            by the HPC.
          maximum: 60
          minimum: 0
          type: integer
      required:
      - contentProviderId
      - hostname
      - originId
      type: object
    cdn-prefix:
      description: CdnPrefix create
      properties:
        enable:
          default: true
          type: boolean
        contentProviderId:
          minimum: 1
          type: integer
        siteMapId:
          minimum: 1
          type: integer
        prefixPrioritization:
          $ref: '#/components/schemas/prefixPrioritizationType'
        keepaliveRequests:
          description: Sets the maximum number of requests that can be served through
            one keep-alive connection. After the maximum number of requests are made,
            the connection is closed.
          maximum: 100000
          minimum: 0
          type: integer
        accessMapId:
          minimum: 1
          type: integer
        prefix:
          description: The CDN prefix registered on behalf of the content provider.
            For example, `cdn.example.com`.
          format: hostname
          maxLength: 128
          minLength: 1
          type: string
        dnsTtl:
          description: DNS response time-to-live (TTL) value for this CDN prefix,
            in seconds. Note that setting this field is only recommended for CDN operators.
          maximum: 2147483647
          minimum: 0
          type: integer
        ipAddressTagId:
          minimum: 1
          type: integer
      required:
      - contentProviderId
      - prefix
      type: object
    cdn-prefix_1:
      description: A CDN prefix corresponds to the fully qualified domain name (FQDN)
        at the beginning of a URI, effectively carving out a region of the URI name
        space to which a set of rules and policies are applied.
      example:
        siteMapId: 1
        keepaliveRequests: 14658
        accessMapId: 1
        enable: true
        prefix: prefix
        ipAddressTagId: 1
        dnsTtl: 1210617418
        contentProviderId: 1
        cdnPrefixId: 1
      properties:
        enable:
          default: true
          type: boolean
        contentProviderId:
          minimum: 1
          type: integer
        siteMapId:
          minimum: 1
          type: integer
        prefixPrioritization:
          $ref: '#/components/schemas/prefixPrioritizationType'
        keepaliveRequests:
          description: Sets the maximum number of requests that can be served through
            one keep-alive connection. After the maximum number of requests are made,
            the connection is closed.
          maximum: 100000
          minimum: 0
          type: integer
        accessMapId:
          minimum: 1
          type: integer
        prefix:
          description: The CDN prefix registered on behalf of the content provider.
            For example, `cdn.example.com`.
          format: hostname
          maxLength: 128
          minLength: 1
          type: string
        dnsTtl:
          description: DNS response time-to-live (TTL) value for this CDN prefix,
            in seconds. Note that setting this field is only recommended for CDN operators.
          maximum: 2147483647
          minimum: 0
          type: integer
        cdnPrefixId:
          minimum: 1
          type: integer
        ipAddressTagId:
          minimum: 1
          type: integer
      required:
      - cdnPrefixId
      - contentProviderId
      - prefix
      type: object
    tls-delivery-profile:
      description: A list of TLS delivery profiles.
      example:
        tlsDeliveryProfiles:
        - tlsCertificate: tlsCertificate
          enableClientAuth: false
          description: description
          tlsCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          contentProviderId: 1
          tlsCertificateKey: tlsCertificateKey
          tlsProtocols:
          - SSLV2
          - SSLV2
          tlsDeliveryProfileId: 1
          crlDetails:
            thisUpdate: 2000-01-23T04:56:07.000+00:00
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            revokedCertificates:
            - '{}'
            - '{}'
            nextUpdate: 2000-01-23T04:56:07.000+00:00
          cipherSuites: cipherSuites
          name: name
          caCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          crl: crl
          caCertificate: caCertificate
          tlsVerificationDepth: 2
        - tlsCertificate: tlsCertificate
          enableClientAuth: false
          description: description
          tlsCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          contentProviderId: 1
          tlsCertificateKey: tlsCertificateKey
          tlsProtocols:
          - SSLV2
          - SSLV2
          tlsDeliveryProfileId: 1
          crlDetails:
            thisUpdate: 2000-01-23T04:56:07.000+00:00
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            revokedCertificates:
            - '{}'
            - '{}'
            nextUpdate: 2000-01-23T04:56:07.000+00:00
          cipherSuites: cipherSuites
          name: name
          caCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          crl: crl
          caCertificate: caCertificate
          tlsVerificationDepth: 2
        page:
          totalResults: 6
          pageNumber: 1
          totalPages: 0
          pageSize: 5
      properties:
        tlsDeliveryProfiles:
          items:
            $ref: '#/components/schemas/tls-delivery-profile_3'
          type: array
        page:
          $ref: '#/components/schemas/pageType'
      required:
      - page
      - tlsDeliveryProfiles
      type: object
    tls-ingest-profile:
      description: TLS ingest profile object schema definition.
      example:
        enableClientAuth: false
        clientTlsCertificateKey: clientTlsCertificateKey
        clientTlsCertificate: clientTlsCertificate
        description: description
        contentProviderId: 1
        clientTlsCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        tlsProtocols:
        - SSLV2
        - SSLV2
        crlDetails:
          thisUpdate: 2000-01-23T04:56:07.000+00:00
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          revokedCertificates:
          - '{}'
          - '{}'
          nextUpdate: 2000-01-23T04:56:07.000+00:00
        cipherSuites: cipherSuites
        caCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        ciphers: ciphers
        name: name
        tlsIngestProfileId: 1
        crl: crl
        caCertificate: caCertificate
      properties:
        clientTlsCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        description:
          maxLength: 1024
          type: string
        tlsIngestProfileId:
          minimum: 1
          type: integer
        caCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        caCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        contentProviderId:
          minimum: 1
          type: integer
        ciphers:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9!+\-@=.:|, ]+$
          type: string
        crlDetails:
          $ref: '#/components/schemas/x509CrlSummaryType'
        tlsProtocols:
          default:
          - TLSV1_2
          description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, or `TLSV1_2`.
            Defaults to `TLSV1_2`.  The use of `SSLV2` or `SSLV3` are discouraged
            for security reasons.
          items:
            description: TLS protocol value.
            enum:
            - SSLV2
            - SSLV3
            - TLSV1
            - TLSV1_1
            - TLSV1_2
            type: string
          minItems: 1
          type: array
        cipherSuites:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9_:]+$
          type: string
        clientTlsCertificateKey:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        clientTlsCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        enableClientAuth:
          default: false
          description: Allows you to enable or disable client authorization. Enabling
            this feature causes HyperCache to authenticate client certificates using
            the CA certificate for each TLS connection.
          type: boolean
        crl:
          description: Certificate Revocation List. An OpenSSL PEM-formatted list
            of revoked client certificates.
          maxLength: 10000
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
      required:
      - contentProviderId
      - name
      - tlsIngestProfileId
      type: object
    rules:
      description: A rule object which is used to respond to different kinds of requests.
        A rule consists of criteria that identify which requests to process, and the
        behaviors to apply to those requests.
      example:
        children:
        - criterion:
            name: uriFilter
            options:
              uriFilterValue: uriFilterValue
              uriFilterType: EXACT_MATCH
          behaviors:
          - null
          - null
          name: name
        - criterion:
            name: uriFilter
            options:
              uriFilterValue: uriFilterValue
              uriFilterType: EXACT_MATCH
          behaviors:
          - null
          - null
          name: name
        defaultBehaviors:
        - null
        - null
      properties:
        defaultBehaviors:
          items:
            $ref: '#/components/schemas/defaultBehaviorType'
          type: array
        children:
          description: A list of child rules. Each child rule object consists of its
            name, the criterion to match URIs, and a list of behaviors that act upon
            that criterion.
          items:
            $ref: '#/components/schemas/cdn_prefix_rules_children'
          type: array
      type: object
    shared-secret-set:
      description: A list of shared secret sets.
      example:
        sharedSecretSets:
        - name: name
          sharedSecretSetId: 1
          contentProviderId: 1
        - name: name
          sharedSecretSetId: 1
          contentProviderId: 1
        page:
          totalResults: 6
          pageNumber: 1
          totalPages: 0
          pageSize: 5
      properties:
        sharedSecretSets:
          items:
            $ref: '#/components/schemas/shared-secret-set_3'
          type: array
        page:
          $ref: '#/components/schemas/pageType'
      required:
      - page
      - sharedSecretSets
      type: object
    origin_1:
      description: Origin collection
      example:
        origins:
        - errorCacheMaxRetry: 5
          edgeHostname: edgeHostname
          originTimeout: 61
          enableRequestIdExport: false
          hostnameOverride: hostnameOverride
          cacheKeyOriginHostnameOriginId: 1
          dynamicHierarchy:
            healthCheckUrl: https://openapi-generator.tech
            healthCheckValidResponseCodes:
            - null
            - null
            - null
            - null
            - null
            healthCheckInterval: 1
          enableAuthenticatedContent: false
          errorCacheMaxAge: 24
          contentProviderId: 1
          hostname: hostname
          resolvableHostnames:
          - resolvableHostnames
          - resolvableHostnames
          - resolvableHostnames
          - resolvableHostnames
          - resolvableHostnames
          originId: 1
          fastReroute:
            originTimeout: 5.962133916683182
            enable: false
            intraCdnTimeout: 5.637376656633329
          enable: true
          tlsIngestProfileId: 1
          cacheableErrorResponseCodes:
          - null
          - null
          - null
          - null
          - null
          storagePartitionId: 1
          enableSiteRedirects: true
        - errorCacheMaxRetry: 5
          edgeHostname: edgeHostname
          originTimeout: 61
          enableRequestIdExport: false
          hostnameOverride: hostnameOverride
          cacheKeyOriginHostnameOriginId: 1
          dynamicHierarchy:
            healthCheckUrl: https://openapi-generator.tech
            healthCheckValidResponseCodes:
            - null
            - null
            - null
            - null
            - null
            healthCheckInterval: 1
          enableAuthenticatedContent: false
          errorCacheMaxAge: 24
          contentProviderId: 1
          hostname: hostname
          resolvableHostnames:
          - resolvableHostnames
          - resolvableHostnames
          - resolvableHostnames
          - resolvableHostnames
          - resolvableHostnames
          originId: 1
          fastReroute:
            originTimeout: 5.962133916683182
            enable: false
            intraCdnTimeout: 5.637376656633329
          enable: true
          tlsIngestProfileId: 1
          cacheableErrorResponseCodes:
          - null
          - null
          - null
          - null
          - null
          storagePartitionId: 1
          enableSiteRedirects: true
        page:
          totalResults: 6
          pageNumber: 1
          totalPages: 0
          pageSize: 5
      properties:
        page:
          $ref: '#/components/schemas/pageType'
        origins:
          items:
            $ref: '#/components/schemas/origin_3'
          type: array
      required:
      - origins
      - page
      type: object
    shared-secret-set_1:
      description: Shared secret set object schema definition.  Shared secrets are
        used for URI signing, which is used as an authorization method for content
        delivery.
      example:
        name: name
        sharedSecretSetId: 1
        contentProviderId: 1
      properties:
        contentProviderId:
          minimum: 1
          type: integer
        name:
          maxLength: 128
          minLength: 1
          type: string
        sharedSecretSetId:
          minimum: 1
          type: integer
      required:
      - contentProviderId
      - name
      - sharedSecretSetId
      type: object
    tls-delivery-profile_1:
      description: TLS delivery Profile object schema definition.
      example:
        tlsCertificate: tlsCertificate
        enableClientAuth: false
        description: description
        tlsCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        contentProviderId: 1
        tlsCertificateKey: tlsCertificateKey
        caCertificateSecretId: 1
        tlsProtocols:
        - SSLV2
        - SSLV2
        tlsDeliveryProfileId: 1
        crlDetails:
          thisUpdate: 2000-01-23T04:56:07.000+00:00
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          revokedCertificates:
          - '{}'
          - '{}'
          nextUpdate: 2000-01-23T04:56:07.000+00:00
        cipherSuites: cipherSuites
        tlsCertificateAndKeySecretId: 1
        name: name
        ciphers: ciphers
        caCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        crl: crl
        caCertificate: caCertificate
        tlsVerificationDepth: 6
      properties:
        tlsDeliveryProfileId:
          minimum: 1
          type: integer
        tlsCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        tlsCertificateAndKeySecretId:
          minimum: 1
          type: integer
        name:
          maxLength: 128
          minLength: 1
          type: string
        ciphers:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9!+\-@=.:|, ]+$
          type: string
        caCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        caCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        contentProviderId:
          minimum: 1
          type: integer
        caCertificateSecretId:
          minimum: 1
          type: integer
        tlsVerificationDepth:
          description: Sets the verification depth in the client certificates chain.
          maximum: 10
          minimum: 1
          type: integer
        crlDetails:
          $ref: '#/components/schemas/x509CrlSummaryType'
        tlsCertificateKey:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        ecdhCurve:
          $ref: '#/components/schemas/ecdhCurveType'
        tlsCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        tlsProtocols:
          default:
          - TLSV1_2
          - TLSV1_3
          description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, `TLSV1_2`,
            or `TLSV1_3`.  Defaults to `TLSV1_2`, `TLSV1_3`.  The use of `SSLV2` or
            `SSLV3` are discouraged for security reasons.
          items:
            description: TLS protocol value.
            enum:
            - SSLV2
            - SSLV3
            - TLSV1
            - TLSV1_1
            - TLSV1_2
            - TLSV1_3
            type: string
          minItems: 1
          type: array
        cipherSuites:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9_:]+$
          type: string
        tlsBufferSize:
          $ref: '#/components/schemas/tlsBufferSizeType'
        enableClientAuth:
          default: false
          description: Allows you to enable or disable client authorization. Enabling
            this feature causes HyperCache to authenticate client certificates using
            the CA certificate for each TLS connection.
          type: boolean
        crl:
          description: Certificate Revocation List. An OpenSSL PEM-formatted list
            of revoked client certificates.
          maxLength: 10000
          type: string
        description:
          maxLength: 1024
          type: string
      required:
      - contentProviderId
      - name
      - tlsDeliveryProfileId
      type: object
    cdn-prefix_2:
      description: CdnPrefix collection
      example:
        cdnPrefixes:
        - siteMapId: 1
          keepaliveRequests: 70614
          accessMapId: 1
          enable: true
          prefix: prefix
          ipAddressTagId: 1
          dnsTtl: 776546568
          contentProviderId: 1
          cdnPrefixId: 1
        - siteMapId: 1
          keepaliveRequests: 70614
          accessMapId: 1
          enable: true
          prefix: prefix
          ipAddressTagId: 1
          dnsTtl: 776546568
          contentProviderId: 1
          cdnPrefixId: 1
        page:
          totalResults: 6
          pageNumber: 1
          totalPages: 0
          pageSize: 5
      properties:
        page:
          $ref: '#/components/schemas/pageType'
        cdnPrefixes:
          items:
            $ref: '#/components/schemas/cdn-prefix_3'
          type: array
      required:
      - cdnPrefixes
      - page
      type: object
    tls-ingest-profile_1:
      description: A list of TLS ingest profiles.
      example:
        tlsDeliveryProfiles:
        - enableClientAuth: false
          clientTlsCertificateKey: clientTlsCertificateKey
          clientTlsCertificate: clientTlsCertificate
          description: description
          contentProviderId: 1
          clientTlsCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          tlsProtocols:
          - SSLV2
          - SSLV2
          crlDetails:
            thisUpdate: 2000-01-23T04:56:07.000+00:00
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            revokedCertificates:
            - '{}'
            - '{}'
            nextUpdate: 2000-01-23T04:56:07.000+00:00
          cipherSuites: cipherSuites
          caCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          ciphers: ciphers
          name: name
          tlsIngestProfileId: 1
          crl: crl
          caCertificate: caCertificate
        - enableClientAuth: false
          clientTlsCertificateKey: clientTlsCertificateKey
          clientTlsCertificate: clientTlsCertificate
          description: description
          contentProviderId: 1
          clientTlsCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          tlsProtocols:
          - SSLV2
          - SSLV2
          crlDetails:
            thisUpdate: 2000-01-23T04:56:07.000+00:00
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            revokedCertificates:
            - '{}'
            - '{}'
            nextUpdate: 2000-01-23T04:56:07.000+00:00
          cipherSuites: cipherSuites
          caCertificateDetails:
            issuedTo:
              commonName: commonName
              serial: serial
              organization: organization
              organizationalUnit: organizationalUnit
            issuedBy:
              commonName: commonName
              organization: organization
              organizationalUnit: organizationalUnit
            validity:
              notAfter: 2000-01-23T04:56:07.000+00:00
              notBefore: 2000-01-23T04:56:07.000+00:00
            fingerprints:
              sha256Fingerprint: sha256Fingerprint
              sha1Fingerprint: sha1Fingerprint
          ciphers: ciphers
          name: name
          tlsIngestProfileId: 1
          crl: crl
          caCertificate: caCertificate
        page:
          totalResults: 6
          pageNumber: 1
          totalPages: 0
          pageSize: 5
      properties:
        tlsDeliveryProfiles:
          items:
            $ref: '#/components/schemas/tls-ingest-profile_3'
          type: array
        page:
          $ref: '#/components/schemas/pageType'
      required:
      - page
      - tlsIngestProfiles
      type: object
    content-provider:
      description: A Content Provider is an organization that has content it wants
        to deliver via the LCDN.
      example:
        serviceProviderId: 1
        enable: true
        name: name
        account: account
        contentProviderId: 1
      properties:
        contentProviderId:
          minimum: 1
          type: integer
        enable:
          default: true
          type: boolean
        serviceProviderId:
          minimum: 1
          type: integer
        account:
          maxLength: 20
          minLength: 1
          pattern: ^[a-z0-9]*$
          type: string
        name:
          maxLength: 254
          minLength: 1
          type: string
      required:
      - account
      - contentProviderId
      - name
      - serviceProviderId
      type: object
    shared-secret-set_2:
      description: Create one or more shared secrets for a content provider.  Shared
        secrets are used for URI signing, which is used as an authorization method
        for content delivery.
      properties:
        contentProviderId:
          minimum: 1
          type: integer
        name:
          maxLength: 128
          minLength: 1
          type: string
      required:
      - contentProviderId
      - name
      type: object
    tls-delivery-profile_2:
      description: TLS delivery profile create
      properties:
        tlsCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        tlsCertificateAndKeySecretId:
          minimum: 1
          type: integer
        name:
          maxLength: 128
          minLength: 1
          type: string
        ciphers:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9!+\-@=.:|, ]+$
          type: string
        caCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        caCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        contentProviderId:
          minimum: 1
          type: integer
        caCertificateSecretId:
          minimum: 1
          type: integer
        tlsVerificationDepth:
          description: Sets the verification depth in the client certificates chain.
          maximum: 10
          minimum: 1
          type: integer
        tlsBufferSize:
          $ref: '#/components/schemas/tlsBufferSizeType'
        tlsCertificateKey:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        ecdhCurve:
          $ref: '#/components/schemas/ecdhCurveType'
        tlsCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        tlsProtocols:
          default:
          - TLSV1_2
          - TLSV1_3
          description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, `TLSV1_2`,
            or `TLSV1_3`.  Defaults to `TLSV1_2`, `TLSV1_3`.  The use of `SSLV2` or
            `SSLV3` are discouraged for security reasons.
          items:
            description: TLS protocol value.
            enum:
            - SSLV2
            - SSLV3
            - TLSV1
            - TLSV1_1
            - TLSV1_2
            - TLSV1_3
            type: string
          minItems: 1
          type: array
        cipherSuites:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9_:]+$
          type: string
        enableClientAuth:
          default: false
          description: Allows you to enable or disable client authorization. Enabling
            this feature causes HyperCache to authenticate client certificates using
            the CA certificate for each TLS connection.
          type: boolean
        crl:
          description: Certificate Revocation List. An OpenSSL PEM-formatted list
            of revoked client certificates.
          maxLength: 10000
          type: string
        description:
          maxLength: 1024
          type: string
      required:
      - contentProviderId
      - name
      type: object
    tls-ingest-profile_2:
      description: TLS ingest profile create
      properties:
        clientTlsCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
        caCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        caCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        contentProviderId:
          minimum: 1
          type: integer
        ciphers:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9!+\-@=.:|, ]+$
          type: string
        tlsProtocols:
          default:
          - TLSV1_2
          description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, or `TLSV1_2`.
            Defaults to `TLSV1_2`.  The use of `SSLV2` or `SSLV3` are discouraged
            for security reasons.
          items:
            description: TLS protocol value.
            enum:
            - SSLV2
            - SSLV3
            - TLSV1
            - TLSV1_1
            - TLSV1_2
            type: string
          minItems: 1
          type: array
        cipherSuites:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9_:]+$
          type: string
        clientTlsCertificateKey:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        clientTlsCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        enableClientAuth:
          default: false
          description: Allows you to enable or disable client authorization. Enabling
            this feature causes HyperCache to authenticate client certificates using
            the CA certificate for each TLS connection.
          type: boolean
        crl:
          description: Certificate Revocation List. An OpenSSL PEM-formatted list
            of revoked client certificates.
          maxLength: 10000
          type: string
        description:
          maxLength: 1024
          type: string
      required:
      - contentProviderId
      - name
      type: object
    origin_2:
      description: Origin create
      properties:
        hostname:
          format: hostname
          type: string
        cachingType:
          $ref: '#/components/schemas/cachingType'
        hostnameOverride:
          description: A DNS hostname to use when connecting to the origin instead
            of that specified by the `hostname` field.  A port may be optionally specified
            by using hostname:port format.
          format: hostname
          type: string
        ipAddressTypes:
          default:
          - IPV6
          - IPV4
          description: A list of `IPv4` and `IPv6` address types, in order of preference,
            that may be used to communicate with this origin server. 'IPv6' and 'IPv4'
            are enabled by default, and 'IPv6' is preferred.
          items:
            enum:
            - IPV4
            - IPV6
            type: string
          maxItems: 2
          minItems: 1
          type: array
        storagePartitionId:
          minimum: 1
          type: integer
        edgeHostType:
          $ref: '#/components/schemas/edgeHostType'
        cacheKeyOriginHostnameOriginId:
          minimum: 1
          type: integer
        contentProviderId:
          minimum: 1
          type: integer
        fastReroute:
          $ref: '#/components/schemas/fastRerouteType'
        enableSiteRedirects:
          default: true
          description: Determines whether or not HyperCache redirects a client to
            a better site based on the rules in the site map. Enabling this to `true`
            allows the HyperCache to adhere to the LCDN site map configured using
            the request router service. If set to `false`, cache miss client requests
            to a CDN prefix that uses this origin server as a default result in a
            HyperCache request for the content directly to the origin server.
          type: boolean
        interSiteProtocol:
          $ref: '#/components/schemas/protocolType'
        enableRequestIdExport:
          default: false
          description: Causes the Hypercache to send its internal request ID to the
            origin server when ingesting content.
          type: boolean
        enable:
          default: true
          type: boolean
        enableAuthenticatedContent:
          default: false
          description: Causes the HyperCache to send a HEAD request to the origin
            server for each client request. If the response is a status code of 2XX,
            the content is served to the client. Otherwise, the origin's status code
            is returned. This typically occurs when the origin server authenticates
            the client request using a cookie, token, or other means. Default is `false`.
          type: boolean
        dynamicHierarchy:
          $ref: '#/components/schemas/dynamicHierarchyType'
        tlsIngestProfileId:
          minimum: 1
          type: integer
        intraSiteProtocol:
          $ref: '#/components/schemas/protocolType'
        cacheableErrorResponseCodes:
          description: 'A list of HTTP status codes that the HPC caches. Each item
            is a single status code or range of status codes, where the starting code
            must be less than the ending code. For example, `209` and `310-320` are
            both valid. The following status codes are not allowed, either in single
            code, or as part of a range: 200, 203, 206, 300, 301, 410, 416.'
          items:
            $ref: '#/components/schemas/httpResponseCodeRangeType'
          maxItems: 256
          type: array
        resolvableHostnames:
          description: A list of virtual hosts, origin servers with resolvable hostnames.
            These resolvable hostnames are used by DNS to determine the IP addresses
            of the destination origin server.
          items:
            description: Origin server hostname.
            format: hostname
            maxLength: 256
            minLength: 1
            type: string
          maxItems: 50
          type: array
        errorCacheMaxRetry:
          description: The maximum number of retries in the case of an error response.
          maximum: 16
          minimum: 0
          type: integer
        edgeHostname:
          format: hostname
          type: string
        originTimeout:
          default: 300
          description: Origin idle connection timeout in seconds, specifies the length
            of time the HPC waits for a response to a request from an origin. If no
            response is received from an origin server within the configured timeout
            value, four additional attempts are made to the same origin server. If
            no response is received for the final request within the configured timeout,
            then that connection is terminated, and a 504 response is sent to the
            requesting client.
          maximum: 300
          minimum: 1
          type: integer
        errorCacheMaxAge:
          description: The maximum amount of time the HTTP status codes is cached
            by the HPC.
          maximum: 60
          minimum: 0
          type: integer
      required:
      - contentProviderId
      - hostname
      type: object
    content-provider_1:
      description: ContentProvider collection
      example:
        contentProviders:
        - name: name
          contentProviderId: 1
        - name: name
          contentProviderId: 1
        page:
          totalResults: 6
          pageNumber: 1
          totalPages: 0
          pageSize: 5
      properties:
        page:
          $ref: '#/components/schemas/pageType'
        contentProviders:
          items:
            $ref: '#/components/schemas/content-provider_2'
          type: array
      required:
      - contentProviders
      - page
      type: object
    hostnameType:
      format: hostname
      type: string
    cachingType:
      default: OPTIMISTIC
      description: Determines whether to validate requests for cached content with
        the origin server. With default `OPTIMISTIC` caching, the HyperCache serves
        cached content without validating the content with the origin server, unless
        the content is expired. With `CONSERVATIVE` caching, every cache request is
        validated with the origin server by sending an HTTP HEAD request. If the content
        is stale, the HyperCache node gets the new content from the origin server.
        The old content ages out of the cache.
      enum:
      - CONSERVATIVE
      - OPTIMISTIC
      type: string
    hostnameOverrideType:
      description: A DNS hostname to use when connecting to the origin instead of
        that specified by the `hostname` field.  A port may be optionally specified
        by using hostname:port format.
      format: hostname
      type: string
    positiveInteger:
      minimum: 1
      type: integer
    ipAddressTypesType:
      default:
      - IPV6
      - IPV4
      description: A list of `IPv4` and `IPv6` address types, in order of preference,
        that may be used to communicate with this origin server. 'IPv6' and 'IPv4'
        are enabled by default, and 'IPv6' is preferred.
      items:
        enum:
        - IPV4
        - IPV6
        type: string
      maxItems: 2
      minItems: 1
      type: array
    edgeHostType:
      default: HTTP
      description: Indicates whether the origin server is an `AEX` (Aura Edge eXchange)
        server, or `HTTP`, the default.
      enum:
      - HTTP
      - AEX
      type: string
    fastRerouteType:
      description: Enables a HyperCache node to detect failed or slow connections
        to a specific origin IP address, or between Sites, and to send a second request
        to an alternate origin IP (or site) if the first request is delayed. If a
        successful response is received from either origin IP (or site), the first
        response is used to fulfill a client's request. The second response, if received,
        is ignored. If no connection to either destination is established, or if no
        response is received within the configured origin timeout value, the requests
        to the origin (or site) are retried four times before a 504 is returned to
        the client. This method helps ensure rapid recovery in case a temporary network
        problem results in loss of the initial request or response.
      example:
        originTimeout: 5.962133916683182
        enable: false
        intraCdnTimeout: 5.637376656633329
      properties:
        originTimeout:
          default: 1.0
          description: 'Value used by the HyperCache when it makes a request directly
            to the origin server. It specifies the number of seconds you want the
            HyperCache to wait before sending the second request to an alternate origin
            IP address. The number of seconds configured can be expressed to the nearest
            thousandth of a second, for example: 4, 3.0, 1.05, 2.005. Note that the
            configured value for this field must be at least 0.5 seconds less than
            the `intraCdnTimeout`.'
          type: number
        enable:
          default: false
          description: Enables Fast Reroute functionality.
          type: boolean
        intraCdnTimeout:
          default: 1.5
          description: 'Used by the HyperCache when it makes a request to an origin
            through a parent site or a peer node within the same site. It specifies
            the number of seconds you want the HyperCache in one site to wait before
            sending the second request to an alternate site. The number of seconds
            configured can be expressed to the nearest thousandth of a second, for
            example: 4, 3.0, 1.05, 2.005. Note that the configured value for this
            field must be at least 0.5 seconds greater than the `originTimeout`.'
          type: number
      type: object
    enableSiteRedirectsType:
      default: true
      description: Determines whether or not HyperCache redirects a client to a better
        site based on the rules in the site map. Enabling this to `true` allows the
        HyperCache to adhere to the LCDN site map configured using the request router
        service. If set to `false`, cache miss client requests to a CDN prefix that
        uses this origin server as a default result in a HyperCache request for the
        content directly to the origin server.
      type: boolean
    protocolType:
      default: HTTP
      description: Type of protocol, either `HTTP` or `HTTPS`.
      enum:
      - HTTP
      - HTTPS
      type: string
    enableRequestIdExportType:
      default: false
      description: Causes the Hypercache to send its internal request ID to the origin
        server when ingesting content.
      type: boolean
    enableType:
      default: true
      type: boolean
    enableAuthenticatedContentType:
      default: false
      description: Causes the HyperCache to send a HEAD request to the origin server
        for each client request. If the response is a status code of 2XX, the content
        is served to the client. Otherwise, the origin's status code is returned.
        This typically occurs when the origin server authenticates the client request
        using a cookie, token, or other means. Default is `false`.
      type: boolean
    dynamicHierarchyType:
      description: Configure a HyperCache node that is the endpoint of an origin path
        (a root HyperCache) to monitor the health of the origin server by sending
        a GET request for a specific URL.
      example:
        healthCheckUrl: https://openapi-generator.tech
        healthCheckValidResponseCodes:
        - null
        - null
        - null
        - null
        - null
        healthCheckInterval: 1
      properties:
        healthCheckValidResponseCodes:
          description: A list of valid HTTP response codes that are to be considered
            a valid HTTP response. Each item is either a single valid response code
            or a range of valid response codes.
          items:
            $ref: '#/components/schemas/httpResponseCodeRangeType'
          maxItems: 256
          type: array
        healthCheckInterval:
          description: A numeric value that represents the number of seconds between
            successive HTTP GET health check requests. The minimum acceptable value
            is 1, and the default is 2.
          minimum: 1
          type: integer
        healthCheckUrl:
          description: URL the health check request uses to determine the health of
            the origin server. The HyperCache periodically sends an HTTP GET request
            for this URL to check the health of the origin server. Any response received
            is interpreted as a healthy origin, including error responses.  This URI
            may either be a complete URL using the 'http' scheme, or just a path with
            a leading '/'.
          format: uri
          type: string
      type: object
    cacheableErrorResponseCodesType:
      description: 'A list of HTTP status codes that the HPC caches. Each item is
        a single status code or range of status codes, where the starting code must
        be less than the ending code. For example, `209` and `310-320` are both valid.
        The following status codes are not allowed, either in single code, or as part
        of a range: 200, 203, 206, 300, 301, 410, 416.'
      items:
        $ref: '#/components/schemas/httpResponseCodeRangeType'
      maxItems: 256
      type: array
    resolvableHostnamesType:
      description: A list of virtual hosts, origin servers with resolvable hostnames.
        These resolvable hostnames are used by DNS to determine the IP addresses of
        the destination origin server.
      items:
        description: Origin server hostname.
        format: hostname
        maxLength: 256
        minLength: 1
        type: string
      maxItems: 50
      type: array
    errorCacheMaxRetryType:
      description: The maximum number of retries in the case of an error response.
      maximum: 16
      minimum: 0
      type: integer
    originTimeoutType:
      default: 300
      description: Origin idle connection timeout in seconds, specifies the length
        of time the HPC waits for a response to a request from an origin. If no response
        is received from an origin server within the configured timeout value, four
        additional attempts are made to the same origin server. If no response is
        received for the final request within the configured timeout, then that connection
        is terminated, and a 504 response is sent to the requesting client.
      maximum: 300
      minimum: 1
      type: integer
    errorCacheMaxAgeType:
      description: The maximum amount of time the HTTP status codes is cached by the
        HPC.
      maximum: 60
      minimum: 0
      type: integer
    prefixPrioritizationType:
      default: HIGH
      description: Prefix prioritization helps manage peak period resources by prioritizing
        requests for content from specific content providers. Priorities are `LOW`,
        `MEDIUM`, or `HIGH`.
      enum:
      - HIGH
      - MEDIUM
      - LOW
      type: string
    keepAliveRequestsType:
      description: Sets the maximum number of requests that can be served through
        one keep-alive connection. After the maximum number of requests are made,
        the connection is closed.
      maximum: 100000
      minimum: 0
      type: integer
    prefixType:
      description: The CDN prefix registered on behalf of the content provider. For
        example, `cdn.example.com`.
      format: hostname
      maxLength: 128
      minLength: 1
      type: string
    dnsTtlType:
      description: DNS response time-to-live (TTL) value for this CDN prefix, in seconds.
        Note that setting this field is only recommended for CDN operators.
      maximum: 2147483647
      minimum: 0
      type: integer
    tls-delivery-profile_3:
      description: TLS delivery profile summary read
      example:
        tlsCertificate: tlsCertificate
        enableClientAuth: false
        description: description
        tlsCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        contentProviderId: 1
        tlsCertificateKey: tlsCertificateKey
        tlsProtocols:
        - SSLV2
        - SSLV2
        tlsDeliveryProfileId: 1
        crlDetails:
          thisUpdate: 2000-01-23T04:56:07.000+00:00
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          revokedCertificates:
          - '{}'
          - '{}'
          nextUpdate: 2000-01-23T04:56:07.000+00:00
        cipherSuites: cipherSuites
        name: name
        caCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        crl: crl
        caCertificate: caCertificate
        tlsVerificationDepth: 2
      properties:
        tlsDeliveryProfileId:
          minimum: 1
          type: integer
        tlsCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
        caCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        caCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        contentProviderId:
          minimum: 1
          type: integer
        tlsVerificationDepth:
          description: Sets the verification depth in the client certificates chain.
          maximum: 10
          minimum: 1
          type: integer
        crlDetails:
          $ref: '#/components/schemas/x509CrlSummaryType'
        tlsCertificateKey:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        ecdhCurve:
          $ref: '#/components/schemas/ecdhCurveType'
        tlsCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        tlsProtocols:
          default:
          - TLSV1_2
          - TLSV1_3
          description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, `TLSV1_2`,
            or `TLSV1_3`.  Defaults to `TLSV1_2`, `TLSV1_3`.  The use of `SSLV2` or
            `SSLV3` are discouraged for security reasons.
          items:
            description: TLS protocol value.
            enum:
            - SSLV2
            - SSLV3
            - TLSV1
            - TLSV1_1
            - TLSV1_2
            - TLSV1_3
            type: string
          minItems: 1
          type: array
        cipherSuites:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9_:]+$
          type: string
        tlsBufferSize:
          $ref: '#/components/schemas/tlsBufferSizeType'
        enableClientAuth:
          default: false
          description: Allows you to enable or disable client authorization. Enabling
            this feature causes HyperCache to authenticate client certificates using
            the CA certificate for each TLS connection.
          type: boolean
        crl:
          description: Certificate Revocation List. An OpenSSL PEM-formatted list
            of revoked client certificates.
          maxLength: 10000
          type: string
        description:
          maxLength: 1024
          type: string
      required:
      - name
      - tlsDeliveryProfileId
      type: object
    pageType:
      description: Common page properties for search results.
      example:
        totalResults: 6
        pageNumber: 1
        totalPages: 0
        pageSize: 5
      properties:
        totalPages:
          description: Indicates the total number of pages, taking the pages size
            into consideration.
          type: integer
        totalResults:
          description: Indicates the total number of results from the search.
          type: integer
        pageNumber:
          description: Indicates the page number of the current results, given the
            page size.
          type: integer
        pageSize:
          description: Indicates the page size for the current results.
          type: integer
      required:
      - pageNumber
      - pageSize
    certificateType:
      description: An OpenSSL PEM-formatted certificate associated with the trusted
        CA that signed the origin's certificate.
      maxLength: 10000
      type: string
    descriptionType:
      maxLength: 1024
      type: string
    x509CertificateSummaryType:
      description: Summary information of a digital X.509 Certificate.
      example:
        issuedTo:
          commonName: commonName
          serial: serial
          organization: organization
          organizationalUnit: organizationalUnit
        issuedBy:
          commonName: commonName
          organization: organization
          organizationalUnit: organizationalUnit
        validity:
          notAfter: 2000-01-23T04:56:07.000+00:00
          notBefore: 2000-01-23T04:56:07.000+00:00
        fingerprints:
          sha256Fingerprint: sha256Fingerprint
          sha1Fingerprint: sha1Fingerprint
      properties:
        issuedBy:
          $ref: '#/components/schemas/x509CertificateSummaryType_issuedBy'
        fingerprints:
          $ref: '#/components/schemas/x509CertificateSummaryType_fingerprints'
        issuedTo:
          $ref: '#/components/schemas/x509CertificateSummaryType_issuedTo'
        validity:
          $ref: '#/components/schemas/x509CertificateSummaryType_validity'
      type: object
    tlsCiphersType:
      description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
      maxLength: 65535
      pattern: ^[A-Za-z0-9!+\-@=.:|, ]+$
      type: string
    x509CrlSummaryType:
      example:
        thisUpdate: 2000-01-23T04:56:07.000+00:00
        issuedBy:
          commonName: commonName
          organization: organization
          organizationalUnit: organizationalUnit
        revokedCertificates:
        - '{}'
        - '{}'
        nextUpdate: 2000-01-23T04:56:07.000+00:00
      properties:
        revokedCertificates:
          items:
            properties:
              serial:
                description: The serial of the revoked certificate.
                type: string
              revocationDate:
                description: Date/time the certificate was revoked.
                format: date-time
                type: string
          type: array
        nextUpdate:
          description: The date by which the next CRL will be issued.
          format: date-time
          type: string
        issuedBy:
          $ref: '#/components/schemas/x509CrlSummaryType_issuedBy'
        thisUpdate:
          description: The issue date of the current CRL.
          format: date-time
          type: string
      required:
      - issuedBy
      - nextUpdate
      - revokedCertificates
      - thisUpdate
    tlsIngestProtocolsType:
      default:
      - TLSV1_2
      description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, or `TLSV1_2`.
        Defaults to `TLSV1_2`.  The use of `SSLV2` or `SSLV3` are discouraged for
        security reasons.
      items:
        description: TLS protocol value.
        enum:
        - SSLV2
        - SSLV3
        - TLSV1
        - TLSV1_1
        - TLSV1_2
        type: string
      minItems: 1
      type: array
    tlsCipherSuitesType:
      description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
      maxLength: 65535
      pattern: ^[A-Za-z0-9_:]+$
      type: string
    enableClientAuthType:
      default: false
      description: Allows you to enable or disable client authorization. Enabling
        this feature causes HyperCache to authenticate client certificates using the
        CA certificate for each TLS connection.
      type: boolean
    crlType:
      description: Certificate Revocation List. An OpenSSL PEM-formatted list of revoked
        client certificates.
      maxLength: 10000
      type: string
    nameType:
      maxLength: 128
      minLength: 1
      type: string
    defaultBehaviors:
      items:
        $ref: '#/components/schemas/defaultBehaviorType'
      type: array
    defaultBehaviorType:
      description: Default behavior parent type
      discriminator:
        mapping:
          originServer: '#/components/schemas/defaultOriginServer'
          httpDelivery: '#/components/schemas/defaultHttpDelivery'
          httpsDelivery: '#/components/schemas/defaultHttpsDelivery'
          frontEndCache: '#/components/schemas/defaultFrontEndCache'
          storagePartition: '#/components/schemas/defaultStoragePartition'
          http2Delivery: '#/components/schemas/defaultHttp2Delivery'
          ramOnlyCaching: '#/components/schemas/defaultRamOnlyCaching'
        propertyName: name
      oneOf:
      - $ref: '#/components/schemas/defaultOriginServer'
      - $ref: '#/components/schemas/defaultHttpDelivery'
      - $ref: '#/components/schemas/defaultHttp2Delivery'
      - $ref: '#/components/schemas/defaultHttpsDelivery'
      - $ref: '#/components/schemas/defaultRamOnlyCaching'
      - $ref: '#/components/schemas/defaultFrontEndCache'
      - $ref: '#/components/schemas/defaultStoragePartition'
    defaultOriginServer:
      description: origin server used for ingesting content.
      properties:
        name:
          description: The name of the behavior, `originServer` in this case.
          type: string
        options:
          $ref: '#/components/schemas/defaultOriginServer_options'
      required:
      - name
      - options
      title: origin server
      type: object
    defaultHttpDelivery:
      description: Default setting for HTTP Delivery.
      properties:
        name:
          description: The name of the behavior, `httpDelivery` in this case.
          type: string
        options:
          $ref: '#/components/schemas/defaultHttpDelivery_options'
      required:
      - name
      - options
      title: HTTP Delivery
      type: object
    defaultHttp2Delivery:
      description: Default setting for HTTP2 Delivery.
      properties:
        name:
          description: The name of the behavior, `http2Delivery` in this case.
          type: string
        options:
          $ref: '#/components/schemas/defaultHttp2Delivery_options'
      required:
      - name
      - options
      title: HTTP2 Delivery
      type: object
    defaultHttpsDelivery:
      description: Default setting for HTTPS Delivery.
      properties:
        name:
          description: The name of the behavior, `httpsDelivery` in this case.
          type: string
        options:
          $ref: '#/components/schemas/defaultHttpsDelivery_options'
      required:
      - name
      - options
      title: HTTPS Delivery
      type: object
    defaultRamOnlyCaching:
      description: Enables or disables caching of specific types of content to RAM
        only memory.
      properties:
        name:
          description: The name of the behavior, `ramOnlyCaching` in this case.
          type: string
        options:
          $ref: '#/components/schemas/defaultRamOnlyCaching_options'
      required:
      - name
      - options
      title: Ram only Caching
      type: object
    defaultFrontEndCache:
      description: Enable or disable caching of specific types of content to front-end
        memory. This stores entire objects in HPC nodes, not chunks.
      properties:
        name:
          description: The name of the behavior, `frontEndCache` in this case.
          type: string
        options:
          $ref: '#/components/schemas/defaultFrontEndCache_options'
      required:
      - name
      - options
      title: Front-End Cache Enable
      type: object
    defaultStoragePartition:
      description: Specifies HyperCache partitions to reserve hard disk space for
        certain content types.
      properties:
        name:
          description: The name of the behavior, `storagePartition` in this case.
          type: string
        options:
          $ref: '#/components/schemas/defaultStoragePartition_options'
      required:
      - name
      - options
      title: Storage Partition
      type: object
    behaviors:
      items:
        $ref: '#/components/schemas/behaviorType'
      type: array
    behaviorType:
      description: Behavior parent type
      discriminator:
        mapping:
          cors: '#/components/schemas/cors'
          followRedirect: '#/components/schemas/followRedirect'
          cacheControlOverride: '#/components/schemas/cacheControlOverride'
          purgeKeyUri: '#/components/schemas/purgeKeyUri'
          limitRate: '#/components/schemas/limitRate'
          lastMileAcceleration: '#/components/schemas/lastMileAcceleration'
          fastcgiAuth: '#/components/schemas/fastcgiAuth'
          storagePartition: '#/components/schemas/storagePartition'
          siteRedirectMode: '#/components/schemas/siteRedirectMode'
          dscp: '#/components/schemas/dscp'
          originServerUri: '#/components/schemas/originServerUri'
          originRangeRequest: '#/components/schemas/originRangeRequest'
          externalOriginAuth: '#/components/schemas/externalOriginAuth'
          excludedQueryArguments: '#/components/schemas/excludedQueryArguments'
          frontEndCache: '#/components/schemas/frontEndCache'
          udpSyslogAccessLog: '#/components/schemas/udpSyslogAccessLog'
          originAffinityUri: '#/components/schemas/originAffinityUri'
          siteRedirectType: '#/components/schemas/siteRedirectType'
          chunkSize: '#/components/schemas/chunkSize'
          cacheKeyUri: '#/components/schemas/cacheKeyUri'
          originServer: '#/components/schemas/originServer'
          httpDelivery: '#/components/schemas/httpDelivery'
          httpsDelivery: '#/components/schemas/httpsDelivery'
          ramOnlyCaching: '#/components/schemas/ramOnlyCaching'
          uriSignature: '#/components/schemas/uriSignature'
          http2Delivery: '#/components/schemas/http2Delivery'
        propertyName: name
      oneOf:
      - $ref: '#/components/schemas/originServer'
      - $ref: '#/components/schemas/ramOnlyCaching'
      - $ref: '#/components/schemas/cacheKeyUri'
      - $ref: '#/components/schemas/purgeKeyUri'
      - $ref: '#/components/schemas/excludedQueryArguments'
      - $ref: '#/components/schemas/fastcgiAuth'
      - $ref: '#/components/schemas/externalOriginAuth'
      - $ref: '#/components/schemas/cors'
      - $ref: '#/components/schemas/dscp'
      - $ref: '#/components/schemas/siteRedirectMode'
      - $ref: '#/components/schemas/siteRedirectType'
      - $ref: '#/components/schemas/limitRate'
      - $ref: '#/components/schemas/httpDelivery'
      - $ref: '#/components/schemas/http2Delivery'
      - $ref: '#/components/schemas/httpsDelivery'
      - $ref: '#/components/schemas/originAffinityUri'
      - $ref: '#/components/schemas/cacheControlOverride'
      - $ref: '#/components/schemas/followRedirect'
      - $ref: '#/components/schemas/frontEndCache'
      - $ref: '#/components/schemas/originRangeRequest'
      - $ref: '#/components/schemas/originServerUri'
      - $ref: '#/components/schemas/uriSignature'
      - $ref: '#/components/schemas/lastMileAcceleration'
      - $ref: '#/components/schemas/storagePartition'
      - $ref: '#/components/schemas/chunkSize'
      - $ref: '#/components/schemas/udpSyslogAccessLog'
    originServer:
      description: origin server used for ingesting content.
      properties:
        name:
          description: The name of the behavior, `originServer` in this case.
          type: string
        options:
          $ref: '#/components/schemas/defaultOriginServer_options'
      required:
      - name
      - options
      title: origin server
      type: object
    ramOnlyCaching:
      description: Enables or disables caching of specific types of content to RAM
        only memory.
      properties:
        name:
          description: The name of the behavior, `ramOnlyCaching` in this case.
          type: string
        options:
          $ref: '#/components/schemas/defaultRamOnlyCaching_options'
      required:
      - name
      - options
      title: Ram only Caching
      type: object
    cacheKeyUri:
      description: URI pattern used by HyperCache for generating a cache key.
      properties:
        name:
          description: The name of the behavior, `cacheKeyUri` in this case.
          type: string
        options:
          $ref: '#/components/schemas/cacheKeyUri_options'
      required:
      - name
      - options
      title: Cache Key URI
      type: object
    purgeKeyUri:
      description: URI pattern used to identify assets to be purged using the Purge
        API. By default this value is the same as cache key URI.
      properties:
        name:
          description: The name of the behavior, `purgeKeyUri` in this case.
          type: string
        options:
          $ref: '#/components/schemas/purgeKeyUri_options'
      required:
      - name
      - options
      title: Purge Key URI
      type: object
    excludedQueryArguments:
      description: List of query arguments that should not be part of the cache key
        URI.
      properties:
        name:
          description: The name of the behavior, `excludedQueryArguments` in this
            case.
          type: string
        options:
          $ref: '#/components/schemas/excludedQueryArguments_options'
      required:
      - name
      - options
      title: Excluded Query Arguments
      type: object
    fastcgiAuth:
      description: Parameters associated with FastCGI Authentication.
      properties:
        name:
          description: The name of the behavior, `fastcgiAuth` in this case.
          type: string
        options:
          $ref: '#/components/schemas/fastcgiAuth_options'
      required:
      - name
      - options
      title: FastCGI Authentication
      type: object
    externalOriginAuth:
      description: Parameters associated with authentication with external origin
        server.
      properties:
        name:
          description: The name of the behavior, `externalOriginAuth` in this case.
          type: string
        options:
          $ref: '#/components/schemas/externalOriginAuth_options'
      required:
      - name
      - options
      title: External Origin Authorization Parameters
      type: object
    cors:
      description: Configuration of Cross-Origin Resource Sharing (CORS) response
        headers at the HyperCache for this rule.
      properties:
        name:
          description: The name of the behavior, `cors` in this case.
          type: string
        options:
          $ref: '#/components/schemas/cors_options'
      required:
      - name
      - options
      title: CORS response headers
    dscp:
      description: DiffServ byte field in the outgoing IP packets, typically used
        to prioritize, or generally schedule, traffic in an IP routed network.
      properties:
        name:
          description: The name of the behavior, `dscp` in this case.
          type: string
        options:
          $ref: '#/components/schemas/dscp_options'
      required:
      - name
      - options
      title: DiffServ
    siteRedirectMode:
      description: Enables site redirect mode for HyperCache to redirect requests
        to optimal sites if needed.
      properties:
        name:
          description: The name of the behavior, `siteRedirectMode` in this case.
          type: string
        options:
          $ref: '#/components/schemas/siteRedirectMode_options'
      required:
      - name
      - options
      title: Site Redirect Mode
    siteRedirectType:
      description: Site redirect type for HyperCache to make redirect decisions based
        on client IP or site information.
      properties:
        name:
          description: The name of the behavior, `siteRedirectType` in this case.
          type: string
        options:
          $ref: '#/components/schemas/siteRedirectType_options'
      required:
      - name
      - options
      title: Site Redirect Type
    limitRate:
      description: Limit bandwidth per session, in bytes per second.
      properties:
        name:
          description: The name of the behavior, `limitRate` in this case.
          type: string
        options:
          $ref: '#/components/schemas/limitRate_options'
      required:
      - name
      - options
      title: Limit Rate
    httpDelivery:
      description: Override default setting for HTTP delivery.
      properties:
        name:
          description: The name of the behavior, `httpDelivery` in this case.
          type: string
        options:
          $ref: '#/components/schemas/httpDelivery_options'
      required:
      - name
      - options
      title: HTTP Delivery
      type: object
    http2Delivery:
      description: Override default setting for HTTP2 delivery.
      properties:
        name:
          description: The name of the behavior, `http2Delivery` in this case.
          type: string
        options:
          $ref: '#/components/schemas/httpDelivery_options'
      required:
      - name
      - options
      title: HTTP2 Delivery
      type: object
    httpsDelivery:
      description: Override default setting for HTTPS delivery.
      properties:
        name:
          description: The name of the behavior, `httpsDelivery` in this case.
          type: string
        options:
          $ref: '#/components/schemas/httpDelivery_options'
      required:
      - name
      - options
      title: HTTPS Delivery
      type: object
    originAffinityUri:
      description: Define URI used for origin server affinity. Used when HyperCaches
        in a site should use the same origin server.
      properties:
        name:
          description: The name of the behavior, `originAffinityUri` in this case.
          type: string
        options:
          $ref: '#/components/schemas/originAffinityUri_options'
      required:
      - name
      - options
      title: Origin Affinity URI
      type: object
    cacheControlOverride:
      description: Ignore `Cache-Control`, overriding `Cache-Control` at the HyperCache
        with the provided value when caching contents. This override value does not
        modify any received `Cache-Control` headers or insert any missing `Cache-Control`
        headers. `Origin` headers remain intact when sent to the client.
      properties:
        name:
          description: The name of the behavior, `cacheControlOverride` in this case.
          type: string
        options:
          $ref: '#/components/schemas/cacheControlOverride_options'
      required:
      - name
      - options
      title: Cache control override
      type: object
    followRedirect:
      description: Control the behavior of the HyperCache when it receives a 302 Redirect
        from the Origin.
      properties:
        name:
          description: The name of the behavior, `followRedirect` in this case.
          type: string
        options:
          $ref: '#/components/schemas/followRedirect_options'
      required:
      - name
      - options
      title: Follow redirect Enable
      type: object
    frontEndCache:
      description: Enable or disable caching of specific types of content to front-end
        memory. This stores entire objects in HPC nodes, not chunks.
      properties:
        name:
          description: The name of the behavior, `frontEndCache` in this case.
          type: string
        options:
          $ref: '#/components/schemas/defaultFrontEndCache_options'
      required:
      - name
      - options
      title: Front-End Cache Enable
      type: object
    originRangeRequest:
      description: To allow range requests from HyperCache to the origin server when
        ingesting content.
      properties:
        name:
          description: The name of the behavior, `originRangeRequest` in this case.
          type: string
        options:
          $ref: '#/components/schemas/originRangeRequest_options'
      required:
      - name
      - options
      title: Suppress or allow range requests for ingest
    originServerUri:
      description: Define URI used for accessing origin server in case of a cache
        miss.
      properties:
        name:
          description: The name of the behavior, `originServerUri` in this case.
          type: string
        options:
          $ref: '#/components/schemas/originServerUri_options'
      required:
      - name
      - options
      title: Origin Server URI
      type: object
    uriSignature:
      description: The URI signature pattern provides a mechanism to express URI signing
        parameters and mechanisms to be enforced across an entire CDN prefix, or for
        a narrower subset of a CDN prefix identified by a particular URI pattern.
      properties:
        name:
          description: The name of the behavior, `uriSignature` in this case.
          type: string
        options:
          $ref: '#/components/schemas/uriSignature_options'
      required:
      - name
      - options
      title: URI Signature Verification
    lastMileAcceleration:
      description: Compress contents using GZIP before sending them out from edge
        HyperCaches to supported clients.
      properties:
        name:
          description: The name of the behavior, `lastMileAcceleration` in this case.
          type: string
        options:
          $ref: '#/components/schemas/lastMileAcceleration_options'
      required:
      - name
      - options
      title: Last Mile Acceleration
    storagePartition:
      description: Specifies HyperCache partitions to reserve hard disk space for
        certain content types.
      properties:
        name:
          description: The name of the behavior, `storagePartition` in this case.
          type: string
        options:
          $ref: '#/components/schemas/defaultStoragePartition_options'
      required:
      - name
      - options
      title: Storage Partition
      type: object
    chunkSize:
      description: Chunk size for the asset, used for tuning the HyperCache internal
        chunk size.
      properties:
        name:
          description: The name of the behavior, `chunkSize` in this case.
          type: string
        options:
          $ref: '#/components/schemas/chunkSize_options'
      required:
      - name
      - options
      title: ChunkSize
    udpSyslogAccessLog:
      description: Parameters associated with UDP Syslog access log feature.
      properties:
        name:
          description: The name of the behavior, `udpSyslogAccessLog` in this case.
          type: string
        options:
          $ref: '#/components/schemas/udpSyslogAccessLog_options'
      required:
      - name
      - options
      title: UDP Syslog Access Log
    criterion:
      description: An object that specifies URI filters to match.
      example:
        name: uriFilter
        options:
          uriFilterValue: uriFilterValue
          uriFilterType: EXACT_MATCH
      properties:
        name:
          description: The name of the criterion, `uriFilter` in this case.
          enum:
          - uriFilter
          type: string
        options:
          $ref: '#/components/schemas/criterion_options'
      required:
      - name
      - options
      type: object
    shared-secret-set_3:
      description: Read one or more shared secrets for a content provider.  Shared
        secrets are used for URI signing, which is used as an authorization method
        for content delivery.
      example:
        name: name
        sharedSecretSetId: 1
        contentProviderId: 1
      properties:
        contentProviderId:
          minimum: 1
          type: integer
        name:
          maxLength: 128
          minLength: 1
          type: string
        sharedSecretSetId:
          minimum: 1
          type: integer
      required:
      - name
      - sharedSecretSetId
      type: object
    origin_3:
      description: Origin summary read
      example:
        errorCacheMaxRetry: 5
        edgeHostname: edgeHostname
        originTimeout: 61
        enableRequestIdExport: false
        hostnameOverride: hostnameOverride
        cacheKeyOriginHostnameOriginId: 1
        dynamicHierarchy:
          healthCheckUrl: https://openapi-generator.tech
          healthCheckValidResponseCodes:
          - null
          - null
          - null
          - null
          - null
          healthCheckInterval: 1
        enableAuthenticatedContent: false
        errorCacheMaxAge: 24
        contentProviderId: 1
        hostname: hostname
        resolvableHostnames:
        - resolvableHostnames
        - resolvableHostnames
        - resolvableHostnames
        - resolvableHostnames
        - resolvableHostnames
        originId: 1
        fastReroute:
          originTimeout: 5.962133916683182
          enable: false
          intraCdnTimeout: 5.637376656633329
        enable: true
        tlsIngestProfileId: 1
        cacheableErrorResponseCodes:
        - null
        - null
        - null
        - null
        - null
        storagePartitionId: 1
        enableSiteRedirects: true
      properties:
        hostname:
          format: hostname
          type: string
        cachingType:
          $ref: '#/components/schemas/cachingType'
        hostnameOverride:
          description: A DNS hostname to use when connecting to the origin instead
            of that specified by the `hostname` field.  A port may be optionally specified
            by using hostname:port format.
          format: hostname
          type: string
        storagePartitionId:
          minimum: 1
          type: integer
        edgeHostType:
          $ref: '#/components/schemas/edgeHostType'
        cacheKeyOriginHostnameOriginId:
          minimum: 1
          type: integer
        contentProviderId:
          minimum: 1
          type: integer
        fastReroute:
          $ref: '#/components/schemas/fastRerouteType'
        enableSiteRedirects:
          default: true
          description: Determines whether or not HyperCache redirects a client to
            a better site based on the rules in the site map. Enabling this to `true`
            allows the HyperCache to adhere to the LCDN site map configured using
            the request router service. If set to `false`, cache miss client requests
            to a CDN prefix that uses this origin server as a default result in a
            HyperCache request for the content directly to the origin server.
          type: boolean
        interSiteProtocol:
          $ref: '#/components/schemas/protocolType'
        enableRequestIdExport:
          default: false
          description: Causes the Hypercache to send its internal request ID to the
            origin server when ingesting content.
          type: boolean
        originId:
          minimum: 1
          type: integer
        enable:
          default: true
          type: boolean
        enableAuthenticatedContent:
          default: false
          description: Causes the HyperCache to send a HEAD request to the origin
            server for each client request. If the response is a status code of 2XX,
            the content is served to the client. Otherwise, the origin's status code
            is returned. This typically occurs when the origin server authenticates
            the client request using a cookie, token, or other means. Default is `false`.
          type: boolean
        dynamicHierarchy:
          $ref: '#/components/schemas/dynamicHierarchyType'
        tlsIngestProfileId:
          minimum: 1
          type: integer
        intraSiteProtocol:
          $ref: '#/components/schemas/protocolType'
        cacheableErrorResponseCodes:
          description: 'A list of HTTP status codes that the HPC caches. Each item
            is a single status code or range of status codes, where the starting code
            must be less than the ending code. For example, `209` and `310-320` are
            both valid. The following status codes are not allowed, either in single
            code, or as part of a range: 200, 203, 206, 300, 301, 410, 416.'
          items:
            $ref: '#/components/schemas/httpResponseCodeRangeType'
          maxItems: 256
          type: array
        resolvableHostnames:
          description: A list of virtual hosts, origin servers with resolvable hostnames.
            These resolvable hostnames are used by DNS to determine the IP addresses
            of the destination origin server.
          items:
            description: Origin server hostname.
            format: hostname
            maxLength: 256
            minLength: 1
            type: string
          maxItems: 50
          type: array
        errorCacheMaxRetry:
          description: The maximum number of retries in the case of an error response.
          maximum: 16
          minimum: 0
          type: integer
        edgeHostname:
          format: hostname
          type: string
        originTimeout:
          default: 300
          description: Origin idle connection timeout in seconds, specifies the length
            of time the HPC waits for a response to a request from an origin. If no
            response is received from an origin server within the configured timeout
            value, four additional attempts are made to the same origin server. If
            no response is received for the final request within the configured timeout,
            then that connection is terminated, and a 504 response is sent to the
            requesting client.
          maximum: 300
          minimum: 1
          type: integer
        errorCacheMaxAge:
          description: The maximum amount of time the HTTP status codes is cached
            by the HPC.
          maximum: 60
          minimum: 0
          type: integer
      required:
      - hostname
      - originId
      type: object
    tlsVerificationDepthType:
      description: Sets the verification depth in the client certificates chain.
      maximum: 10
      minimum: 1
      type: integer
    ecdhCurveType:
      description: Elliptic Curve Diffie-Hellman (ECDH) protocol.  Specifies a curve
        for ECDHE ciphers.
      enum:
      - SECP384R1
      - PRIME256V1
      type: string
    tlsProtocolsType:
      default:
      - TLSV1_2
      - TLSV1_3
      description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, `TLSV1_2`,
        or `TLSV1_3`.  Defaults to `TLSV1_2`, `TLSV1_3`.  The use of `SSLV2` or `SSLV3`
        are discouraged for security reasons.
      items:
        description: TLS protocol value.
        enum:
        - SSLV2
        - SSLV3
        - TLSV1
        - TLSV1_1
        - TLSV1_2
        - TLSV1_3
        type: string
      minItems: 1
      type: array
    tlsBufferSizeType:
      description: Sets the size of the TLS buffer used for sending data (KB).
      enum:
      - 4
      - 16
      - 32
      type: integer
    cdn-prefix_3:
      description: CdnPrefix summary read
      example:
        siteMapId: 1
        keepaliveRequests: 70614
        accessMapId: 1
        enable: true
        prefix: prefix
        ipAddressTagId: 1
        dnsTtl: 776546568
        contentProviderId: 1
        cdnPrefixId: 1
      properties:
        enable:
          default: true
          type: boolean
        contentProviderId:
          minimum: 1
          type: integer
        siteMapId:
          minimum: 1
          type: integer
        prefixPrioritization:
          $ref: '#/components/schemas/prefixPrioritizationType'
        keepaliveRequests:
          description: Sets the maximum number of requests that can be served through
            one keep-alive connection. After the maximum number of requests are made,
            the connection is closed.
          maximum: 100000
          minimum: 0
          type: integer
        accessMapId:
          minimum: 1
          type: integer
        prefix:
          description: The CDN prefix registered on behalf of the content provider.
            For example, `cdn.example.com`.
          format: hostname
          maxLength: 128
          minLength: 1
          type: string
        dnsTtl:
          description: DNS response time-to-live (TTL) value for this CDN prefix,
            in seconds. Note that setting this field is only recommended for CDN operators.
          maximum: 2147483647
          minimum: 0
          type: integer
        cdnPrefixId:
          minimum: 1
          type: integer
        ipAddressTagId:
          minimum: 1
          type: integer
      required:
      - cdnPrefixId
      - prefix
      type: object
    tls-ingest-profile_3:
      description: TLS ingest profile summary read
      example:
        enableClientAuth: false
        clientTlsCertificateKey: clientTlsCertificateKey
        clientTlsCertificate: clientTlsCertificate
        description: description
        contentProviderId: 1
        clientTlsCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        tlsProtocols:
        - SSLV2
        - SSLV2
        crlDetails:
          thisUpdate: 2000-01-23T04:56:07.000+00:00
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          revokedCertificates:
          - '{}'
          - '{}'
          nextUpdate: 2000-01-23T04:56:07.000+00:00
        cipherSuites: cipherSuites
        caCertificateDetails:
          issuedTo:
            commonName: commonName
            serial: serial
            organization: organization
            organizationalUnit: organizationalUnit
          issuedBy:
            commonName: commonName
            organization: organization
            organizationalUnit: organizationalUnit
          validity:
            notAfter: 2000-01-23T04:56:07.000+00:00
            notBefore: 2000-01-23T04:56:07.000+00:00
          fingerprints:
            sha256Fingerprint: sha256Fingerprint
            sha1Fingerprint: sha1Fingerprint
        ciphers: ciphers
        name: name
        tlsIngestProfileId: 1
        crl: crl
        caCertificate: caCertificate
      properties:
        clientTlsCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        description:
          maxLength: 1024
          type: string
        tlsIngestProfileId:
          minimum: 1
          type: integer
        caCertificate:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        caCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        contentProviderId:
          minimum: 1
          type: integer
        ciphers:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9!+\-@=.:|, ]+$
          type: string
        crlDetails:
          $ref: '#/components/schemas/x509CrlSummaryType'
        tlsProtocols:
          default:
          - TLSV1_2
          description: TLS protocols supported, either `TLSV1`, `TLSV1_1`, or `TLSV1_2`.
            Defaults to `TLSV1_2`.  The use of `SSLV2` or `SSLV3` are discouraged
            for security reasons.
          items:
            description: TLS protocol value.
            enum:
            - SSLV2
            - SSLV3
            - TLSV1
            - TLSV1_1
            - TLSV1_2
            type: string
          minItems: 1
          type: array
        cipherSuites:
          description: An OpenSSL style [ciphers string](https://www.openssl.org/docs/apps/ciphers.html#CIPHER-STRINGS).
          maxLength: 65535
          pattern: ^[A-Za-z0-9_:]+$
          type: string
        clientTlsCertificateKey:
          description: An OpenSSL PEM-formatted certificate associated with the trusted
            CA that signed the origin's certificate.
          maxLength: 10000
          type: string
        clientTlsCertificateDetails:
          $ref: '#/components/schemas/x509CertificateSummaryType'
        enableClientAuth:
          default: false
          description: Allows you to enable or disable client authorization. Enabling
            this feature causes HyperCache to authenticate client certificates using
            the CA certificate for each TLS connection.
          type: boolean
        crl:
          description: Certificate Revocation List. An OpenSSL PEM-formatted list
            of revoked client certificates.
          maxLength: 10000
          type: string
        name:
          maxLength: 128
          minLength: 1
          type: string
      required:
      - name
      - tlsIngestProfileId
      type: object
    accountType:
      maxLength: 20
      minLength: 1
      pattern: ^[a-z0-9]*$
      type: string
    providerNameType:
      maxLength: 254
      minLength: 1
      type: string
    content-provider_2:
      description: A Content Provider summary view.
      example:
        name: name
        contentProviderId: 1
      properties:
        contentProviderId:
          minimum: 1
          type: integer
        name:
          maxLength: 254
          minLength: 1
          type: string
      required:
      - contentProviderId
      - name
      type: object
    httpResponseCodeRangeType:
      description: Matches a single response code, or a range of codes.
      pattern: ^([1-9][0-9][0-9])(-[1-9][0-9][0-9])?$
      type: string
    deliveryOverrideType:
      default: DEFAULT
      description: Override default setting for a delivery setting (that is, HTTP
        or HTTPS), either `DEFAULT` or `DISABLE`. If `DEFAULT`, the delivery value
        is inherited from the default behaviors.
      enum:
      - DEFAULT
      - DISABLE
      type: string
    cdn_prefix_rules_children:
      example:
        criterion:
          name: uriFilter
          options:
            uriFilterValue: uriFilterValue
            uriFilterType: EXACT_MATCH
        behaviors:
        - null
        - null
        name: name
      properties:
        behaviors:
          items:
            $ref: '#/components/schemas/behaviorType'
          type: array
        criterion:
          $ref: '#/components/schemas/criterion'
        name:
          description: Name of the rule.
          maxLength: 128
          minLength: 1
          type: string
      required:
      - behaviors
      - criterion
      - name
      type: object
    x509CertificateSummaryType_issuedBy:
      description: A distinguished name (DN) that identifies the certificate authorizer.
      example:
        commonName: commonName
        organization: organization
        organizationalUnit: organizationalUnit
      properties:
        organization:
          description: The organization of the certificate authorizer.
          type: string
        commonName:
          description: The entity (user/web server/domain/hostname) associated with
            the certificate authorizer.
          type: string
        organizationalUnit:
          description: The organizational unit of the certificate issuer.
          type: string
      required:
      - commonName
      - organization
      - organizationalUnit
      type: object
    x509CertificateSummaryType_fingerprints:
      description: An abbreviated form of the public key of the certificate.
      example:
        sha256Fingerprint: sha256Fingerprint
        sha1Fingerprint: sha1Fingerprint
      properties:
        sha256Fingerprint:
          description: The fingerprint of the certificate using the SHA256 algorithm.
          type: string
        sha1Fingerprint:
          description: The fingerprint of the certificate using the SHA1 algorithm.
          type: string
      type: object
    x509CertificateSummaryType_issuedTo:
      description: A distinguished name (DN) that identifies the certificate owner.
      example:
        commonName: commonName
        serial: serial
        organization: organization
        organizationalUnit: organizationalUnit
      properties:
        organization:
          description: The organization of the certificate owner.
          type: string
        serial:
          description: A serial number that uniquely identifies the certificate.
          type: string
        commonName:
          description: A common name (CN) that identifies the host and domain name
            associated with the certificate.
          type: string
        organizationalUnit:
          description: The organizational unit of the certificate owner.
          type: string
      required:
      - commonName
      - organization
      - organizationalUnit
      - serial
      type: object
    x509CertificateSummaryType_validity:
      description: The validity time period of the certificate.
      example:
        notAfter: 2000-01-23T04:56:07.000+00:00
        notBefore: 2000-01-23T04:56:07.000+00:00
      properties:
        notAfter:
          description: The time and date on which the certificate is no longer valid.
          format: date-time
          type: string
        notBefore:
          description: The time and date on which the certificate is valid.
          format: date-time
          type: string
      type: object
    x509CrlSummaryType_issuedBy:
      example:
        commonName: commonName
        organization: organization
        organizationalUnit: organizationalUnit
      properties:
        organization:
          type: string
        commonName:
          type: string
        organizationalUnit:
          type: string
      required:
      - commonName
      - organization
      - organizationalUnit
      type: object
    defaultOriginServer_options:
      description: This behavior's set of configuration options.
      properties:
        originId:
          minimum: 1
          type: integer
      type: object
    defaultHttpDelivery_options:
      description: This behavior's set of configuration options.
      properties:
        enable:
          description: Enables default HTTP Delivery for this prefix.
          type: boolean
      required:
      - enable
      type: object
    defaultHttp2Delivery_options:
      description: This behavior's set of configuration options.
      properties:
        enable:
          description: Enables default HTTP2 Delivery for this prefix.
          type: boolean
      required:
      - enable
      type: object
    defaultHttpsDelivery_options:
      description: This behavior's set of configuration options.
      properties:
        tlsDeliveryProfileId:
          minimum: 1
          type: integer
        enable:
          description: Enables default HTTPS Delivery for this prefix.
          type: boolean
      required:
      - enable
      type: object
    defaultRamOnlyCaching_options:
      description: This behavior's set of configuration options.
      properties:
        enable:
          description: When enabled, all content matching the URI Filter is cached
            only in RAM.
          type: boolean
      required:
      - enable
      type: object
    defaultFrontEndCache_options:
      description: This behavior's set of configuration options.
      properties:
        enable:
          description: When enabled, all content matching the URI Filter is cached
            only in front-end memory.
          type: boolean
      required:
      - enable
      type: object
    defaultStoragePartition_options:
      description: This behavior's set of configuration options.
      properties:
        storagePartitionId:
          minimum: 1
          type: integer
      required:
      - storagePartitionId
      type: object
    cacheKeyUri_options:
      description: This behavior's set of configuration options.
      properties:
        value:
          description: The cache key URI pattern without query parameters. By default,
            all incoming query parameters are added to the cache key URI. By default,
            this value is also used for the purge key URI.
          maxLength: 4094
          minLength: 1
          type: string
      required:
      - value
      type: object
    purgeKeyUri_options:
      description: This behavior's set of configuration options.
      properties:
        value:
          description: An alternative object name (URI) to purge the object, in case
            the default value is not sufficient.
          maxLength: 4094
          minLength: 1
          type: string
      required:
      - value
      type: object
    excludedQueryArguments_options:
      description: This behavior's set of configuration options.
      properties:
        value:
          description: List of query arguments to exclude. Use wildcard (`*`) in a
            single entry to exclude all query arguments.
          items:
            description: Query argument to exclude.
            maxLength: 128
            minLength: 1
            type: string
          maxItems: 30
          type: array
      required:
      - value
      type: object
    fastcgiAuth_options:
      description: This behavior's set of configuration options.
      properties:
        role:
          description: Role set for the FastCGI Server, either `AUTHORIZER` or `RESPONDER`.
          enum:
          - AUTHORIZER
          - RESPONDER
          title: FastCGI Server Role
          type: string
        enable:
          description: Enables FastCGI Authentication.
          title: FastCGI Authorization
          type: boolean
        params:
          additionalProperties:
            maxLength: 4094
            minLength: 1
            type: string
          description: FastCGI parameters in map form.
          type: object
        server:
          description: Destination FastCGI server server:port, maximum length is 262,
            256 of which is for the hostname.
          maxLength: 262
          title: FastCGI Server
          type: string
        backupServers:
          description: List of backup destination FastCGI Servers, expressed as `server:port`.
          items:
            description: Servers in hostname:port format, so the maximum length is
              262, 256 of which is for the hostname.
            maxLength: 262
            type: string
          maxItems: 25
          title: Backup FastCGI Server
          type: array
      required:
      - enable
      - server
      type: object
    externalOriginAuth_options:
      description: This behavior's set of configuration options.
      properties:
        secretKey:
          description: External origin secret access key.
          maxLength: 2048
          minLength: 1
          title: External Origin Secret Access Key
          type: string
        region:
          description: External origin service region, such as `us-east-1` and `eu-central-1`.
          maxLength: 2048
          minLength: 1
          title: External Origin Service Region
          type: string
        signedHeaders:
          description: List of request headers included in authorization signature.
          items:
            maxLength: 128
            minLength: 1
            type: string
          maxItems: 30
          title: External Origin Signed Header List
          type: array
        accessKey:
          description: External Oorigin access key ID.
          maxLength: 2048
          minLength: 1
          title: External Origin Access Key ID
          type: string
        service:
          description: External origin service. The only available service is `AMAZON_AWS_S3`.
          enum:
          - AMAZON_AWS_S3
          title: External Origin Service
          type: string
      required:
      - accessKey
      - region
      - secretKey
      - service
      type: object
    cors_options_accessControlAllowOrigin:
      description: '`Access-Control-Allow-Origin` header source. Enter one of `allowRequestHttpOrigin`
        (allow access from any origin listed in the request `Origin` header), `allowAllOrigins`
        (`true` implies `*`), or `allowOrigins` (list of allowed origins) as an option.'
      properties:
        allowOrigins:
          items:
            description: Hostname, and potentially protocol prefix.
            maxLength: 256
            minLength: 1
            type: string
          maxItems: 50
          type: array
        allowAllOrigins:
          type: boolean
        allowRequestHttpOrigin:
          type: boolean
      type: object
    cors_options:
      description: This behavior's set of configuration options.
      properties:
        accessControlAllowMethods:
          description: '`Access-Control-Allow-Methods` method list. Enter a list of
            allowed methods or leave empty to use value of `Access-Control-Request-Method`
            header.'
          items:
            maxLength: 128
            minLength: 1
            type: string
          maxItems: 30
          type: array
        accessControlAllowOrigin:
          $ref: '#/components/schemas/cors_options_accessControlAllowOrigin'
        accessControlMaxAge:
          description: '`Access-Control-Max-Age` header value. Enter number of seconds
            for which client may cache preflight response or leave empty to use default
            of one day.'
          minimum: 0
          type: integer
        enablePreflight:
          description: Enables preflight requests.
          type: boolean
        accessControlExposeHeaders:
          description: '`Access-Control-Expose-Headers` header value.'
          items:
            maxLength: 128
            minLength: 1
            type: string
          maxItems: 30
          type: array
        accessControlAllowCredentials:
          description: '`Access-Control-Allow-Credentials` header value.'
          type: boolean
        accessControlAllowHeaders:
          description: '`Access-Control-Allow-Headers` header list. Enter a list of
            allowed headers or leave empty to use value of `Access-Control-Request-Headers`
            header.'
          items:
            description: '`Access-Control-Allow-Headers` header value.'
            maxLength: 128
            minLength: 1
            type: string
          maxItems: 30
          type: array
      type: object
    dscp_options:
      description: This behavior's set of configuration options.
      properties:
        value:
          description: DiffServ byte field, including the last two ECN bits. When
            configuring this field, the ECN bits must be set to 0 (zero), and only
            the upper 6 bits should be set.
          type: integer
      required:
      - value
      type: object
    siteRedirectMode_options:
      description: This behavior's set of configuration options.
      properties:
        enable:
          description: Enables site redirects.
          type: boolean
      required:
      - enable
      type: object
    siteRedirectType_options:
      description: This behavior's set of configuration options.
      properties:
        value:
          description: Whether to look at `CLIENT_IP` or `SITE` information when redirecting
            requests.
          enum:
          - CLIENT_IP
          - SITE
          type: string
      required:
      - value
      type: object
    limitRate_options:
      description: This behavior's set of configuration options.
      properties:
        bandwidth:
          description: The maximum bandwidth limit, as specified by the respective
            unit.
          minimum: 1
          type: integer
        unit:
          default: BYTES_PER_SECOND
          description: Bandwidth unit, either the default `BYTES_PER_SECOND`, `KB_PER_SECOND`,
            or `MB_PER_SECOND`.
          enum:
          - BYTES_PER_SECOND
          - KB_PER_SECOND
          - MB_PER_SECOND
          type: string
      required:
      - bandwidth
      type: object
    httpDelivery_options:
      description: This behavior's set of configuration options.
      properties:
        value:
          $ref: '#/components/schemas/deliveryOverrideType'
      required:
      - value
      type: object
    originAffinityUri_options:
      description: This behavior's set of configuration options.
      properties:
        value:
          description: A URI prefix pattern used to identify client requests to which
            the HPC applies origin affinity.
          maxLength: 4094
          minLength: 1
          type: string
      required:
      - value
      type: object
    cacheControlOverride_options:
      description: This behavior's set of configuration options.
      properties:
        value:
          description: The value of the `Cache-Control` header to be used on HTTP
            responses coming from the origin server.
          maxLength: 2048
          minLength: 1
          type: string
      required:
      - value
      type: object
    followRedirect_options:
      description: This behavior's set of configuration options.
      properties:
        enable:
          description: When enabled, pass on HTTP 302 redirects to the client.
          type: boolean
      required:
      - enable
      type: object
    originRangeRequest_options:
      description: This behavior's set of configuration options.
      properties:
        enable:
          description: When enabled, allows range requests to the origin.
          type: boolean
      required:
      - enable
      type: object
    originServerUri_options:
      description: This behavior's set of configuration options.
      properties:
        value:
          description: Specifies the URI used for accessing the origin server, for
            example `/a/b/foo.ts`.
          maxLength: 4094
          minLength: 1
          type: string
      required:
      - value
      type: object
    uriSignature_options:
      description: This behavior's set of configuration options.
      properties:
        sharedSecretIndexParameter:
          description: The name of the request parameter which contains the index
            for the shared secret.
          maxLength: 2048
          minLength: 1
          type: string
        inputParameterPattern:
          description: 'Specifies the set of input parameters and their order. The
            input parameter pattern can use parts of the incoming request, for example:
            `$url_signature_shared_secret,#uri?sid=$arg_sid&e=$arg_e`. To represent
            an expiration as a query argument, or with a cookie incoming URL, use
            `$uri_sign_expire`.'
          maxLength: 4094
          minLength: 1
          type: string
        algorithm:
          description: Signature calculation algorithm, either `SHA256`, `SHA384`,
            `SHA512`, `HMAC_MD5`, `HMAC_SHA1`, `HMAC_SHA256`, `HMAC_SHA384`, `HMAC_SHA512`,
            `MD5`, or `SHA1`.
          enum:
          - MD5
          - HMAC_MD5
          - SHA1
          - SHA256
          - SHA384
          - SHA512
          - HMAC_SHA1
          - HMAC_SHA256
          - HMAC_SHA384
          - HMAC_SHA512
          type: string
        protectedPathPattern:
          description: The name of the capture path in the URI filter above used as
            a cookie path string to define the protected file names or path.
          maxLength: 4094
          minLength: 1
          pattern: ^\$.*$
          type: string
        sharedSecretSetId:
          minimum: 1
          type: integer
        tokenEncoding:
          description: The encoding used for the token parameter, either `BASE64`,
            `HEX`, or `URL_SAFE_BASE64`.
          enum:
          - BASE64
          - URL_SAFE_BASE64
          - HEX
          type: string
        uriExpirationParameter:
          description: The name of the request parameter which contains the expiration
            time for the URI being examined.
          maxLength: 2048
          minLength: 1
          pattern: ^\$[a-zA-Z][0-9a-zA-Z_]*$
          type: string
        protectedSubFiles:
          description: Use cookies derived from master query arguments to protect
            files matching URI filter with no query arguments, such as child `.m3u8`
            and `.ts`.
          type: boolean
        inputParameterCapitalization:
          description: Specifies the capitalization used for transforming the input
            parameter before signature calculation. Either `LOWERCASE`, `UPPERCASE`,
            or `NO_CHANGE`.
          enum:
          - NO_CHANGE
          - LOWERCASE
          - UPPERCASE
          type: string
        tokenParameter:
          description: The name of the request parameter which contains the signature
            token.
          maxLength: 2048
          minLength: 1
          pattern: ^\$[a-zA-Z][0-9a-zA-Z_]*$
          type: string
      required:
      - algorithm
      - inputParameterPattern
      - sharedSecretIndexParameter
      - sharedSecretSetId
      - tokenEncoding
      - tokenParameter
      - uriExpirationParameter
      type: object
    lastMileAcceleration_options:
      description: This behavior's set of configuration options.
      properties:
        compressionLevel:
          default: 6
          description: GZIP compression level, 6 by default.
          maximum: 9
          minimum: 1
          type: integer
        contentTypes:
          description: List of acceptable MIME-Types for which LMA is enabled.
          items:
            maxLength: 46
            minLength: 1
            type: string
          maxItems: 30
          type: array
        enable:
          description: Feature enable/disable, or `null` to inherit settings from
            the global HyperCache configuration.
          type: boolean
        uaRestrict:
          description: Regular expression match on the `User-Agent` header to disable
            LMA for particular clients.
          format: regex
          maxLength: 4094
          minLength: 1
          type: string
      type: object
    chunkSize_options:
      description: This behavior's set of configuration options.
      properties:
        value:
          description: Size of the chunk for this content, in bytes.
          maximum: 16000000
          minimum: 0
          type: integer
      required:
      - value
      type: object
    udpSyslogAccessLog_options_servers:
      description: Server object to send logs to.
      properties:
        logFormat:
          description: The name of the log format to use as the default.  The log
            formats are defined by the operator.
          maxLength: 128
          minLength: 1
          type: string
        server:
          description: Server:\<port\> of syslog server.
          maxLength: 262
          type: string
      required:
      - server
      type: object
    udpSyslogAccessLog_options:
      description: This behavior's set of configuration options.
      properties:
        defaultLogFormat:
          description: The name of the log format to use as the default.  The log
            formats are defined by the operator.
          maxLength: 128
          minLength: 1
          title: Default log format
          type: string
        facility:
          default: LOCAL7
          description: 'The syslog facility to use when transmitting logs. Possible
            values: `LOCAL0`, `LOCAL1`, `LOCAL2`, `LOCAL3`, `LOCAL4`, `LOCAL5`, `LOCAL6`,
            `LOCAL7`, `KERN`, `USER`, `MAIL`, `DAEMON`, `AUTH`, `INTERN`, `LPR`, `NEWS`,
            `UUCP`, `CLOCK`, `AUTHPRIV`, `FTP`, `NTP`, `AUDIT`, `ALERT`, `CRON`. Default
            value: `LOCAL7`.'
          enum:
          - LOCAL0
          - LOCAL1
          - LOCAL2
          - LOCAL3
          - LOCAL4
          - LOCAL5
          - LOCAL6
          - LOCAL7
          - KERN
          - USER
          - MAIL
          - DAEMON
          - AUTH
          - INTERN
          - LPR
          - NEWS
          - UUCP
          - CLOCK
          - AUTHPRIV
          - FTP
          - NTP
          - AUDIT
          - ALERT
          - CRON
          type: string
        severity:
          default: INFO
          description: 'The syslog severity to use when transmitting logs. Possible
            values: `DEBUG`, `INFO`, `NOTICE`, `WARNING`, `ERROR`, `CRITICAL`, `ALERT`,
            `EMERGENCY`. Default value: `INFO`.'
          enum:
          - DEBUG
          - INFO
          - NOTICE
          - WARNING
          - ERROR
          - CRITICAL
          - ALERT
          - EMERGENCY
          type: string
        servers:
          description: List of servers to send logs to.  Maximum of 6.
          items:
            $ref: '#/components/schemas/udpSyslogAccessLog_options_servers'
          maxItems: 6
          type: array
      required:
      - defaultLogFormat
      type: object
    criterion_options:
      description: This criterion's set of configuration options.
      example:
        uriFilterValue: uriFilterValue
        uriFilterType: EXACT_MATCH
      properties:
        uriFilterType:
          description: The type of the filter to match URIs, either `EXACT_MATCH`,
            `PREFIX_MATCH`, `REGULAR_EXPRESSION_MATCH`, or `CASE_INSENSITIVE_REGULAR_EXPRESSION_MATCH`.
          enum:
          - EXACT_MATCH
          - PREFIX_MATCH
          - REGULAR_EXPRESSION_MATCH
          - CASE_INSENSITIVE_REGULAR_EXPRESSION_MATCH
          type: string
        uriFilterValue:
          description: Value of the filter used to match incoming URIs.
          maxLength: 2048
          minLength: 1
          type: string
      required:
      - uriFilterType
      - uriFilterValue
      type: object
  securitySchemes:
    oauth2:
      flows:
        clientCredentials:
          scopes: {}
          tokenUrl: /api/identity/v1/oauth/token
      type: oauth2
