/*
infrastructure

Aura Infrastructure API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infrastructure

import (
	"encoding/json"
)

// AttributeTypeCollection Attribute types collection.
type AttributeTypeCollection struct {
	AttributeTypes []AttributeType3 `json:"attributeTypes"`
	Page PageType `json:"page"`
}

// NewAttributeTypeCollection instantiates a new AttributeTypeCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttributeTypeCollection(attributeTypes []AttributeType3, page PageType) *AttributeTypeCollection {
	this := AttributeTypeCollection{}
	this.AttributeTypes = attributeTypes
	this.Page = page
	return &this
}

// NewAttributeTypeCollectionWithDefaults instantiates a new AttributeTypeCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttributeTypeCollectionWithDefaults() *AttributeTypeCollection {
	this := AttributeTypeCollection{}
	return &this
}

// GetAttributeTypes returns the AttributeTypes field value
func (o *AttributeTypeCollection) GetAttributeTypes() []AttributeType3 {
	if o == nil {
		var ret []AttributeType3
		return ret
	}

	return o.AttributeTypes
}

// GetAttributeTypesOk returns a tuple with the AttributeTypes field value
// and a boolean to check if the value has been set.
func (o *AttributeTypeCollection) GetAttributeTypesOk() (*[]AttributeType3, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AttributeTypes, true
}

// SetAttributeTypes sets field value
func (o *AttributeTypeCollection) SetAttributeTypes(v []AttributeType3) {
	o.AttributeTypes = v
}

// GetPage returns the Page field value
func (o *AttributeTypeCollection) GetPage() PageType {
	if o == nil {
		var ret PageType
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *AttributeTypeCollection) GetPageOk() (*PageType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *AttributeTypeCollection) SetPage(v PageType) {
	o.Page = v
}

func (o AttributeTypeCollection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["attributeTypes"] = o.AttributeTypes
	}
	if true {
		toSerialize["page"] = o.Page
	}
	return json.Marshal(toSerialize)
}

type NullableAttributeTypeCollection struct {
	value *AttributeTypeCollection
	isSet bool
}

func (v NullableAttributeTypeCollection) Get() *AttributeTypeCollection {
	return v.value
}

func (v *NullableAttributeTypeCollection) Set(val *AttributeTypeCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableAttributeTypeCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableAttributeTypeCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttributeTypeCollection(val *AttributeTypeCollection) *NullableAttributeTypeCollection {
	return &NullableAttributeTypeCollection{value: val, isSet: true}
}

func (v NullableAttributeTypeCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttributeTypeCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


