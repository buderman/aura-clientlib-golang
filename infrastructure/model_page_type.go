/*
infrastructure

Infrastructure API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infrastructure

import (
	"encoding/json"
)

// PageType Common page properties for search results.
type PageType struct {
	// Indicates the total number of pages, taking the pages size into consideration.
	TotalPages *int32 `json:"totalPages,omitempty"`
	// Indicates the total number of results from the search.
	TotalResults *int32 `json:"totalResults,omitempty"`
	// Indicates the page number of the current results, given the page size.
	PageNumber int32 `json:"pageNumber"`
	// Indicates the page size for the current results.
	PageSize int32 `json:"pageSize"`
}

// NewPageType instantiates a new PageType object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageType(pageNumber int32, pageSize int32) *PageType {
	this := PageType{}
	this.PageNumber = pageNumber
	this.PageSize = pageSize
	return &this
}

// NewPageTypeWithDefaults instantiates a new PageType object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageTypeWithDefaults() *PageType {
	this := PageType{}
	return &this
}

// GetTotalPages returns the TotalPages field value if set, zero value otherwise.
func (o *PageType) GetTotalPages() int32 {
	if o == nil || o.TotalPages == nil {
		var ret int32
		return ret
	}
	return *o.TotalPages
}

// GetTotalPagesOk returns a tuple with the TotalPages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageType) GetTotalPagesOk() (*int32, bool) {
	if o == nil || o.TotalPages == nil {
		return nil, false
	}
	return o.TotalPages, true
}

// HasTotalPages returns a boolean if a field has been set.
func (o *PageType) HasTotalPages() bool {
	if o != nil && o.TotalPages != nil {
		return true
	}

	return false
}

// SetTotalPages gets a reference to the given int32 and assigns it to the TotalPages field.
func (o *PageType) SetTotalPages(v int32) {
	o.TotalPages = &v
}

// GetTotalResults returns the TotalResults field value if set, zero value otherwise.
func (o *PageType) GetTotalResults() int32 {
	if o == nil || o.TotalResults == nil {
		var ret int32
		return ret
	}
	return *o.TotalResults
}

// GetTotalResultsOk returns a tuple with the TotalResults field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageType) GetTotalResultsOk() (*int32, bool) {
	if o == nil || o.TotalResults == nil {
		return nil, false
	}
	return o.TotalResults, true
}

// HasTotalResults returns a boolean if a field has been set.
func (o *PageType) HasTotalResults() bool {
	if o != nil && o.TotalResults != nil {
		return true
	}

	return false
}

// SetTotalResults gets a reference to the given int32 and assigns it to the TotalResults field.
func (o *PageType) SetTotalResults(v int32) {
	o.TotalResults = &v
}

// GetPageNumber returns the PageNumber field value
func (o *PageType) GetPageNumber() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageNumber
}

// GetPageNumberOk returns a tuple with the PageNumber field value
// and a boolean to check if the value has been set.
func (o *PageType) GetPageNumberOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PageNumber, true
}

// SetPageNumber sets field value
func (o *PageType) SetPageNumber(v int32) {
	o.PageNumber = v
}

// GetPageSize returns the PageSize field value
func (o *PageType) GetPageSize() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.PageSize
}

// GetPageSizeOk returns a tuple with the PageSize field value
// and a boolean to check if the value has been set.
func (o *PageType) GetPageSizeOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.PageSize, true
}

// SetPageSize sets field value
func (o *PageType) SetPageSize(v int32) {
	o.PageSize = v
}

func (o PageType) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.TotalPages != nil {
		toSerialize["totalPages"] = o.TotalPages
	}
	if o.TotalResults != nil {
		toSerialize["totalResults"] = o.TotalResults
	}
	if true {
		toSerialize["pageNumber"] = o.PageNumber
	}
	if true {
		toSerialize["pageSize"] = o.PageSize
	}
	return json.Marshal(toSerialize)
}

type NullablePageType struct {
	value *PageType
	isSet bool
}

func (v NullablePageType) Get() *PageType {
	return v.value
}

func (v *NullablePageType) Set(val *PageType) {
	v.value = val
	v.isSet = true
}

func (v NullablePageType) IsSet() bool {
	return v.isSet
}

func (v *NullablePageType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageType(val *PageType) *NullablePageType {
	return &NullablePageType{value: val, isSet: true}
}

func (v NullablePageType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


