/*
infrastructure

Infrastructure API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package infrastructure

import (
	"encoding/json"
)

// SiteCreate  A site assigns a name to a group of nodes.
type SiteCreate struct {
	// The unique name for this site.
	Name string `json:"name"`
	// A shortened name for this site.
	AbbreviatedName string `json:"abbreviatedName"`
}

// NewSiteCreate instantiates a new SiteCreate object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSiteCreate(name string, abbreviatedName string) *SiteCreate {
	this := SiteCreate{}
	this.Name = name
	this.AbbreviatedName = abbreviatedName
	return &this
}

// NewSiteCreateWithDefaults instantiates a new SiteCreate object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSiteCreateWithDefaults() *SiteCreate {
	this := SiteCreate{}
	return &this
}

// GetName returns the Name field value
func (o *SiteCreate) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *SiteCreate) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *SiteCreate) SetName(v string) {
	o.Name = v
}

// GetAbbreviatedName returns the AbbreviatedName field value
func (o *SiteCreate) GetAbbreviatedName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.AbbreviatedName
}

// GetAbbreviatedNameOk returns a tuple with the AbbreviatedName field value
// and a boolean to check if the value has been set.
func (o *SiteCreate) GetAbbreviatedNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.AbbreviatedName, true
}

// SetAbbreviatedName sets field value
func (o *SiteCreate) SetAbbreviatedName(v string) {
	o.AbbreviatedName = v
}

func (o SiteCreate) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["name"] = o.Name
	}
	if true {
		toSerialize["abbreviatedName"] = o.AbbreviatedName
	}
	return json.Marshal(toSerialize)
}

type NullableSiteCreate struct {
	value *SiteCreate
	isSet bool
}

func (v NullableSiteCreate) Get() *SiteCreate {
	return v.value
}

func (v *NullableSiteCreate) Set(val *SiteCreate) {
	v.value = val
	v.isSet = true
}

func (v NullableSiteCreate) IsSet() bool {
	return v.isSet
}

func (v *NullableSiteCreate) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSiteCreate(val *SiteCreate) *NullableSiteCreate {
	return &NullableSiteCreate{value: val, isSet: true}
}

func (v NullableSiteCreate) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSiteCreate) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


