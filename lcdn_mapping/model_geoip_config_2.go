/*
lcdn-mapping

LCDN Mapping API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lcdn_mapping

import (
	"encoding/json"
)

// GeoipConfig2 GeoIP config summary read schema.
type GeoipConfig2 struct {
	// The unique identifier for a GeoIP configuration.
	GeoipConfigId *int32 `json:"geoipConfigId,omitempty"`
	Type TypeType `json:"type"`
	// A unique name for the entity.
	Name string `json:"name"`
}

// NewGeoipConfig2 instantiates a new GeoipConfig2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeoipConfig2(type_ TypeType, name string) *GeoipConfig2 {
	this := GeoipConfig2{}
	this.Type = type_
	this.Name = name
	return &this
}

// NewGeoipConfig2WithDefaults instantiates a new GeoipConfig2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeoipConfig2WithDefaults() *GeoipConfig2 {
	this := GeoipConfig2{}
	return &this
}

// GetGeoipConfigId returns the GeoipConfigId field value if set, zero value otherwise.
func (o *GeoipConfig2) GetGeoipConfigId() int32 {
	if o == nil || o.GeoipConfigId == nil {
		var ret int32
		return ret
	}
	return *o.GeoipConfigId
}

// GetGeoipConfigIdOk returns a tuple with the GeoipConfigId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeoipConfig2) GetGeoipConfigIdOk() (*int32, bool) {
	if o == nil || o.GeoipConfigId == nil {
		return nil, false
	}
	return o.GeoipConfigId, true
}

// HasGeoipConfigId returns a boolean if a field has been set.
func (o *GeoipConfig2) HasGeoipConfigId() bool {
	if o != nil && o.GeoipConfigId != nil {
		return true
	}

	return false
}

// SetGeoipConfigId gets a reference to the given int32 and assigns it to the GeoipConfigId field.
func (o *GeoipConfig2) SetGeoipConfigId(v int32) {
	o.GeoipConfigId = &v
}

// GetType returns the Type field value
func (o *GeoipConfig2) GetType() TypeType {
	if o == nil {
		var ret TypeType
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *GeoipConfig2) GetTypeOk() (*TypeType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *GeoipConfig2) SetType(v TypeType) {
	o.Type = v
}

// GetName returns the Name field value
func (o *GeoipConfig2) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *GeoipConfig2) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *GeoipConfig2) SetName(v string) {
	o.Name = v
}

func (o GeoipConfig2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.GeoipConfigId != nil {
		toSerialize["geoipConfigId"] = o.GeoipConfigId
	}
	if true {
		toSerialize["type"] = o.Type
	}
	if true {
		toSerialize["name"] = o.Name
	}
	return json.Marshal(toSerialize)
}

type NullableGeoipConfig2 struct {
	value *GeoipConfig2
	isSet bool
}

func (v NullableGeoipConfig2) Get() *GeoipConfig2 {
	return v.value
}

func (v *NullableGeoipConfig2) Set(val *GeoipConfig2) {
	v.value = val
	v.isSet = true
}

func (v NullableGeoipConfig2) IsSet() bool {
	return v.isSet
}

func (v *NullableGeoipConfig2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeoipConfig2(val *GeoipConfig2) *NullableGeoipConfig2 {
	return &NullableGeoipConfig2{value: val, isSet: true}
}

func (v NullableGeoipConfig2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeoipConfig2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


