/*
lcdn-mapping

LCDN Mapping API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lcdn_mapping

import (
	"encoding/json"
	"time"
)

// BgpConfigReadDetailed BGP configuration object descriptions.
type BgpConfigReadDetailed struct {
	// The unique identifier for a BGP configuration.
	BgpConfigId int32 `json:"bgpConfigId"`
	// Timestamp of when the configuration was created.
	DateCreated *time.Time `json:"dateCreated,omitempty"`
	// A unique name for the entity.
	Name string `json:"name"`
	// Timestamp of when the configuration was last updated.
	LastUpdated *time.Time `json:"lastUpdated,omitempty"`
	// A description for the entity.
	Description *string `json:"description,omitempty"`
}

// NewBgpConfigReadDetailed instantiates a new BgpConfigReadDetailed object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpConfigReadDetailed(bgpConfigId int32, name string) *BgpConfigReadDetailed {
	this := BgpConfigReadDetailed{}
	this.BgpConfigId = bgpConfigId
	this.Name = name
	return &this
}

// NewBgpConfigReadDetailedWithDefaults instantiates a new BgpConfigReadDetailed object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpConfigReadDetailedWithDefaults() *BgpConfigReadDetailed {
	this := BgpConfigReadDetailed{}
	return &this
}

// GetBgpConfigId returns the BgpConfigId field value
func (o *BgpConfigReadDetailed) GetBgpConfigId() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.BgpConfigId
}

// GetBgpConfigIdOk returns a tuple with the BgpConfigId field value
// and a boolean to check if the value has been set.
func (o *BgpConfigReadDetailed) GetBgpConfigIdOk() (*int32, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BgpConfigId, true
}

// SetBgpConfigId sets field value
func (o *BgpConfigReadDetailed) SetBgpConfigId(v int32) {
	o.BgpConfigId = v
}

// GetDateCreated returns the DateCreated field value if set, zero value otherwise.
func (o *BgpConfigReadDetailed) GetDateCreated() time.Time {
	if o == nil || o.DateCreated == nil {
		var ret time.Time
		return ret
	}
	return *o.DateCreated
}

// GetDateCreatedOk returns a tuple with the DateCreated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConfigReadDetailed) GetDateCreatedOk() (*time.Time, bool) {
	if o == nil || o.DateCreated == nil {
		return nil, false
	}
	return o.DateCreated, true
}

// HasDateCreated returns a boolean if a field has been set.
func (o *BgpConfigReadDetailed) HasDateCreated() bool {
	if o != nil && o.DateCreated != nil {
		return true
	}

	return false
}

// SetDateCreated gets a reference to the given time.Time and assigns it to the DateCreated field.
func (o *BgpConfigReadDetailed) SetDateCreated(v time.Time) {
	o.DateCreated = &v
}

// GetName returns the Name field value
func (o *BgpConfigReadDetailed) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *BgpConfigReadDetailed) GetNameOk() (*string, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *BgpConfigReadDetailed) SetName(v string) {
	o.Name = v
}

// GetLastUpdated returns the LastUpdated field value if set, zero value otherwise.
func (o *BgpConfigReadDetailed) GetLastUpdated() time.Time {
	if o == nil || o.LastUpdated == nil {
		var ret time.Time
		return ret
	}
	return *o.LastUpdated
}

// GetLastUpdatedOk returns a tuple with the LastUpdated field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConfigReadDetailed) GetLastUpdatedOk() (*time.Time, bool) {
	if o == nil || o.LastUpdated == nil {
		return nil, false
	}
	return o.LastUpdated, true
}

// HasLastUpdated returns a boolean if a field has been set.
func (o *BgpConfigReadDetailed) HasLastUpdated() bool {
	if o != nil && o.LastUpdated != nil {
		return true
	}

	return false
}

// SetLastUpdated gets a reference to the given time.Time and assigns it to the LastUpdated field.
func (o *BgpConfigReadDetailed) SetLastUpdated(v time.Time) {
	o.LastUpdated = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *BgpConfigReadDetailed) GetDescription() string {
	if o == nil || o.Description == nil {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BgpConfigReadDetailed) GetDescriptionOk() (*string, bool) {
	if o == nil || o.Description == nil {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *BgpConfigReadDetailed) HasDescription() bool {
	if o != nil && o.Description != nil {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *BgpConfigReadDetailed) SetDescription(v string) {
	o.Description = &v
}

func (o BgpConfigReadDetailed) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bgpConfigId"] = o.BgpConfigId
	}
	if o.DateCreated != nil {
		toSerialize["dateCreated"] = o.DateCreated
	}
	if true {
		toSerialize["name"] = o.Name
	}
	if o.LastUpdated != nil {
		toSerialize["lastUpdated"] = o.LastUpdated
	}
	if o.Description != nil {
		toSerialize["description"] = o.Description
	}
	return json.Marshal(toSerialize)
}

type NullableBgpConfigReadDetailed struct {
	value *BgpConfigReadDetailed
	isSet bool
}

func (v NullableBgpConfigReadDetailed) Get() *BgpConfigReadDetailed {
	return v.value
}

func (v *NullableBgpConfigReadDetailed) Set(val *BgpConfigReadDetailed) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpConfigReadDetailed) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpConfigReadDetailed) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpConfigReadDetailed(val *BgpConfigReadDetailed) *NullableBgpConfigReadDetailed {
	return &NullableBgpConfigReadDetailed{value: val, isSet: true}
}

func (v NullableBgpConfigReadDetailed) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpConfigReadDetailed) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


