/*
lcdn-mapping

LCDN Mapping API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lcdn_mapping

import (
	"encoding/json"
)

// AccessMapCollection Access Map collection.
type AccessMapCollection struct {
	Maps []AccessMap `json:"maps"`
	Page PageType `json:"page"`
}

// NewAccessMapCollection instantiates a new AccessMapCollection object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessMapCollection(maps []AccessMap, page PageType) *AccessMapCollection {
	this := AccessMapCollection{}
	this.Maps = maps
	this.Page = page
	return &this
}

// NewAccessMapCollectionWithDefaults instantiates a new AccessMapCollection object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessMapCollectionWithDefaults() *AccessMapCollection {
	this := AccessMapCollection{}
	return &this
}

// GetMaps returns the Maps field value
func (o *AccessMapCollection) GetMaps() []AccessMap {
	if o == nil {
		var ret []AccessMap
		return ret
	}

	return o.Maps
}

// GetMapsOk returns a tuple with the Maps field value
// and a boolean to check if the value has been set.
func (o *AccessMapCollection) GetMapsOk() (*[]AccessMap, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Maps, true
}

// SetMaps sets field value
func (o *AccessMapCollection) SetMaps(v []AccessMap) {
	o.Maps = v
}

// GetPage returns the Page field value
func (o *AccessMapCollection) GetPage() PageType {
	if o == nil {
		var ret PageType
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *AccessMapCollection) GetPageOk() (*PageType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *AccessMapCollection) SetPage(v PageType) {
	o.Page = v
}

func (o AccessMapCollection) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["maps"] = o.Maps
	}
	if true {
		toSerialize["page"] = o.Page
	}
	return json.Marshal(toSerialize)
}

type NullableAccessMapCollection struct {
	value *AccessMapCollection
	isSet bool
}

func (v NullableAccessMapCollection) Get() *AccessMapCollection {
	return v.value
}

func (v *NullableAccessMapCollection) Set(val *AccessMapCollection) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessMapCollection) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessMapCollection) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessMapCollection(val *AccessMapCollection) *NullableAccessMapCollection {
	return &NullableAccessMapCollection{value: val, isSet: true}
}

func (v NullableAccessMapCollection) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessMapCollection) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


