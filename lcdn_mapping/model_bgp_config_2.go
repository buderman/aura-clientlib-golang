/*
lcdn-mapping

LCDN Mapping API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lcdn_mapping

import (
	"encoding/json"
)

// BgpConfig2 BGP config collection.
type BgpConfig2 struct {
	BgpConfigs []BgpConfig3 `json:"bgpConfigs"`
	Page PageType `json:"page"`
}

// NewBgpConfig2 instantiates a new BgpConfig2 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBgpConfig2(bgpConfigs []BgpConfig3, page PageType) *BgpConfig2 {
	this := BgpConfig2{}
	this.BgpConfigs = bgpConfigs
	this.Page = page
	return &this
}

// NewBgpConfig2WithDefaults instantiates a new BgpConfig2 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBgpConfig2WithDefaults() *BgpConfig2 {
	this := BgpConfig2{}
	return &this
}

// GetBgpConfigs returns the BgpConfigs field value
func (o *BgpConfig2) GetBgpConfigs() []BgpConfig3 {
	if o == nil {
		var ret []BgpConfig3
		return ret
	}

	return o.BgpConfigs
}

// GetBgpConfigsOk returns a tuple with the BgpConfigs field value
// and a boolean to check if the value has been set.
func (o *BgpConfig2) GetBgpConfigsOk() (*[]BgpConfig3, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.BgpConfigs, true
}

// SetBgpConfigs sets field value
func (o *BgpConfig2) SetBgpConfigs(v []BgpConfig3) {
	o.BgpConfigs = v
}

// GetPage returns the Page field value
func (o *BgpConfig2) GetPage() PageType {
	if o == nil {
		var ret PageType
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *BgpConfig2) GetPageOk() (*PageType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *BgpConfig2) SetPage(v PageType) {
	o.Page = v
}

func (o BgpConfig2) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if true {
		toSerialize["bgpConfigs"] = o.BgpConfigs
	}
	if true {
		toSerialize["page"] = o.Page
	}
	return json.Marshal(toSerialize)
}

type NullableBgpConfig2 struct {
	value *BgpConfig2
	isSet bool
}

func (v NullableBgpConfig2) Get() *BgpConfig2 {
	return v.value
}

func (v *NullableBgpConfig2) Set(val *BgpConfig2) {
	v.value = val
	v.isSet = true
}

func (v NullableBgpConfig2) IsSet() bool {
	return v.isSet
}

func (v *NullableBgpConfig2) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBgpConfig2(val *BgpConfig2) *NullableBgpConfig2 {
	return &NullableBgpConfig2{value: val, isSet: true}
}

func (v NullableBgpConfig2) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBgpConfig2) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


