/*
lcdn-mapping

LCDN Mapping API

API version: v1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package lcdn_mapping

import (
	"encoding/json"
)

// GeoipConfig1 GeoIP config collection.
type GeoipConfig1 struct {
	BgpConfigs *[]GeoipConfig2 `json:"bgpConfigs,omitempty"`
	Page PageType `json:"page"`
}

// NewGeoipConfig1 instantiates a new GeoipConfig1 object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGeoipConfig1(page PageType) *GeoipConfig1 {
	this := GeoipConfig1{}
	this.Page = page
	return &this
}

// NewGeoipConfig1WithDefaults instantiates a new GeoipConfig1 object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGeoipConfig1WithDefaults() *GeoipConfig1 {
	this := GeoipConfig1{}
	return &this
}

// GetBgpConfigs returns the BgpConfigs field value if set, zero value otherwise.
func (o *GeoipConfig1) GetBgpConfigs() []GeoipConfig2 {
	if o == nil || o.BgpConfigs == nil {
		var ret []GeoipConfig2
		return ret
	}
	return *o.BgpConfigs
}

// GetBgpConfigsOk returns a tuple with the BgpConfigs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GeoipConfig1) GetBgpConfigsOk() (*[]GeoipConfig2, bool) {
	if o == nil || o.BgpConfigs == nil {
		return nil, false
	}
	return o.BgpConfigs, true
}

// HasBgpConfigs returns a boolean if a field has been set.
func (o *GeoipConfig1) HasBgpConfigs() bool {
	if o != nil && o.BgpConfigs != nil {
		return true
	}

	return false
}

// SetBgpConfigs gets a reference to the given []GeoipConfig2 and assigns it to the BgpConfigs field.
func (o *GeoipConfig1) SetBgpConfigs(v []GeoipConfig2) {
	o.BgpConfigs = &v
}

// GetPage returns the Page field value
func (o *GeoipConfig1) GetPage() PageType {
	if o == nil {
		var ret PageType
		return ret
	}

	return o.Page
}

// GetPageOk returns a tuple with the Page field value
// and a boolean to check if the value has been set.
func (o *GeoipConfig1) GetPageOk() (*PageType, bool) {
	if o == nil  {
		return nil, false
	}
	return &o.Page, true
}

// SetPage sets field value
func (o *GeoipConfig1) SetPage(v PageType) {
	o.Page = v
}

func (o GeoipConfig1) MarshalJSON() ([]byte, error) {
	toSerialize := map[string]interface{}{}
	if o.BgpConfigs != nil {
		toSerialize["bgpConfigs"] = o.BgpConfigs
	}
	if true {
		toSerialize["page"] = o.Page
	}
	return json.Marshal(toSerialize)
}

type NullableGeoipConfig1 struct {
	value *GeoipConfig1
	isSet bool
}

func (v NullableGeoipConfig1) Get() *GeoipConfig1 {
	return v.value
}

func (v *NullableGeoipConfig1) Set(val *GeoipConfig1) {
	v.value = val
	v.isSet = true
}

func (v NullableGeoipConfig1) IsSet() bool {
	return v.isSet
}

func (v *NullableGeoipConfig1) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGeoipConfig1(val *GeoipConfig1) *NullableGeoipConfig1 {
	return &NullableGeoipConfig1{value: val, isSet: true}
}

func (v NullableGeoipConfig1) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGeoipConfig1) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


